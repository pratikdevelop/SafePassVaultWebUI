{
    "openapi": "3.0.0",
    "x-stoplight": {
        "id": "b0l8ada8niadl"
    },
    "info": {
        "title": "User Management API",
        "version": "1.0.0",
        "description": "API for managing users, authentication, and organizations."
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "description": "Local server"
        }
    ],
    "paths": {
        "/api/auth/users": {
            "get": {
                "summary": "Get a list of users",
                "description": "Retrieve a list of users from the database.",
                "responses": {
                    "200": {
                        "description": "Successful response with a list of users."
                    }
                },
                "x-stoplight": {
                    "id": "rnv3b0dczvab2"
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "summary": "Register a new user",
                "description": "Create a new user account by providing the necessary details.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "User's email address.",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "User's password.",
                                        "example": "password123"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Full name of the user.",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "description": "User's phone number.",
                                        "example": "+1234567890"
                                    },
                                    "billingAddress": {
                                        "type": "string",
                                        "description": "Billing address of the user.",
                                        "example": "1234 Elm Street, Apt 56"
                                    },
                                    "city": {
                                        "type": "string",
                                        "description": "City of residence.",
                                        "example": "Metropolis"
                                    },
                                    "state": {
                                        "type": "string",
                                        "description": "State of residence.",
                                        "example": "New York"
                                    },
                                    "postalCode": {
                                        "type": "string",
                                        "description": "Postal code.",
                                        "example": "10001"
                                    },
                                    "country": {
                                        "type": "string",
                                        "description": "Country of residence.",
                                        "example": "USA"
                                    },
                                    "publicKey": {
                                        "type": "string",
                                        "description": "Public key from the client (assumed passed in request body).",
                                        "example": "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA..."
                                    },
                                    "recoveryPhrase": {
                                        "type": "string",
                                        "description": "Recovery phrase for account recovery.",
                                        "example": "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password",
                                    "name",
                                    "publicKey"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered."
                    },
                    "400": {
                        "description": "Bad request, validation errors."
                    },
                    "409": {
                        "description": "Conflict, user already exists."
                    }
                },
                "x-stoplight": {
                    "id": "at8adnrydnf03"
                }
            }
        },
        "/api/auth/confirm-email": {
            "post": {
                "summary": "Confirm user email",
                "description": "Confirms the user's email address.",
                "responses": {
                    "200": {
                        "description": "Email successfully confirmed."
                    }
                },
                "x-stoplight": {
                    "id": "zbgojkg3qkm04"
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "summary": "User login",
                "description": "Logs in a user with the provided credentials.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "User's email address.",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "User's password.",
                                        "example": "password123"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully logged in.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "accessToken": {
                                            "type": "string",
                                            "description": "JWT access token issued for the user.",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        },
                                        "refreshToken": {
                                            "type": "string",
                                            "description": "JWT refresh token used for token renewal.",
                                            "example": "dGhpc19pcyBhdGVzdA=="
                                        }
                                    },
                                    "required": [
                                        "accessToken",
                                        "refreshToken"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, validation errors."
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials."
                    }
                },
                "x-stoplight": {
                    "id": "regravf0yu10h"
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "summary": "User logout",
                "description": "Logs out the currently authenticated user.",
                "responses": {
                    "200": {
                        "description": "User successfully logged out."
                    }
                },
                "x-stoplight": {
                    "id": "m0v4tgrdkeiqe"
                }
            }
        },
        "/api/auth/profile": {
            "get": {
                "summary": "Get user profile",
                "description": "Retrieve the profile details of the authenticated user.",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user profile."
                    }
                },
                "x-stoplight": {
                    "id": "6a7bzcm1xuhix"
                }
            },
            "patch": {
                "summary": "Update user profile",
                "description": "Update the profile details of the authenticated user.",
                "responses": {
                    "200": {
                        "description": "User profile updated successfully."
                    }
                },
                "x-stoplight": {
                    "id": "txihm1tkj7hah"
                }
            },
            "delete": {
                "summary": "Delete user profile",
                "description": "Delete the profile of the authenticated user.",
                "responses": {
                    "200": {
                        "description": "User profile deleted successfully."
                    }
                },
                "x-stoplight": {
                    "id": "i3et4yrsm4gq9"
                }
            }
        },
        "/api/auth/reset-password": {
            "post": {
                "summary": "Reset password",
                "description": "Sends a reset password email to the user.",
                "responses": {
                    "200": {
                        "description": "Reset password email sent successfully."
                    }
                },
                "x-stoplight": {
                    "id": "rmtmlj27vvtdq"
                }
            }
        },
        "/api/auth/change-password/{id}": {
            "patch": {
                "summary": "Change password",
                "description": "Change the password for the user with the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "ID of the user.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed successfully."
                    }
                },
                "x-stoplight": {
                    "id": "xqordbhxwiw1h"
                }
            }
        },
        "/api/auth/verify-reset-link": {
            "get": {
                "summary": "Verify reset link",
                "description": "Verifies the reset password link sent to the user.",
                "responses": {
                    "200": {
                        "description": "Reset link verified successfully."
                    }
                },
                "x-stoplight": {
                    "id": "3zrw6kcu9ht0n"
                }
            }
        },
        "/api/auth/organization": {
            "post": {
                "summary": "Create organization",
                "description": "Creates a new organization.",
                "responses": {
                    "201": {
                        "description": "Organization created successfully."
                    }
                },
                "x-stoplight": {
                    "id": "4otihqstad8c8"
                }
            }
        },
        "/api/auth/organizations": {
            "get": {
                "summary": "Get organizations",
                "description": "Retrieve a list of organizations.",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of organizations."
                    }
                },
                "x-stoplight": {
                    "id": "3tvzob4l5p18q"
                }
            }
        },
        "/api/auth/organizations/{organizationId}/invitations": {
            "post": {
                "summary": "Send invitation",
                "description": "Sends an invitation to a user to join an organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organizationId",
                        "required": true,
                        "description": "ID of the organization.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invitation sent successfully."
                    }
                },
                "x-stoplight": {
                    "id": "2wmgt8vk6otx7"
                }
            }
        },
        "/api/auth/accept-invitation": {
            "post": {
                "summary": "Accept invitation",
                "description": "Accepts an invitation to join an organization.",
                "responses": {
                    "200": {
                        "description": "Invitation accepted successfully."
                    }
                },
                "x-stoplight": {
                    "id": "1fcl7ubekx6n4"
                }
            }
        },
        "/api/auth/mfa-settings": {
            "post": {
                "summary": "Save MFA settings",
                "description": "Save the multi-factor authentication settings for a user.",
                "responses": {
                    "200": {
                        "description": "MFA settings saved successfully."
                    }
                },
                "x-stoplight": {
                    "id": "9dovh4rkkkts6"
                }
            }
        },
        "/api/auth/verify-mfa": {
            "post": {
                "summary": "Verify MFA code",
                "description": "Verify the multi-factor authentication code provided by the user.",
                "responses": {
                    "200": {
                        "description": "MFA code verified successfully."
                    }
                },
                "x-stoplight": {
                    "id": "z5br5kwcxlyd1"
                }
            }
        },
        "/api/auth/resend-invitation/{organizationId}/{recipientId}": {
            "post": {
                "summary": "Resend invitation",
                "description": "Resend an invitation to join an organization.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organizationId",
                        "required": true,
                        "description": "ID of the organization.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "recipientId",
                        "required": true,
                        "description": "ID of the recipient.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invitation resent successfully."
                    }
                },
                "x-stoplight": {
                    "id": "h3ajpzhi24uhg"
                }
            }
        },
        "/api/auth/resend-code/{email}": {
            "get": {
                "summary": "Resend confirmation code",
                "description": "Resend the confirmation code to the user's email.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "email",
                        "required": true,
                        "description": "User's email address.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirmation code resent successfully."
                    }
                },
                "x-stoplight": {
                    "id": "j0bss8os9c732"
                }
            }
        }
    }
}