var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.247,1,0.376]],["body/components/AdminComponent.html",[0,0.428,1,0.686,2,0.594,3,0.157,4,0.157,5,0.52,6,0.494,7,0.52,8,0.165,9,4.29,10,0.52,11,0.799,12,0.715,13,6.261,14,0.594,15,0.531,16,0.626,17,5.375,18,2.86,19,0.594,20,6.261,21,0.219,22,0.015,23,0.138,24,3.863,25,1.816,26,0.177,27,0.177,28,3.667,29,4.491,30,0.723,31,3.898,32,0.52,33,0.659,34,0.659,35,0.52,36,0.761,37,0.52,38,0.225,39,0.52,40,0.469,41,0.326,42,0.52,43,0.444,44,0.52,45,0.469,46,0.52,47,0.52,48,0.469,49,0.659,50,0.469,51,0.303,52,0.395,53,0.659,54,0.469,55,0.52,56,0.444,57,0.761,58,0.469,59,0.52,60,0.469,61,0.52,62,0.469,63,0.494,64,0.723,65,0.469,66,0.52,67,0.469,68,0.52,69,0.444,70,0.52,71,0.531,72,0.659,73,0.444,74,0.26,75,0.52,76,0.444,77,0.52,78,0.469,79,0.52,80,0.469,81,0.494,82,0.52,83,0.469,84,0.52,85,0.469,86,0.626,87,0.52,88,0.469,89,0.52,90,0.469,91,0.52,92,0.469,93,0.469,94,0.469,95,0.52,96,0.469,97,0.52,98,0.469,99,0.52,100,0.562,101,0.573,102,0.659,103,0.494,104,0.659,105,0.469,106,0.469,107,0.52,108,0.469,109,0.52,110,0.469,111,0.494,112,0.52,113,0.469,114,0.469,115,0.52,116,0.469,117,0.469,118,0.469,119,0.469,120,0.52,121,0.469,122,0.52,123,0.469,124,0.419,125,0.469,126,0.494,127,0.52,128,0.494,129,0.52,130,0.469,131,0.52,132,0.469,133,0.52,134,0.469,135,0.471,136,0.469,137,0.469,138,0.52,139,0.469,140,0.687,141,0.469,142,0.52,143,0.469,144,0.52,145,0.52,146,0.011,147,0.011]],["title/components/ApiDocsComponent.html",[0,0.247,40,0.376]],["body/components/ApiDocsComponent.html",[0,0.416,1,0.441,2,0.571,3,0.148,4,0.148,5,0.489,6,0.465,7,0.489,8,0.16,10,0.489,11,0.798,12,0.714,14,0.571,15,0.511,16,0.465,19,0.571,21,0.192,22,0.015,23,0.13,26,0.167,27,0.167,30,0.489,32,0.489,33,0.634,34,0.634,35,0.489,36,0.744,37,0.489,38,0.216,39,0.489,40,0.67,41,0.516,42,0.489,43,0.417,44,0.489,45,0.441,46,0.489,47,0.489,48,0.441,49,0.634,50,0.441,51,0.41,52,0.372,53,0.634,54,0.441,55,0.489,56,0.417,57,0.744,58,0.441,59,0.489,60,0.441,61,0.489,62,0.441,63,0.465,64,0.703,65,0.441,66,0.489,67,0.441,68,0.489,69,0.417,70,0.489,71,0.511,72,0.634,73,0.417,74,0.245,75,0.489,76,0.417,77,0.489,78,0.441,79,0.489,80,0.441,81,0.465,82,0.489,83,0.441,84,0.489,85,0.441,86,0.602,87,0.489,88,0.441,89,0.489,90,0.441,91,0.489,92,0.441,93,0.441,94,0.441,95,0.489,96,0.441,97,0.489,98,0.441,99,0.489,100,0.541,101,0.564,102,0.634,103,0.465,104,0.634,105,0.441,106,0.441,107,0.489,108,0.441,109,0.489,110,0.441,111,0.465,112,0.489,113,0.441,114,0.441,115,0.489,116,0.441,117,0.441,118,0.441,119,0.441,120,0.489,121,0.441,122,0.489,123,0.441,124,0.394,125,0.441,126,0.465,127,0.489,128,0.465,129,0.489,130,0.441,131,0.489,132,0.441,133,0.489,134,0.441,135,0.453,136,0.441,137,0.441,138,0.489,139,0.441,140,0.668,141,0.441,142,0.489,143,0.441,144,0.489,145,0.489,146,0.011,147,0.011,148,6.136,149,6.136,150,4.037,151,1.458,152,1.558,153,5.23,154,6.022,155,1.692,156,6.022,157,0.148,158,0.397,159,7.065,160,1.529,161,1.391,162,0.381,163,4.648,164,4.648,165,0.397,166,0.703,167,4.648,168,4.648,169,4.648,170,5.801,171,3.506,172,4.037,173,4.648,174,0.932,175,4.648,176,2.046,177,4.648,178,3.094,179,4.648,180,4.648,181,4.648,182,4.648,183,4.648,184,4.648,185,4.648,186,4.008,187,6.022,188,6.136,189,4.708]],["title/components/AppComponent.html",[0,0.247,43,0.356]],["body/components/AppComponent.html",[0,0.403,1,0.413,2,0.547,3,0.139,4,0.139,5,0.458,6,0.436,7,0.458,8,0.155,10,0.458,11,0.796,12,0.712,14,0.547,15,0.49,16,0.577,18,2.401,19,0.547,21,0.248,22,0.015,23,0.161,25,2.122,26,0.156,27,0.156,30,0.458,32,0.458,33,0.607,34,0.607,35,0.458,36,0.725,37,0.458,38,0.207,39,0.458,40,0.413,41,0.287,42,0.458,43,0.619,44,0.458,45,0.413,46,0.458,47,0.458,48,0.413,49,0.607,50,0.413,51,0.268,52,0.348,53,0.607,54,0.413,55,0.458,56,0.391,57,0.725,58,0.413,59,0.458,60,0.413,61,0.458,62,0.413,63,0.436,64,0.681,65,0.413,66,0.458,67,0.413,68,0.458,69,0.619,70,0.458,71,0.585,72,0.607,73,0.391,74,0.229,75,0.458,76,0.391,77,0.458,78,0.413,79,0.458,80,0.413,81,0.436,82,0.458,83,0.413,84,0.458,85,0.413,86,0.577,87,0.458,88,0.413,89,0.458,90,0.413,91,0.458,92,0.413,93,0.413,94,0.413,95,0.458,96,0.413,97,0.458,98,0.413,99,0.458,100,0.518,101,0.554,102,0.607,103,0.436,104,0.607,105,0.413,106,0.413,107,0.458,108,0.413,109,0.458,110,0.413,111,0.436,112,0.458,113,0.413,114,0.413,115,0.458,116,0.413,117,0.413,118,0.413,119,0.413,120,0.458,121,0.413,122,0.458,123,0.413,124,0.37,125,0.413,126,0.436,127,0.458,128,0.436,129,0.458,130,0.413,131,0.458,132,0.413,133,0.458,134,0.413,135,0.434,136,0.413,137,0.413,138,0.458,139,0.413,140,0.647,141,0.413,142,0.458,143,0.413,144,0.458,145,0.458,146,0.01,147,0.01,151,1.397,152,1.509,157,0.139,158,0.381,160,1.491,162,0.42,165,0.287,166,0.607,190,3.406,191,3.38,192,3.38,193,2.209,194,5.06,195,1.023,196,5.012,197,0.231,198,1.648,199,2.434,200,5.621,201,2.993,202,3.23,203,5.621,204,4.356,205,0.409,206,0.44,207,2.401,208,4.356,209,0.268,210,2.039,211,1.961,212,4.356,213,2.507,214,4.356,215,5.012,216,4.356,217,5.012,218,4.356,219,2.552,220,0.661,221,3.783,222,5.012,223,3.783,224,3.406,225,3.406,226,5.012,227,3.783,228,1.738,229,3.783,230,0.661,231,3.783,232,3.783,233,1.979,234,3.124,235,3.783,236,3.783,237,3.783,238,3.783,239,3.783,240,3.783,241,3.783,242,3.783,243,3.783,244,2.174,245,3.406,246,3.783,247,3.783,248,2.712,249,3.406,250,3.783]],["title/injectables/AuthService.html",[199,1.399,251,0.959]],["body/injectables/AuthService.html",[3,0.118,4,0.118,8,0.089,21,0.205,22,0.015,23,0.103,26,0.132,27,0.132,38,0.276,74,0.339,86,0.369,101,0.447,118,0.61,146,0.009,147,0.009,157,0.118,158,0.34,162,0.457,165,0.521,174,0.74,193,1.413,197,0.206,198,1.238,199,1.822,202,3.21,205,0.367,206,0.395,209,0.48,220,0.56,251,1.248,252,1.535,253,3.205,254,4.665,255,5.941,256,1.335,257,2.699,258,2.581,259,4.261,260,5.155,261,5.155,262,5.586,263,5.586,264,6.431,265,2.342,266,5.625,267,5.155,268,5.155,269,4.477,270,4.477,271,4.031,272,5.155,273,4.477,274,5.155,275,5.155,276,5.155,277,3.691,278,1.321,279,1.073,280,4.477,281,2.91,282,5.155,283,3.691,284,3.691,285,3.691,286,3.691,287,3.691,288,5.155,289,3.691,290,3.691,291,3.691,292,5.155,293,1.331,294,5.586,295,3.691,296,4.477,297,5.155,298,3.691,299,2.184,300,5.155,301,5.941,302,3.691,303,3.205,304,5.155,305,3.691,306,5.155,307,3.691,308,3.691,309,5.155,310,3.691,311,2.573,312,5.155,313,3.691,314,3.48,315,5.155,316,3.691,317,4.477,318,5.155,319,3.691,320,0.901,321,5.155,322,3.691,323,5.155,324,3.691,325,5.155,326,3.691,327,5.155,328,3.691,329,1.535,330,2.854,331,1.603,332,2.647,333,1.842,334,2.854,335,2.298,336,3.205,337,2.647,338,1.118,339,1.413,340,1.676,341,1.535,342,1.793,343,3.691,344,3.691,345,6.431,346,6.249,347,4.546,348,2.102,349,4.613,350,2.676,351,1.762,352,6.69,353,3.691,354,3.691,355,5.16,356,3.184,357,5.941,358,3.954,359,4.645,360,3.691,361,3.691,362,6.431,363,3.691,364,3.691,365,3.552,366,3.691,367,3.691,368,6.088,369,3.289,370,2.346,371,1.608,372,2.298,373,2.298,374,2.456,375,2.043,376,2.886,377,2.647,378,2.886,379,3.691,380,3.691,381,5.16,382,3.691,383,3.691,384,3.691,385,3.205,386,1.842,387,2.162,388,4.477,389,2.647,390,3.205,391,1.937,392,4.477,393,3.205,394,2.886,395,3.691,396,5.155,397,5.155,398,4.031,399,3.697,400,3.691,401,3.691,402,3.691,403,3.691,404,3.691,405,3.691,406,3.691,407,3.691,408,3.691,409,3.691,410,3.691,411,3.691,412,3.691]],["title/components/BillingDetailsComponent.html",[0,0.247,45,0.376]],["body/components/BillingDetailsComponent.html",[0,0.409,1,0.427,2,0.559,3,0.143,4,0.143,5,0.473,6,0.45,7,0.473,8,0.158,10,0.473,11,0.797,12,0.713,14,0.559,15,0.5,16,0.589,18,2.735,19,0.559,21,0.237,22,0.015,23,0.126,25,1.653,26,0.161,27,0.161,28,3.452,29,4.227,30,0.473,32,0.473,33,0.62,34,0.62,35,0.473,36,0.734,37,0.473,38,0.212,39,0.473,40,0.427,41,0.297,42,0.473,43,0.404,44,0.473,45,0.662,46,0.818,47,0.473,48,0.427,49,0.62,50,0.427,51,0.276,52,0.36,53,0.62,54,0.427,55,0.473,56,0.404,57,0.734,58,0.427,59,0.473,60,0.427,61,0.473,62,0.427,63,0.45,64,0.692,65,0.427,66,0.473,67,0.427,68,0.473,69,0.404,70,0.473,71,0.5,72,0.62,73,0.404,74,0.346,75,0.473,76,0.404,77,0.473,78,0.427,79,0.473,80,0.427,81,0.45,82,0.473,83,0.427,84,0.473,85,0.427,86,0.589,87,0.473,88,0.427,89,0.473,90,0.427,91,0.473,92,0.427,93,0.624,94,0.427,95,0.473,96,0.427,97,0.473,98,0.427,99,0.473,100,0.529,101,0.559,102,0.62,103,0.45,104,0.62,105,0.427,106,0.427,107,0.473,108,0.427,109,0.473,110,0.427,111,0.45,112,0.473,113,0.427,114,0.427,115,0.473,116,0.427,117,0.427,118,0.427,119,0.427,120,0.473,121,0.427,122,0.473,123,0.427,124,0.382,125,0.427,126,0.45,127,0.473,128,0.45,129,0.473,130,0.427,131,0.473,132,0.427,133,0.473,134,0.427,135,0.525,136,0.427,137,0.427,138,0.473,139,0.427,140,0.657,141,0.427,142,0.473,143,0.427,144,0.473,145,0.473,146,0.01,147,0.01,155,1.656,157,0.143,158,0.389,162,0.336,165,0.297,166,0.62,197,0.236,198,1.369,205,0.256,206,0.404,220,0.682,350,2.452,413,5.71,414,5.71,415,3.906,416,3.862,417,4.715,418,0.894,419,1.324,420,5.894,421,5.894,422,2.371,423,2.671,424,4.498,425,2.256,426,4.498,427,0.682,428,3.226,429,1.01,430,1.722,431,4.498,432,2.993,433,2.56,434,4.627,435,1.656,436,4.608,437,5.119,438,4.608,439,4.227,440,4.608,441,5.119,442,5.894,443,3.452,444,5.894,445,5.894,446,5.894,447,3.452,448,5.894,449,3.452,450,5.119,451,5.894,452,6.977,453,5.119,454,5.894]],["title/components/CardComponent.html",[0,0.247,48,0.376]],["body/components/CardComponent.html",[0,0.365,1,0.287,2,0.424,3,0.096,4,0.096,5,0.318,6,0.303,7,0.318,8,0.128,10,0.318,11,0.784,12,0.701,14,0.504,15,0.451,16,0.531,19,0.504,21,0.246,22,0.015,23,0.084,26,0.211,27,0.16,30,0.318,32,0.318,33,0.47,34,0.47,35,0.318,36,0.618,37,0.318,38,0.259,39,0.318,40,0.287,41,0.2,42,0.318,43,0.272,44,0.318,45,0.287,46,0.559,47,0.318,48,0.557,49,0.47,50,0.287,51,0.186,52,0.242,53,0.47,54,0.424,55,0.318,56,0.689,57,0.618,58,0.287,59,0.318,60,0.287,61,0.318,62,0.287,63,0.678,64,0.559,65,0.287,66,0.318,67,0.287,68,0.318,69,0.272,70,0.318,71,0.379,72,0.47,73,0.272,74,0.33,75,0.318,76,0.272,77,0.318,78,0.287,79,0.318,80,0.287,81,0.303,82,0.318,83,0.287,84,0.318,85,0.287,86,0.447,87,0.318,88,0.287,89,0.318,90,0.287,91,0.318,92,0.287,93,0.287,94,0.287,95,0.318,96,0.287,97,0.318,98,0.287,99,0.318,100,0.401,101,0.569,102,0.47,103,0.303,104,0.47,105,0.287,106,0.287,107,0.318,108,0.287,109,0.318,110,0.287,111,0.303,112,0.318,113,0.287,114,0.287,115,0.318,116,0.287,117,0.287,118,0.287,119,0.287,120,0.318,121,0.287,122,0.318,123,0.287,124,0.451,125,0.287,126,0.303,127,0.318,128,0.303,129,0.318,130,0.287,131,0.318,132,0.287,133,0.318,134,0.287,135,0.336,136,0.287,137,0.287,138,0.318,139,0.424,140,0.678,141,0.287,142,0.318,143,0.287,144,0.318,145,0.318,146,0.008,147,0.008,151,1.287,152,1.369,155,1.256,157,0.096,158,0.295,160,1.355,162,0.446,165,0.489,166,0.812,171,1.588,174,1.359,176,1.518,195,0.928,197,0.179,198,1.561,205,0.397,206,0.428,209,0.45,210,1.069,220,0.459,230,0.459,278,1.124,279,0.913,281,1.069,293,1.271,311,2.231,320,0.678,333,1.51,334,2.474,338,0.917,342,1.506,347,1.772,348,0.989,351,1.581,356,2.03,365,1.588,370,1.672,371,1.439,372,1.884,374,2.014,375,1.675,418,0.994,419,1.472,422,1.994,423,2.247,425,1.711,427,0.459,429,0.68,430,1.158,433,1.941,435,0.85,436,4.589,449,2.618,455,2.366,456,2.789,457,2.941,458,1.919,459,1.107,460,3.308,461,2.309,462,2.652,463,1.065,464,3.881,465,3.881,466,4.615,467,1.994,468,3.308,469,2.789,470,2.247,471,2.941,472,3.537,473,3.881,474,3.205,475,4.209,476,5.097,477,4.209,478,4.469,479,4.209,480,3.881,481,3.881,482,4.469,483,3.205,484,3.025,485,3.811,486,3.308,487,3.494,488,3.025,489,3.025,490,3.025,491,3.025,492,3.025,493,3.881,494,3.025,495,3.025,496,3.025,497,3.881,498,3.025,499,4.155,500,3.881,501,3.025,502,3.881,503,3.881,504,3.025,505,3.205,506,3.881,507,3.025,508,1.579,509,3.025,510,3.025,511,3.025,512,2.929,513,2.03,514,3.494,515,3.494,516,2.782,517,4.589,518,3.205,519,2.474,520,3.205,521,3.438,522,3.025,523,2.126,524,3.025,525,3.025,526,3.205,527,3.025,528,1.884,529,2.366,530,1.588,531,1.675,532,0.63,533,1.884,534,1.51,535,1.51,536,0.883,537,2.628,538,2.17,539,2.014,540,2.17,541,2.17,542,1.314,543,0.519,544,4.615,545,2.628,546,2.014,547,2.346,548,2.628,549,1.374,550,2.014,551,3.249,552,3.811,553,2.17,554,2.17,555,3.308,556,2.511,557,1.207,558,2.628,559,2.628,560,2.17,561,2.231,562,1.884,563,1.675,564,1.884,565,1.884,566,1.51,567,1.588,568,2.628,569,3.205,570,3.205,571,2.628,572,1.675,573,2.17,574,2.17,575,2.17,576,2.17,577,2.17,578,2.17,579,2.014,580,2.628,581,1.588,582,3.205,583,1.028,584,2.474,585,1.884,586,1.588,587,3.205,588,2.17,589,3.205,590,2.628,591,3.205,592,2.17,593,2.628,594,3.205,595,2.17,596,2.17,597,1.994,598,2.628,599,2.628,600,2.628,601,1.675,602,2.628,603,1.51,604,2.628,605,2.628,606,3.205,607,1.518,608,3.205,609,4.469,610,1.579,611,4.469,612,3.494,613,4.469,614,2.974,615,2.666,616,3.881,617,4.469,618,4.469,619,2.618,620,4.469,621,1.941,622,3.494,623,3.494,624,4.469,625,5.097,626,4.469]],["title/injectables/CardService.html",[251,0.959,528,2.465]],["body/injectables/CardService.html",[3,0.159,4,0.159,8,0.12,21,0.238,22,0.015,23,0.139,26,0.179,27,0.179,38,0.282,41,0.328,51,0.306,56,0.716,74,0.402,146,0.011,147,0.011,157,0.159,158,0.415,161,1.037,162,0.455,165,0.517,176,1.692,178,3.314,193,1.906,197,0.252,205,0.284,206,0.306,209,0.482,251,1.523,252,2.071,256,1.715,257,3.134,258,2.733,278,1.345,279,1.092,281,2.882,293,1.343,320,0.755,329,3.016,330,2.756,331,2.163,333,2.485,335,3.099,338,1.508,339,1.906,340,2.261,341,2.071,342,1.697,351,1.69,371,1.348,377,3.571,387,2.916,435,1.399,449,2.916,474,4.513,487,4.92,528,3.917,551,2.756,556,1.759,572,2.756,627,4.324,628,4.92,629,6.292,630,6.292,631,6.292,632,7.248,633,4.513,634,6.292,635,2.485,636,6.292,637,6.292,638,4.979,639,4.979,640,6.292,641,4.979,642,4.979,643,6.292,644,4.979,645,6.292,646,4.979,647,4.979,648,4.513,649,4.979,650,6.292,651,4.979,652,6.292,653,3.099,654,1.83,655,4.324,656,5.845,657,3.571,658,3.099,659,3.893,660,3.893,661,3.571,662,3.893,663,3.571,664,4.979,665,2.756,666,3.314,667,3.314,668,3.893,669,3.099,670,3.893,671,3.893,672,3.893,673,3.893,674,2.261,675,2.613,676,3.571,677,2.916]],["title/injectables/CommonService.html",[251,0.959,422,1.346]],["body/injectables/CommonService.html",[3,0.191,4,0.191,8,0.144,21,0.224,22,0.015,23,0.167,26,0.215,27,0.215,146,0.012,147,0.012,157,0.191,158,0.464,161,1.558,162,0.449,165,0.464,166,0.813,193,2.29,197,0.281,205,0.401,206,0.432,251,1.704,252,2.489,281,2.114,320,1.171,337,4.291,338,1.812,341,2.489,422,2.392,423,2.955,678,5.196,679,7.478,680,7.478,681,7.72,682,7.038,683,5.983,684,5.983,685,7.72,686,5.983,687,5.983,688,5.983]],["title/components/CreateFolderDialogComponent.html",[0,0.247,50,0.376]],["body/components/CreateFolderDialogComponent.html",[0,0.399,1,0.405,2,0.54,3,0.136,4,0.136,5,0.45,6,0.427,7,0.45,8,0.154,10,0.45,11,0.795,12,0.712,14,0.54,15,0.483,16,0.57,19,0.54,21,0.245,22,0.015,23,0.119,26,0.153,27,0.153,30,0.45,32,0.45,33,0.6,34,0.6,35,0.45,36,0.72,37,0.45,38,0.263,39,0.45,40,0.405,41,0.282,42,0.45,43,0.384,44,0.45,45,0.405,46,0.45,47,0.45,48,0.405,49,0.6,50,0.648,51,0.481,52,0.659,53,0.6,54,0.405,55,0.45,56,0.384,57,0.72,58,0.405,59,0.45,60,0.405,61,0.45,62,0.405,63,0.427,64,0.675,65,0.405,66,0.45,67,0.405,68,0.45,69,0.384,70,0.45,71,0.483,72,0.6,73,0.384,74,0.225,75,0.45,76,0.384,77,0.45,78,0.405,79,0.45,80,0.405,81,0.427,82,0.45,83,0.405,84,0.45,85,0.405,86,0.57,87,0.45,88,0.405,89,0.45,90,0.405,91,0.45,92,0.405,93,0.405,94,0.405,95,0.45,96,0.405,97,0.45,98,0.405,99,0.45,100,0.512,101,0.551,102,0.6,103,0.427,104,0.6,105,0.405,106,0.405,107,0.45,108,0.405,109,0.45,110,0.405,111,0.427,112,0.45,113,0.405,114,0.405,115,0.45,116,0.405,117,0.405,118,0.405,119,0.405,120,0.45,121,0.405,122,0.45,123,0.405,124,0.362,125,0.405,126,0.427,127,0.45,128,0.427,129,0.45,130,0.405,131,0.45,132,0.405,133,0.45,134,0.405,135,0.429,136,0.405,137,0.405,138,0.45,139,0.405,140,0.641,141,0.405,142,0.45,143,0.405,144,0.45,145,0.45,146,0.01,147,0.01,155,1.601,157,0.136,158,0.376,161,0.89,162,0.418,165,0.423,166,0.675,195,0.901,197,0.228,205,0.243,206,0.262,209,0.394,230,0.648,254,3.791,278,0.732,279,0.595,293,0.938,320,0.864,356,1.94,386,2.132,418,0.864,419,1.44,427,0.648,429,0.96,458,1.862,459,1.187,463,1.285,521,2.502,532,0.89,536,1.246,543,0.732,689,6.495,690,5.847,691,3.34,692,2.963,693,2.99,694,1.232,695,1.335,696,4.947,697,4.947,698,2.617,699,5.566,700,6.836,701,5.937,702,6.836,703,3.71,704,3.738,705,5.696,706,3.71,707,3.71,708,4.272,709,4.272,710,0.924,711,0.924,712,2.242,713,4.272,714,4.272,715,4.272,716,4.272,717,3.064,718,2.843,719,4.272,720,3.656,721,3.71,722,3.34,723,4.085,724,3.34,725,3.71,726,2.502,727,2.843]],["title/components/CreditCardFormComponent.html",[0,0.247,54,0.376]],["body/components/CreditCardFormComponent.html",[0,0.393,1,0.392,2,0.529,3,0.132,4,0.132,5,0.435,6,0.414,7,0.435,8,0.151,10,0.435,11,0.794,12,0.711,14,0.529,15,0.473,16,0.557,19,0.529,21,0.255,22,0.015,23,0.115,26,0.148,27,0.148,30,0.435,32,0.435,33,0.587,34,0.587,35,0.435,36,0.71,37,0.435,38,0.253,39,0.435,40,0.392,41,0.273,42,0.435,43,0.371,44,0.435,45,0.392,46,0.664,47,0.435,48,0.392,49,0.587,50,0.392,51,0.254,52,0.331,53,0.587,54,0.64,55,0.82,56,0.737,57,0.71,58,0.392,59,0.435,60,0.392,61,0.435,62,0.392,63,0.414,64,0.664,65,0.392,66,0.435,67,0.392,68,0.435,69,0.371,70,0.435,71,0.473,72,0.587,73,0.371,74,0.218,75,0.435,76,0.371,77,0.435,78,0.392,79,0.435,80,0.392,81,0.414,82,0.435,83,0.392,84,0.435,85,0.392,86,0.557,87,0.435,88,0.392,89,0.435,90,0.392,91,0.435,92,0.392,93,0.392,94,0.392,95,0.435,96,0.392,97,0.435,98,0.392,99,0.435,100,0.501,101,0.546,102,0.587,103,0.414,104,0.587,105,0.392,106,0.392,107,0.435,108,0.392,109,0.435,110,0.392,111,0.414,112,0.435,113,0.392,114,0.392,115,0.435,116,0.392,117,0.392,118,0.392,119,0.392,120,0.435,121,0.392,122,0.435,123,0.392,124,0.351,125,0.392,126,0.414,127,0.435,128,0.414,129,0.435,130,0.392,131,0.435,132,0.392,133,0.435,134,0.392,135,0.419,136,0.392,137,0.392,138,0.435,139,0.392,140,0.631,141,0.392,142,0.435,143,0.392,144,0.435,145,0.435,146,0.01,147,0.01,155,1.567,157,0.132,158,0.368,161,0.861,162,0.359,165,0.273,166,0.435,195,0.997,197,0.223,209,0.415,230,0.627,256,0.929,278,0.709,279,0.576,370,1.301,418,0.956,419,1.416,427,0.627,429,0.929,458,2.061,459,1.313,461,2.739,463,1.264,499,3.234,514,3.234,515,3.234,516,2.575,517,4.93,518,2.966,528,4.201,529,3.234,532,0.861,536,1.207,538,4.84,542,1.797,543,0.709,607,1.894,610,1.97,612,4.359,614,3.71,615,2.532,619,3.265,621,1.797,654,1.52,693,3.31,694,1.364,695,1.313,710,0.895,711,0.895,712,2.171,727,2.782,728,5.861,729,2.575,730,2.652,731,3.693,732,3.31,733,3.31,734,3.693,735,3.71,736,4.841,737,6.305,738,3.368,739,2.753,740,3.065,741,6.305,742,5.574,743,2.926,744,3.234,745,2.061,746,1.65,747,2.423,748,2.966,749,2.423,750,2.171,751,2.171,752,2.423,753,4.136,754,2.171,755,2.81,756,4.841,757,4.136,758,4.136,759,4.136,760,4.136,761,4.136,762,5.574,763,5.574,764,5.574,765,5.574,766,5.574,767,2.652]],["title/components/DashboardComponent.html",[0,0.247,58,0.376]],["body/components/DashboardComponent.html",[0,0.387,1,0.381,2,0.519,3,0.128,4,0.128,5,0.423,6,0.402,7,0.423,8,0.149,10,0.423,11,0.793,12,0.71,14,0.519,15,0.611,16,0.547,17,5.455,18,2.586,19,0.519,21,0.255,22,0.015,23,0.112,24,3.144,25,1.478,26,0.144,27,0.144,30,0.423,32,0.423,33,0.576,34,0.576,35,0.423,36,0.702,37,0.423,38,0.196,39,0.423,40,0.381,41,0.265,42,0.423,43,0.361,44,0.423,45,0.381,46,0.423,47,0.423,48,0.381,49,0.576,50,0.381,51,0.247,52,0.322,53,0.576,54,0.381,55,0.423,56,0.361,57,0.702,58,0.633,59,0.423,60,0.381,61,0.423,62,0.381,63,0.402,64,0.654,65,0.381,66,0.423,67,0.381,68,0.423,69,0.361,70,0.423,71,0.566,72,0.576,73,0.361,74,0.212,75,0.423,76,0.361,77,0.423,78,0.381,79,0.423,80,0.381,81,0.402,82,0.423,83,0.381,84,0.423,85,0.381,86,0.547,87,0.423,88,0.381,89,0.423,90,0.381,91,0.423,92,0.381,93,0.381,94,0.381,95,0.423,96,0.381,97,0.423,98,0.381,99,0.423,100,0.491,101,0.541,102,0.576,103,0.402,104,0.576,105,0.381,106,0.381,107,0.423,108,0.381,109,0.423,110,0.381,111,0.402,112,0.423,113,0.381,114,0.381,115,0.423,116,0.381,117,0.381,118,0.381,119,0.381,120,0.423,121,0.381,122,0.423,123,0.381,124,0.341,125,0.633,126,0.698,127,0.423,128,0.402,129,0.423,130,0.381,131,0.423,132,0.381,133,0.423,134,0.381,135,0.411,136,0.381,137,0.381,138,0.423,139,0.381,140,0.622,141,0.381,142,0.423,143,0.381,144,0.423,145,0.423,146,0.01,147,0.01,157,0.128,158,0.361,160,1.443,161,1.295,162,0.438,165,0.265,166,0.576,195,0.983,197,0.219,198,1.628,201,1.747,205,0.42,206,0.452,209,0.41,210,2.357,211,2.266,213,2.376,220,0.61,230,0.61,358,2.676,418,0.943,419,1.396,422,2.266,425,2.093,427,0.61,429,0.903,430,1.539,458,1.788,459,1.295,462,3.102,463,1.246,470,1.539,521,2.355,523,2.602,532,0.838,534,2.007,536,1.173,543,0.689,549,2.484,692,2.586,694,1.345,695,1.295,710,0.87,711,0.87,768,3.492,769,5.469,770,2.196,771,4.458,772,5.469,773,6.215,774,5.793,775,6.215,776,6.215,777,5.398,778,5.398,779,5.469,780,4.021,781,4.021,782,4.75,783,4.021,784,4.021,785,4.021,786,6.215,787,4.75,788,2.884,789,5.469,790,4.021,791,4.021,792,5.398,793,4.021,794,5.469,795,3.492,796,3.144,797,3.144,798,4.021,799,2.884,800,1.421,801,1.366,802,4.021,803,4.021,804,3.492,805,3.492,806,4.75,807,3.492,808,3.492,809,2.676,810,3.144,811,4.021,812,3.492,813,6.215,814,5.398,815,4.75,816,2.676,817,4.021,818,1.913]],["title/components/DownloadComponent.html",[0,0.247,60,0.376]],["body/components/DownloadComponent.html",[0,0.351,1,0.319,2,0.457,3,0.107,4,0.107,5,0.353,6,0.336,7,0.353,8,0.157,10,0.353,11,0.787,12,0.706,14,0.457,15,0.409,16,0.482,19,0.457,21,0.196,22,0.014,23,0.094,26,0.121,27,0.121,28,3.611,30,0.353,32,0.353,33,0.508,34,0.508,35,0.353,36,0.649,37,0.353,38,0.173,39,0.353,40,0.319,41,0.221,42,0.353,43,0.302,44,0.353,45,0.319,46,0.353,47,0.353,48,0.319,49,0.508,50,0.319,51,0.206,52,0.451,53,0.508,54,0.319,55,0.353,56,0.302,57,0.649,58,0.319,59,0.353,60,0.585,61,0.353,62,0.319,63,0.336,64,0.594,65,0.319,66,0.353,67,0.319,68,0.353,69,0.302,70,0.353,71,0.409,72,0.508,73,0.302,74,0.177,75,0.353,76,0.302,77,0.353,78,0.319,79,0.353,80,0.319,81,0.336,82,0.353,83,0.319,84,0.353,85,0.319,86,0.482,87,0.353,88,0.319,89,0.353,90,0.319,91,0.353,92,0.319,93,0.319,94,0.319,95,0.353,96,0.319,97,0.353,98,0.319,99,0.353,100,0.433,101,0.557,102,0.508,103,0.336,104,0.508,105,0.319,106,0.319,107,0.353,108,0.319,109,0.353,110,0.319,111,0.336,112,0.353,113,0.319,114,0.319,115,0.353,116,0.319,117,0.319,118,0.319,119,0.319,120,0.353,121,0.319,122,0.353,123,0.319,124,0.479,125,0.319,126,0.336,127,0.353,128,0.336,129,0.353,130,0.319,131,0.353,132,0.319,133,0.353,134,0.319,135,0.511,136,0.319,137,0.319,138,0.353,139,0.319,140,0.653,141,0.319,142,0.353,143,0.319,144,0.353,145,0.353,146,0.009,147,0.009,153,4.188,155,1.355,157,0.107,162,0.191,171,2.531,195,0.892,197,0.193,205,0.191,206,0.206,209,0.206,230,0.509,233,2.801,293,0.794,320,0.731,350,2.828,359,2.626,371,1.669,378,3.77,391,3.236,435,1.355,439,3.458,443,3.611,463,1.131,512,2.407,543,0.576,555,3.002,557,2.459,607,1.638,615,2.19,665,2.669,674,2.19,694,1.22,695,1.175,710,0.727,711,0.727,724,3.77,726,3.611,809,3.209,810,3.77,819,2.917,820,5.728,821,4.822,822,4.822,823,5.642,824,7.572,825,3.358,826,4.192,827,3.236,828,3.838,829,3.458,830,4.822,831,4.822,832,2.669,833,2.531,834,5.355,835,4.46,836,4.104,837,5.355,838,3.392,839,3.77,840,3.236,841,4.822,842,4.188,843,4.188,844,3.358,845,3.002,846,4.822,847,4.188,848,4.188,849,4.188,850,4.188,851,1.859,852,3.458,853,4.822,854,3.002,855,4.822,856,4.188,857,5.355,858,4.422,859,2.407,860,7.164,861,7.403,862,4.822,863,4.188,864,7.749,865,4.822,866,4.188,867,4.188,868,4.188,869,4.822,870,4.104,871,4.822,872,3.002,873,3.209,874,4.822,875,2.679,876,6.166,877,6.166,878,3.209,879,4.822,880,3.002,881,6.166,882,7.164,883,3.77,884,3.77,885,4.822,886,5.355,887,4.104,888,4.822,889,4.822,890,4.822,891,4.822,892,2.824,893,4.875,894,3.458,895,4.822,896,4.822,897,4.822,898,3.77,899,2.824,900,6.166,901,7.403,902,3.002,903,4.188,904,4.822,905,3.209,906,6.797,907,5.921,908,4.821,909,4.821,910,7.403,911,6.797,912,6.576,913,3.77,914,4.188,915,4.875,916,5.601,917,6.797,918,4.822,919,3.358,920,7.295,921,4.822,922,4.822,923,4.822,924,4.822,925,4.188,926,7.164,927,4.822,928,4.188,929,4.822,930,4.822,931,6.222,932,2.824,933,4.188,934,4.821,935,4.822,936,4.822,937,4.822,938,3.209,939,3.458,940,6.166,941,4.822,942,6.166,943,3.358,944,4.822,945,4.188,946,4.822,947,4.188,948,4.822,949,4.822,950,6.797,951,3.77,952,4.188,953,3.77,954,4.822,955,4.822,956,4.822,957,3.458,958,4.822,959,4.188,960,4.822,961,3.77,962,4.822,963,3.358,964,3.358,965,3.358,966,3.358]],["title/components/EditProfileComponent.html",[0,0.247,62,0.376]],["body/components/EditProfileComponent.html",[0,0.387,1,0.382,2,0.519,3,0.128,4,0.128,5,0.423,6,0.402,7,0.423,8,0.149,10,0.423,11,0.794,12,0.71,14,0.519,15,0.464,16,0.547,19,0.519,21,0.242,22,0.015,23,0.112,26,0.144,27,0.144,30,0.423,32,0.423,33,0.576,34,0.576,35,0.423,36,0.702,37,0.423,38,0.264,39,0.423,40,0.382,41,0.265,42,0.423,43,0.361,44,0.423,45,0.382,46,0.654,47,0.423,48,0.382,49,0.576,50,0.382,51,0.247,52,0.322,53,0.576,54,0.382,55,0.423,56,0.361,57,0.702,58,0.382,59,0.423,60,0.382,61,0.423,62,0.633,63,0.736,64,0.654,65,0.382,66,0.423,67,0.382,68,0.423,69,0.361,70,0.423,71,0.464,72,0.576,73,0.361,74,0.212,75,0.423,76,0.361,77,0.423,78,0.382,79,0.423,80,0.382,81,0.402,82,0.423,83,0.382,84,0.423,85,0.382,86,0.547,87,0.423,88,0.382,89,0.423,90,0.382,91,0.423,92,0.382,93,0.382,94,0.382,95,0.423,96,0.382,97,0.423,98,0.382,99,0.423,100,0.491,101,0.564,102,0.576,103,0.402,104,0.576,105,0.382,106,0.382,107,0.423,108,0.382,109,0.423,110,0.382,111,0.402,112,0.423,113,0.382,114,0.382,115,0.423,116,0.382,117,0.382,118,0.382,119,0.382,120,0.423,121,0.382,122,0.423,123,0.382,124,0.341,125,0.382,126,0.402,127,0.423,128,0.402,129,0.423,130,0.382,131,0.423,132,0.382,133,0.423,134,0.382,135,0.412,136,0.382,137,0.382,138,0.423,139,0.382,140,0.622,141,0.382,142,0.423,143,0.382,144,0.423,145,0.423,146,0.01,147,0.01,151,1.325,152,1.45,155,1.538,157,0.128,158,0.361,160,1.443,161,1.295,162,0.433,165,0.361,166,0.702,197,0.219,198,1.656,199,2.357,205,0.398,206,0.429,207,2.276,209,0.247,220,0.61,228,1.605,273,5.795,299,2.286,311,2.731,314,3.908,342,0.87,371,1.683,418,0.943,427,0.61,458,2.032,459,1.295,463,1.247,470,1.54,518,2.886,532,0.838,535,2.008,536,1.174,543,0.69,583,1.367,603,2.731,619,3.205,693,3.263,694,1.345,695,1.295,698,2.38,704,2.112,710,0.87,711,0.87,712,2.112,727,2.731,740,3.031,745,2.032,746,1.605,755,2.989,767,2.603,770,2.197,800,1.422,801,1.367,818,1.914,833,2.872,932,2.357,967,6.008,968,6.673,969,6.008,970,3.146,971,4.278,972,5.472,973,6.217,974,2.48,975,5.472,976,4.024,977,4.024,978,4.024,979,4.024,980,3.406,981,4.024,982,3.406,983,4.024,984,2.012,985,4.024,986,1.479,987,4.024,988,4.024,989,4.459,990,3.871,991,4.024,992,4.861,993,4.861,994,4.024,995,4.024,996,4.024,997,4.024,998,4.024,999,2.112,1000,4.024,1001,2.227,1002,1.54,1003,2.008,1004,2.505,1005,3.406,1006,4.752,1007,4.752,1008,3.406,1009,3.029]],["title/components/FileExplorerComponent.html",[0,0.247,65,0.376]],["body/components/FileExplorerComponent.html",[0,0.366,1,0.343,2,0.482,3,0.115,4,0.115,5,0.38,6,0.361,7,0.38,8,0.191,10,0.38,11,0.79,12,0.707,14,0.482,15,0.431,16,0.508,19,0.482,21,0.248,22,0.015,23,0.101,26,0.211,27,0.13,30,0.38,32,0.38,33,0.534,34,0.534,35,0.38,36,0.67,37,0.38,38,0.257,39,0.38,40,0.343,41,0.238,42,0.38,43,0.324,44,0.38,45,0.343,46,0.38,47,0.38,48,0.343,49,0.534,50,0.343,51,0.222,52,0.289,53,0.534,54,0.343,55,0.38,56,0.324,57,0.67,58,0.343,59,0.38,60,0.343,61,0.38,62,0.343,63,0.361,64,0.618,65,0.604,66,0.38,67,0.482,68,0.38,69,0.324,70,0.38,71,0.431,72,0.534,73,0.324,74,0.19,75,0.38,76,0.324,77,0.38,78,0.343,79,0.38,80,0.343,81,0.361,82,0.38,83,0.343,84,0.38,85,0.343,86,0.508,87,0.38,88,0.343,89,0.38,90,0.343,91,0.38,92,0.343,93,0.343,94,0.343,95,0.38,96,0.343,97,0.38,98,0.343,99,0.38,100,0.456,101,0.524,102,0.534,103,0.361,104,0.534,105,0.343,106,0.343,107,0.38,108,0.343,109,0.38,110,0.343,111,0.361,112,0.38,113,0.343,114,0.343,115,0.38,116,0.343,117,0.343,118,0.343,119,0.343,120,0.38,121,0.343,122,0.38,123,0.343,124,0.591,125,0.343,126,0.361,127,0.38,128,0.361,129,0.38,130,0.343,131,0.38,132,0.343,133,0.38,134,0.343,135,0.382,136,0.343,137,0.343,138,0.38,139,0.343,140,0.587,141,0.343,142,0.38,143,0.343,144,0.38,145,0.38,146,0.009,147,0.009,151,1.229,152,1.369,157,0.115,158,0.335,160,1.378,161,0.752,162,0.444,165,0.481,166,0.82,195,0.928,197,0.203,198,1.223,205,0.363,206,0.391,209,0.439,220,0.548,230,0.548,256,1.564,278,1.151,279,0.935,293,1.202,311,2.534,320,0.77,365,1.896,386,1.802,418,0.89,419,1.508,422,2.165,423,2.438,425,1.943,427,0.548,429,0.811,430,1.382,433,2.206,456,3.082,459,1.223,462,2.931,463,1.177,467,2.165,468,3.656,469,3.082,470,2.438,508,1.794,530,1.896,532,0.752,534,1.802,536,1.054,543,0.619,546,2.404,547,1.896,556,1.794,561,2.534,586,1.896,601,1.999,606,3.642,607,1.725,608,3.642,610,1.794,615,2.306,654,1.328,692,2.112,694,1.27,695,1.223,710,0.781,711,0.781,726,2.115,1010,1.64,1011,6.803,1012,6.803,1013,3.136,1014,6.961,1015,2.665,1016,5.872,1017,5.077,1018,4.24,1019,6.37,1020,5.077,1021,5.077,1022,6.37,1023,4.41,1024,5.077,1025,3.611,1026,5.077,1027,3.611,1028,3.611,1029,5.077,1030,3.611,1031,4.41,1032,5.077,1033,3.611,1034,3.611,1035,5.077,1036,3.611,1037,4.41,1038,5.077,1039,3.611,1040,3.611,1041,3.611,1042,3.611,1043,6.37,1044,5.077,1045,4.569,1046,3.611,1047,4.41,1048,3.611,1049,3.136,1050,1.896,1051,3.611,1052,2.824,1053,3.611,1054,3.97,1055,3.97,1056,3.611,1057,3.611,1058,2.404,1059,3.611,1060,3.611,1061,3.642,1062,2.824,1063,3.642,1064,5.077,1065,5.077,1066,5.077,1067,5.077,1068,5.077,1069,2.974,1070,5.077,1071,3.642,1072,5.077,1073,3.642,1074,3.97,1075,2.59,1076,4.569,1077,2.824,1078,3.136,1079,3.656,1080,2.59,1081,2.59,1082,2.59,1083,2.824,1084,3.136,1085,4.41,1086,2.824,1087,3.611,1088,3.136,1089,3.611,1090,3.136]],["title/injectables/FileService.html",[251,0.959,1018,2.636]],["body/injectables/FileService.html",[3,0.16,4,0.16,8,0.174,21,0.232,22,0.015,23,0.14,26,0.18,27,0.18,38,0.288,41,0.331,51,0.388,52,0.554,124,0.426,146,0.011,147,0.011,157,0.16,158,0.417,161,1.045,162,0.452,165,0.512,176,1.705,178,3.34,193,1.921,197,0.253,205,0.36,206,0.388,209,0.483,251,1.531,252,2.088,256,1.555,257,3.145,258,2.747,278,1.347,279,1.094,281,2.885,293,1.362,320,1.05,329,3.024,331,2.18,338,1.52,339,1.921,340,2.279,341,2.088,342,1.68,471,3.5,572,2.777,635,2.504,654,1.845,663,3.599,1018,4.208,1037,4.358,1058,3.34,1062,3.923,1091,4.358,1092,4.944,1093,6.323,1094,6.323,1095,6.323,1096,5.492,1097,5.492,1098,6.323,1099,6.323,1100,6.323,1101,7.269,1102,3.628,1103,5.018,1104,6.323,1105,5.018,1106,6.323,1107,5.018,1108,3.599,1109,6.323,1110,5.018,1111,6.323,1112,5.018,1113,6.323,1114,7.269,1115,5.018,1116,4.358,1117,6.323,1118,5.859,1119,5.018,1120,6.323,1121,5.492,1122,5.492,1123,5.018,1124,5.018,1125,4.358,1126,3.34,1127,3.923,1128,5.018,1129,5.018,1130,3.599,1131,5.018,1132,5.018,1133,5.018]],["title/components/FileUploadComponent.html",[0,0.247,67,0.376]],["body/components/FileUploadComponent.html",[0,0.335,1,0.293,2,0.43,3,0.098,4,0.098,5,0.325,6,0.309,7,0.325,8,0.188,10,0.325,11,0.784,12,0.701,14,0.43,15,0.385,16,0.454,19,0.43,21,0.245,22,0.015,23,0.086,26,0.111,27,0.111,30,0.325,32,0.325,33,0.477,34,0.477,35,0.325,36,0.624,37,0.325,38,0.264,39,0.325,40,0.293,41,0.204,42,0.325,43,0.277,44,0.325,45,0.293,46,0.325,47,0.325,48,0.293,49,0.477,50,0.293,51,0.33,52,0.546,53,0.477,54,0.293,55,0.325,56,0.277,57,0.624,58,0.293,59,0.325,60,0.293,61,0.325,62,0.293,63,0.309,64,0.566,65,0.293,66,0.325,67,0.562,68,0.325,69,0.277,70,0.325,71,0.385,72,0.477,73,0.277,74,0.239,75,0.325,76,0.277,77,0.325,78,0.293,79,0.325,80,0.293,81,0.309,82,0.325,83,0.293,84,0.325,85,0.293,86,0.454,87,0.325,88,0.293,89,0.325,90,0.293,91,0.325,92,0.293,93,0.293,94,0.293,95,0.325,96,0.293,97,0.325,98,0.293,99,0.325,100,0.407,101,0.497,102,0.477,103,0.309,104,0.477,105,0.293,106,0.293,107,0.325,108,0.293,109,0.325,110,0.293,111,0.309,112,0.325,113,0.293,114,0.293,115,0.325,116,0.293,117,0.293,118,0.293,119,0.293,120,0.325,121,0.293,122,0.325,123,0.293,124,0.262,125,0.293,126,0.309,127,0.325,128,0.309,129,0.325,130,0.293,131,0.325,132,0.293,133,0.325,134,0.293,135,0.475,136,0.293,137,0.293,138,0.325,139,0.293,140,0.538,141,0.293,142,0.325,143,0.293,144,0.325,145,0.325,146,0.008,147,0.008,157,0.201,158,0.299,161,1.12,162,0.451,165,0.471,166,0.819,174,1.266,191,2.657,192,2.657,195,0.85,197,0.181,198,1.621,205,0.42,206,0.452,209,0.47,211,2.145,219,1.808,220,0.468,230,0.468,244,3.151,256,1.748,278,1.2,279,0.975,293,1.227,320,0.468,331,1.341,342,0.668,351,1.254,370,0.971,391,2.381,418,0.815,419,1.208,427,0.468,429,0.693,458,1.758,459,1.12,461,2.336,463,1.078,467,2.014,470,1.182,508,1.603,512,1.541,523,2.158,532,0.643,536,0.901,542,1.341,543,0.529,547,2.381,567,2.381,583,1.049,597,1.541,621,1.341,674,1.402,692,2.237,693,2.822,694,1.163,695,1.12,699,4.67,704,1.62,710,0.668,711,1.163,712,1.62,720,3.295,727,2.958,731,3.149,732,2.822,738,2.958,740,1.402,743,2.822,745,1.758,749,1.808,750,1.62,754,1.62,770,1.9,800,1.091,801,1.049,818,1.468,852,3.856,974,2.145,980,2.824,982,2.824,984,1.667,986,1.135,999,2.381,1002,1.182,1003,1.541,1010,1.402,1015,2.381,1018,3.944,1047,3.939,1049,2.681,1050,1.62,1052,6.206,1071,2.214,1092,3.546,1096,3.939,1102,3.151,1108,3.253,1118,3.546,1126,3.579,1130,4.734,1134,6.893,1135,2.681,1136,5.377,1137,5.377,1138,4.536,1139,5.377,1140,5.377,1141,5.377,1142,4.67,1143,5.377,1144,4.67,1145,5.377,1146,3.253,1147,4.536,1148,4.536,1149,3.939,1150,4.536,1151,2.511,1152,4.536,1153,4.536,1154,2.657,1155,3.087,1156,4.536,1157,3.087,1158,4.536,1159,3.087,1160,4.536,1161,3.087,1162,3.087,1163,3.939,1164,3.087,1165,4.536,1166,3.087,1167,4.536,1168,3.087,1169,3.546,1170,3.087,1171,3.087,1172,3.087,1173,3.087,1174,3.087,1175,3.087,1176,3.087,1177,3.087,1178,3.087,1179,3.087,1180,3.087,1181,3.087,1182,3.087,1183,3.087,1184,4.536,1185,4.536,1186,3.087,1187,3.087,1188,3.087,1189,4.536,1190,3.856,1191,2.055,1192,3.087,1193,2.466,1194,5.926,1195,2.681,1196,4.204,1197,4.536,1198,3.087,1199,3.087,1200,3.087,1201,3.087,1202,3.087,1203,2.681,1204,3.087,1205,2.214,1206,2.055,1207,2.237,1208,2.214,1209,3.087,1210,3.087,1211,3.087,1212,3.087,1213,3.087,1214,4.536,1215,3.087,1216,3.087,1217,3.087,1218,3.087,1219,3.087,1220,2.681,1221,3.087,1222,3.087,1223,3.087,1224,3.087,1225,3.087,1226,3.087,1227,2.681,1228,3.087,1229,3.087,1230,3.087,1231,4.536,1232,3.939,1233,3.087,1234,3.939,1235,4.536,1236,3.087]],["title/interfaces/Folder.html",[52,0.317,233,1.799]],["body/interfaces/Folder.html",[3,0.172,4,0.172,8,0.13,21,0.238,22,0.015,23,0.151,26,0.238,27,0.194,38,0.268,41,0.357,51,0.332,52,0.652,74,0.285,135,0.576,146,0.012,147,0.012,157,0.172,176,1.838,193,2.071,197,0.265,209,0.501,210,2.531,233,2.457,251,1.604,256,1.215,257,2.457,258,2.35,279,1.143,281,2.789,293,1.371,320,0.82,329,2.756,330,2.994,331,2.35,338,1.639,339,2.071,340,2.457,341,2.25,342,1.686,435,1.52,513,3.391,519,4.132,556,1.911,654,1.989,657,3.88,880,3.368,1126,4.41,1237,3.88,1238,4.229,1239,6.483,1240,4.968,1241,3.88,1242,3.88,1243,3.6,1244,4.698,1245,4.698,1246,4.698,1247,3.88,1248,4.698,1249,4.698,1250,4.698,1251,4.698,1252,4.698,1253,4.698,1254,4.698,1255,4.698,1256,4.698,1257,4.698]],["title/injectables/FolderService.html",[251,0.959,1243,2.636]],["body/injectables/FolderService.html",[3,0.165,4,0.165,8,0.124,21,0.234,22,0.015,23,0.144,26,0.231,27,0.186,38,0.281,41,0.341,51,0.318,52,0.66,74,0.272,135,0.485,146,0.011,147,0.011,157,0.165,158,0.425,161,1.078,162,0.45,165,0.508,176,1.759,193,1.981,197,0.258,205,0.295,206,0.318,209,0.49,210,1.829,233,2.351,251,1.561,252,2.154,256,1.578,257,3.19,258,2.801,278,1.322,279,1.074,281,2.876,293,1.358,320,0.785,329,3.058,330,2.865,331,2.249,338,1.568,339,1.981,340,2.351,341,2.154,342,1.668,435,1.455,513,2.351,519,2.865,556,1.829,635,2.584,654,1.903,657,3.713,880,3.223,1092,5.042,1108,5.037,1126,4.291,1238,4.048,1239,4.496,1240,3.445,1241,3.713,1242,3.713,1243,4.291,1244,5.6,1245,4.496,1246,5.6,1247,3.713,1248,4.496,1249,6.384,1250,5.6,1251,4.496,1252,5.6,1253,4.496,1254,5.6,1255,4.496,1256,5.6,1257,4.496,1258,6.448,1259,6.448,1260,6.448,1261,6.448,1262,6.448,1263,5.177,1264,5.177,1265,5.177,1266,5.177,1267,5.177,1268,5.177]],["title/components/FooterComponent.html",[0,0.247,69,0.356]],["body/components/FooterComponent.html",[0,0.423,1,0.458,2,0.585,3,0.154,4,0.154,5,0.508,6,0.483,7,0.508,8,0.163,10,0.508,11,0.799,12,0.715,14,0.585,15,0.524,16,0.483,19,0.585,21,0.154,22,0.015,23,0.135,26,0.173,27,0.173,30,0.508,32,0.508,33,0.649,34,0.649,35,0.508,36,0.754,37,0.508,38,0.221,39,0.508,40,0.458,41,0.318,42,0.508,43,0.434,44,0.508,45,0.458,46,0.508,47,0.508,48,0.458,49,0.649,50,0.458,51,0.297,52,0.386,53,0.649,54,0.458,55,0.508,56,0.434,57,0.754,58,0.458,59,0.508,60,0.458,61,0.508,62,0.458,63,0.483,64,0.716,65,0.458,66,0.508,67,0.458,68,0.508,69,0.644,70,0.508,71,0.524,72,0.649,73,0.434,74,0.254,75,0.508,76,0.434,77,0.508,78,0.458,79,0.508,80,0.458,81,0.483,82,0.508,83,0.458,84,0.508,85,0.458,86,0.617,87,0.508,88,0.458,89,0.508,90,0.458,91,0.508,92,0.458,93,0.458,94,0.458,95,0.508,96,0.458,97,0.508,98,0.458,99,0.508,100,0.554,101,0.57,102,0.649,103,0.483,104,0.649,105,0.458,106,0.458,107,0.508,108,0.458,109,0.508,110,0.458,111,0.483,112,0.508,113,0.458,114,0.645,115,0.508,116,0.458,117,0.458,118,0.458,119,0.458,120,0.508,121,0.458,122,0.508,123,0.458,124,0.41,125,0.458,126,0.483,127,0.508,128,0.483,129,0.508,130,0.458,131,0.508,132,0.458,133,0.508,134,0.458,135,0.464,136,0.458,137,0.458,138,0.508,139,0.458,140,0.68,141,0.458,142,0.508,143,0.458,144,0.508,145,0.508,146,0.011,147,0.011,155,1.734,311,3.08,597,2.097,820,4.425,826,3.239,875,2.681,887,4.107,1269,4.193,1270,6.17,1271,6.17,1272,6.17,1273,5.359,1274,4.425,1275,4.825,1276,5.359,1277,6.17,1278,6.17,1279,6.17,1280,4.828,1281,5.359,1282,6.17,1283,6.17,1284,5.359,1285,6.17,1286,6.17,1287,4.828]],["title/components/HeaderComponent.html",[0,0.247,71,0.336]],["body/components/HeaderComponent.html",[0,0.367,1,0.345,2,0.484,3,0.116,4,0.116,5,0.383,6,0.364,7,0.383,8,0.142,10,0.383,11,0.79,12,0.707,14,0.484,15,0.433,16,0.511,18,2.453,19,0.484,21,0.24,22,0.015,23,0.102,25,1.338,26,0.131,27,0.131,30,0.383,32,0.383,33,0.537,34,0.537,35,0.383,36,0.673,37,0.383,38,0.183,39,0.383,40,0.345,41,0.24,42,0.383,43,0.327,44,0.383,45,0.345,46,0.383,47,0.383,48,0.345,49,0.537,50,0.345,51,0.224,52,0.291,53,0.537,54,0.345,55,0.383,56,0.327,57,0.673,58,0.345,59,0.383,60,0.345,61,0.383,62,0.345,63,0.364,64,0.621,65,0.345,66,0.383,67,0.345,68,0.383,69,0.327,70,0.383,71,0.571,72,0.537,73,0.327,74,0.192,75,0.383,76,0.327,77,0.383,78,0.345,79,0.383,80,0.345,81,0.364,82,0.383,83,0.345,84,0.383,85,0.345,86,0.511,87,0.383,88,0.345,89,0.383,90,0.345,91,0.383,92,0.345,93,0.345,94,0.345,95,0.383,96,0.345,97,0.383,98,0.345,99,0.383,100,0.459,101,0.525,102,0.537,103,0.364,104,0.537,105,0.345,106,0.345,107,0.383,108,0.345,109,0.383,110,0.345,111,0.364,112,0.383,113,0.345,114,0.345,115,0.383,116,0.345,117,0.345,118,0.345,119,0.345,120,0.383,121,0.345,122,0.383,123,0.345,124,0.309,125,0.345,126,0.364,127,0.383,128,0.364,129,0.383,130,0.345,131,0.383,132,0.345,133,0.383,134,0.345,135,0.384,136,0.345,137,0.345,138,0.383,139,0.345,140,0.59,141,0.345,142,0.383,143,0.345,144,0.383,145,0.383,146,0.009,147,0.009,151,1.236,152,1.375,157,0.116,158,0.337,160,1.383,162,0.417,165,0.337,166,0.673,195,0.932,197,0.204,198,1.633,199,2.259,201,2.777,202,2.943,205,0.384,206,0.414,207,2.124,209,0.224,213,2.218,220,0.552,228,1.452,230,0.552,248,3.671,254,3.925,256,1.726,259,4.23,266,5.812,314,3.744,348,1.19,351,1.628,369,2.015,370,1.607,389,3.662,418,0.894,419,1.325,427,0.552,429,0.818,433,3.479,459,1.228,462,2.943,463,1.182,467,2.172,508,1.804,532,0.758,534,1.817,543,0.624,547,3.095,549,3.49,567,3.663,586,3.902,674,1.654,675,1.911,677,2.132,695,1.228,726,3.454,770,2.084,800,1.286,801,1.237,826,2.68,905,2.423,974,2.352,984,1.877,986,1.338,999,2.68,1001,2.826,1002,1.954,1003,2.548,1010,2.679,1076,4.23,1079,3.671,1080,5.005,1081,4.23,1082,4.23,1083,4.611,1193,2.453,1205,2.611,1288,3.162,1289,5.812,1290,5.457,1291,6.061,1292,5.457,1293,4.23,1294,5.122,1295,6.061,1296,5.122,1297,5.122,1298,4.345,1299,5.122,1300,5.122,1301,4.23,1302,3.925,1303,5.122,1304,4.434,1305,3.64,1306,3.64,1307,3.64,1308,3.64,1309,3.64,1310,3.64,1311,4.434,1312,3.64,1313,3.64,1314,3.162,1315,2.846,1316,2.611,1317,3.162,1318,3.162,1319,3.162,1320,3.162,1321,3.162,1322,2.611,1323,3.162,1324,5.552,1325,5.552,1326,5.552,1327,5.552]],["title/components/HeaderComponent-1.html",[0,0.206,71,0.28,597,1.122]],["body/components/HeaderComponent-1.html",[0,0.358,1,0.33,2,0.469,3,0.111,4,0.111,5,0.367,6,0.348,7,0.367,8,0.159,10,0.367,11,0.789,12,0.705,14,0.469,15,0.42,16,0.495,18,2.395,19,0.469,21,0.238,22,0.015,23,0.097,25,1.281,26,0.125,27,0.125,30,0.367,32,0.367,33,0.521,34,0.521,35,0.367,36,0.66,37,0.367,38,0.178,39,0.367,40,0.33,41,0.437,42,0.367,43,0.313,44,0.367,45,0.33,46,0.367,47,0.367,48,0.33,49,0.521,50,0.33,51,0.214,52,0.279,53,0.521,54,0.33,55,0.367,56,0.313,57,0.66,58,0.33,59,0.367,60,0.33,61,0.367,62,0.33,63,0.348,64,0.606,65,0.33,66,0.367,67,0.33,68,0.367,69,0.313,70,0.367,71,0.562,72,0.521,73,0.313,74,0.183,75,0.367,76,0.313,77,0.367,78,0.33,79,0.367,80,0.33,81,0.348,82,0.367,83,0.33,84,0.367,85,0.33,86,0.495,87,0.367,88,0.33,89,0.367,90,0.33,91,0.367,92,0.33,93,0.33,94,0.33,95,0.367,96,0.33,97,0.367,98,0.33,99,0.367,100,0.444,101,0.573,102,0.521,103,0.348,104,0.521,105,0.33,106,0.33,107,0.367,108,0.33,109,0.367,110,0.33,111,0.662,112,0.367,113,0.33,114,0.33,115,0.367,116,0.33,117,0.33,118,0.33,119,0.33,120,0.367,121,0.33,122,0.367,123,0.33,124,0.296,125,0.33,126,0.348,127,0.367,128,0.348,129,0.367,130,0.33,131,0.367,132,0.33,133,0.367,134,0.33,135,0.372,136,0.33,137,0.33,138,0.367,139,0.33,140,0.576,141,0.33,142,0.367,143,0.33,144,0.367,145,0.367,146,0.009,147,0.009,151,1.198,152,1.343,157,0.111,158,0.326,160,1.356,162,0.412,165,0.326,166,0.66,189,4.901,195,0.91,197,0.198,198,1.588,199,2.215,201,2.723,202,2.873,205,0.377,206,0.407,207,2.059,209,0.214,213,2.15,220,0.528,228,1.389,230,0.528,248,3.584,256,1.713,259,4.129,265,2.248,266,5.754,314,3.672,348,1.139,351,1.605,369,1.928,370,1.557,373,3.903,389,3.55,418,0.873,419,1.293,427,0.528,429,0.782,433,3.461,434,3.903,447,2.899,459,1.199,462,2.873,463,1.154,467,2.13,508,1.749,532,0.726,534,1.738,543,0.597,547,3.022,549,3.463,567,3.611,586,3.862,597,1.183,674,1.582,675,1.828,677,2.04,695,1.199,726,3.372,770,2.034,800,1.231,801,1.183,820,4.934,826,2.598,858,4.496,905,2.318,974,2.296,984,1.82,986,1.281,999,2.598,1001,2.739,1002,1.894,1003,2.47,1010,2.615,1075,3.55,1076,4.129,1079,3.584,1080,4.934,1081,4.129,1082,4.129,1083,4.501,1193,2.395,1205,2.498,1289,5.754,1290,5.379,1291,5.975,1292,5.379,1293,4.129,1294,5,1295,5.975,1296,5,1297,5,1298,4.283,1299,5,1300,5,1301,4.129,1302,3.832,1303,5,1304,4.299,1311,4.299,1314,3.025,1315,2.723,1316,2.498,1317,3.025,1318,3.025,1319,3.025,1320,3.025,1321,3.025,1322,2.498,1323,3.025,1324,5.444,1325,5.444,1326,5.444,1327,5.444,1328,3.025,1329,5.757,1330,3.832,1331,3.483,1332,3.483,1333,3.483,1334,3.483,1335,3.483,1336,3.483,1337,3.483,1338,3.483,1339,5.444,1340,6.269,1341,4.496,1342,4.949,1343,2.739,1344,4.949,1345,4.949,1346,4.949,1347,3.294,1348,4.949,1349,3.87,1350,4.299,1351,3.55,1352,4.949]],["title/interfaces/IdProof.html",[233,1.799,1353,2.84]],["body/interfaces/IdProof.html",[0,0.393,3,0.16,4,0.16,8,0.12,11,0.475,12,0.425,14,0.475,15,0.425,19,0.475,21,0.257,22,0.015,23,0.14,26,0.227,27,0.18,73,0.45,74,0.364,76,0.45,146,0.011,147,0.011,151,1.212,152,1.473,155,1.407,157,0.16,160,1.083,166,0.665,174,1.004,195,0.998,197,0.252,198,1.043,209,0.493,220,0.759,230,0.759,233,2.274,256,1.418,293,1.38,320,0.957,371,1.355,418,0.759,419,1.418,422,2.145,423,1.916,425,1.916,427,0.759,429,1.125,430,1.916,456,3.314,457,3.495,458,2.064,460,3.931,462,3.151,467,2.145,468,3.116,469,2.627,470,2.417,508,1.769,513,3.299,516,4.662,519,4.145,530,2.627,531,2.771,533,3.116,534,2.499,536,1.46,546,3.332,549,2.274,550,3.332,561,2.499,601,2.771,607,2.145,654,1.84,692,2.083,698,1.916,1045,3.59,1054,3.914,1055,3.914,1237,3.59,1240,4.834,1302,4.202,1353,4.528,1354,3.914,1355,3.914,1356,3.914,1357,6.503,1358,5.679,1359,5.855,1360,5.855,1361,5.855,1362,5.855,1363,4.834,1364,4.306,1365,3.914,1366,3.914,1367,4.348,1368,4.937,1369,4.96,1370,4.348,1371,4.348,1372,4.348,1373,4.348,1374,4.348,1375,4.348,1376,3.914,1377,3.914,1378,4.348,1379,4.348,1380,4.348,1381,3.914,1382,4.348,1383,4.348,1384,4.348,1385,4.348]],["title/components/IdProofComponent.html",[0,0.247,73,0.356]],["body/components/IdProofComponent.html",[0,0.37,1,0.35,2,0.489,3,0.117,4,0.117,5,0.388,6,0.369,7,0.388,8,0.143,10,0.388,11,0.791,12,0.707,14,0.489,15,0.437,16,0.369,19,0.489,21,0.245,22,0.015,23,0.103,26,0.231,27,0.132,30,0.388,32,0.388,33,0.542,34,0.542,35,0.388,36,0.677,37,0.388,38,0.243,39,0.388,40,0.35,41,0.243,42,0.388,43,0.331,44,0.388,45,0.35,46,0.388,47,0.388,48,0.35,49,0.542,50,0.35,51,0.226,52,0.295,53,0.542,54,0.35,55,0.388,56,0.331,57,0.677,58,0.35,59,0.388,60,0.35,61,0.388,62,0.35,63,0.594,64,0.625,65,0.35,66,0.388,67,0.35,68,0.388,69,0.331,70,0.388,71,0.437,72,0.542,73,0.577,74,0.402,75,0.388,76,0.463,77,0.388,78,0.35,79,0.388,80,0.35,81,0.369,82,0.388,83,0.35,84,0.388,85,0.35,86,0.515,87,0.388,88,0.35,89,0.388,90,0.35,91,0.388,92,0.35,93,0.35,94,0.35,95,0.388,96,0.35,97,0.388,98,0.35,99,0.388,100,0.463,101,0.527,102,0.542,103,0.369,104,0.542,105,0.35,106,0.35,107,0.388,108,0.35,109,0.388,110,0.35,111,0.369,112,0.388,113,0.35,114,0.35,115,0.388,116,0.35,117,0.35,118,0.35,119,0.35,120,0.388,121,0.35,122,0.388,123,0.35,124,0.504,125,0.35,126,0.369,127,0.388,128,0.369,129,0.388,130,0.35,131,0.388,132,0.35,133,0.388,134,0.35,135,0.388,136,0.35,137,0.35,138,0.388,139,0.35,140,0.594,141,0.35,142,0.388,143,0.35,144,0.388,145,0.388,146,0.009,147,0.009,151,1.247,152,1.385,155,1.448,157,0.117,158,0.34,160,1.391,161,0.768,162,0.43,165,0.424,166,0.738,174,0.739,195,0.939,197,0.206,198,1.237,205,0.366,206,0.395,209,0.442,220,0.559,230,0.559,233,1.675,256,1.157,278,1.018,279,0.827,293,1.3,311,2.571,320,0.781,371,0.998,418,0.781,419,1.334,422,2.184,423,2.461,425,1.972,427,0.559,429,0.828,430,1.411,433,2.238,456,3.116,457,3.286,458,1.941,460,3.696,462,2.964,467,2.184,468,3.696,469,3.116,470,2.461,508,1.82,513,1.675,516,3.696,519,3.286,530,1.935,531,2.04,533,2.295,534,1.84,536,1.076,546,2.454,549,1.675,550,2.454,556,2.271,561,1.84,601,2.04,606,3.694,607,2.381,608,3.694,610,1.82,614,3.428,615,3.498,616,4.474,621,2.793,622,4.028,654,1.355,692,2.47,698,1.411,1023,4.474,1031,3.202,1045,4.61,1054,2.882,1055,2.882,1240,2.454,1302,4.278,1353,2.644,1354,5.968,1355,5.968,1356,2.882,1357,5.157,1358,2.882,1359,4.643,1360,4.643,1361,4.643,1362,4.643,1363,2.454,1364,4.362,1365,2.882,1366,2.882,1367,3.202,1368,4.643,1369,5.158,1370,3.202,1371,4.474,1372,4.474,1373,5.157,1374,4.474,1375,3.202,1376,2.882,1377,2.882,1378,3.202,1379,4.474,1380,5.157,1381,4.028,1382,5.157,1383,3.202,1384,3.202,1385,3.202,1386,5.151,1387,3.686,1388,5.151,1389,3.686,1390,3.686,1391,3.686,1392,3.686,1393,3.686,1394,3.686,1395,3.686,1396,3.686,1397,4.028,1398,5.151,1399,5.151,1400,4.474,1401,5.151,1402,4.474,1403,5.151,1404,5.151]],["title/components/IdproofformComponent.html",[0,0.247,76,0.356]],["body/components/IdproofformComponent.html",[0,0.377,1,0.363,2,0.502,3,0.122,4,0.122,5,0.403,6,0.383,7,0.403,8,0.145,10,0.403,11,0.792,12,0.708,14,0.502,15,0.449,16,0.529,19,0.502,21,0.253,22,0.015,23,0.107,26,0.137,27,0.137,30,0.403,32,0.403,33,0.557,34,0.557,35,0.403,36,0.688,37,0.403,38,0.19,39,0.403,40,0.363,41,0.253,42,0.403,43,0.344,44,0.403,45,0.363,46,0.403,47,0.403,48,0.363,49,0.557,50,0.363,51,0.235,52,0.306,53,0.557,54,0.363,55,0.403,56,0.344,57,0.688,58,0.363,59,0.403,60,0.363,61,0.403,62,0.363,63,0.383,64,0.638,65,0.363,66,0.403,67,0.363,68,0.403,69,0.344,70,0.403,71,0.449,72,0.557,73,0.344,74,0.405,75,0.403,76,0.587,77,0.403,78,0.363,79,0.403,80,0.363,81,0.383,82,0.403,83,0.363,84,0.403,85,0.363,86,0.529,87,0.403,88,0.363,89,0.403,90,0.363,91,0.403,92,0.363,93,0.363,94,0.363,95,0.403,96,0.363,97,0.403,98,0.363,99,0.403,100,0.475,101,0.533,102,0.557,103,0.383,104,0.557,105,0.363,106,0.363,107,0.403,108,0.363,109,0.403,110,0.363,111,0.383,112,0.403,113,0.363,114,0.363,115,0.403,116,0.363,117,0.363,118,0.363,119,0.363,120,0.403,121,0.363,122,0.403,123,0.363,124,0.325,125,0.363,126,0.383,127,0.403,128,0.383,129,0.403,130,0.363,131,0.403,132,0.363,133,0.403,134,0.363,135,0.398,136,0.363,137,0.363,138,0.403,139,0.363,140,0.606,141,0.363,142,0.403,143,0.363,144,0.403,145,0.403,146,0.009,147,0.009,155,1.487,157,0.122,158,0.349,161,1.262,162,0.422,165,0.349,166,0.638,174,0.768,176,1.797,195,0.958,197,0.211,198,1.566,205,0.372,206,0.401,209,0.436,220,0.581,230,0.581,256,1.689,293,0.871,348,1.252,351,1.413,365,2.01,370,1.664,418,0.919,419,1.361,427,0.581,429,0.86,458,1.981,459,1.262,461,2.633,463,1.215,516,2.385,532,0.798,536,1.118,542,1.664,543,0.657,566,1.912,579,2.549,583,1.301,607,1.797,610,2.309,614,3.521,615,2.969,621,2.298,693,3.181,694,1.311,695,1.262,710,0.829,711,0.829,712,2.01,727,2.64,731,3.549,732,3.181,733,3.181,734,3.549,738,3.262,740,1.74,743,3.181,745,1.981,746,1.528,749,2.244,750,2.01,751,2.01,752,2.244,754,2.01,755,2.735,756,3.327,767,2.516,770,2.141,800,1.353,801,1.301,982,3.293,984,1.945,986,2.403,999,2.01,1001,2.928,1002,2.025,1003,2.64,1191,3.521,1358,2.995,1359,2.995,1360,4.738,1361,2.995,1362,2.995,1364,4.069,1365,2.995,1366,2.995,1369,5.312,1381,4.136,1400,4.594,1402,4.594,1405,3.327,1406,6.858,1407,5.29,1408,5.29,1409,6.06,1410,6.535,1411,3.83,1412,3.83,1413,3.83,1414,3.83,1415,3.83,1416,6.06,1417,6.06,1418,5.29,1419,5.29,1420,5.29,1421,3.83,1422,3.83,1423,3.83,1424,3.83,1425,3.83,1426,3.83,1427,3.83,1428,3.83,1429,5.29,1430,3.83,1431,3.83,1432,3.83,1433,3.83,1434,3.83,1435,3.83,1436,3.83,1437,3.83,1438,3.83,1439,3.83,1440,3.83,1441,3.83,1442,4.136,1443,5.29,1444,5.29,1445,4.594,1446,5.29,1447,4.594,1448,4.594]],["title/components/IndexComponent.html",[0,0.247,78,0.376]],["body/components/IndexComponent.html",[0,0.332,1,0.289,2,0.426,3,0.097,4,0.097,5,0.321,6,0.305,7,0.321,8,0.151,10,0.321,11,0.784,12,0.701,14,0.426,15,0.381,16,0.45,18,2.221,19,0.426,21,0.188,22,0.015,23,0.085,25,1.121,26,0.109,27,0.109,30,0.321,32,0.321,33,0.473,34,0.473,35,0.321,36,0.62,37,0.321,38,0.161,39,0.321,40,0.289,41,0.201,42,0.321,43,0.274,44,0.321,45,0.289,46,0.321,47,0.321,48,0.289,49,0.473,50,0.289,51,0.187,52,0.244,53,0.473,54,0.289,55,0.661,56,0.274,57,0.62,58,0.289,59,0.321,60,0.289,61,0.321,62,0.289,63,0.305,64,0.562,65,0.289,66,0.321,67,0.289,68,0.321,69,0.274,70,0.321,71,0.381,72,0.473,73,0.274,74,0.161,75,0.321,76,0.274,77,0.321,78,0.559,79,0.321,80,0.289,81,0.305,82,0.321,83,0.289,84,0.321,85,0.289,86,0.45,87,0.321,88,0.289,89,0.321,90,0.289,91,0.321,92,0.289,93,0.506,94,0.289,95,0.321,96,0.289,97,0.321,98,0.289,99,0.321,100,0.404,101,0.614,102,0.473,103,0.305,104,0.473,105,0.289,106,0.289,107,0.321,108,0.289,109,0.321,110,0.289,111,0.305,112,0.321,113,0.289,114,0.506,115,0.321,116,0.289,117,0.289,118,0.289,119,0.289,120,0.321,121,0.289,122,0.321,123,0.289,124,0.577,125,0.289,126,0.305,127,0.321,128,0.305,129,0.321,130,0.289,131,0.321,132,0.289,133,0.321,134,0.289,135,0.338,136,0.289,137,0.289,138,0.321,139,0.289,140,0.68,141,0.289,142,0.321,143,0.289,144,0.321,145,0.321,146,0.008,147,0.008,151,1.088,152,1.245,155,1.263,157,0.17,158,0.389,160,1.275,162,0.336,165,0.201,166,0.473,186,3.922,194,4.175,197,0.18,201,2.56,202,2.665,205,0.304,206,0.328,213,1.953,220,0.463,249,3.515,265,2.986,339,1.721,340,1.385,350,3.366,371,1.595,391,3.661,394,3.515,418,0.81,427,0.463,439,4.714,440,5.139,443,4.353,447,2.633,449,3.451,557,2.782,567,2.36,675,2.36,724,3.515,767,2.803,810,3.515,826,4.115,827,3.661,829,3.224,832,3.861,833,3.661,835,3.668,836,4.375,838,2.244,839,5.139,840,3.45,845,2.799,859,2.244,872,4.508,873,2.992,875,3.503,878,2.992,880,2.799,883,3.515,884,3.515,886,3.905,892,3.451,898,4.607,899,4.353,903,3.905,1058,4.643,1077,3.515,1090,3.905,1275,3.515,1290,5.662,1339,3.905,1341,3.224,1347,2.992,1349,3.515,1351,4.226,1397,4.607,1449,2.649,1450,4.496,1451,4.496,1452,5.339,1453,3.05,1454,2.799,1455,3.05,1456,3.05,1457,3.05,1458,1.786,1459,2.385,1460,3.05,1461,3.05,1462,3.05,1463,4.82,1464,4.496,1465,5.117,1466,3.224,1467,5.139,1468,5.81,1469,3.922,1470,5.892,1471,5.117,1472,4.496,1473,2.488,1474,4.226,1475,5.117,1476,4.643,1477,3.451,1478,4.607,1479,5.454,1480,4.226,1481,5.892,1482,4.496,1483,4.496,1484,5.892,1485,3.905,1486,5.117,1487,3.224,1488,2.799,1489,5.892,1490,4.496,1491,3.515,1492,4.496,1493,4.496,1494,4.496,1495,3.515,1496,3.515,1497,2.36,1498,3.224,1499,3.905,1500,4.496,1501,4.496,1502,4.496,1503,3.515,1504,5.117,1505,7.242,1506,4.496,1507,4.496,1508,4.496,1509,3.905,1510,2.799,1511,3.224,1512,3.922,1513,4.496,1514,4.496,1515,2.992,1516,5.892,1517,4.607,1518,3.05,1519,4.496,1520,4.496,1521,4.496,1522,3.905,1523,4.496,1524,3.515,1525,3.905,1526,3.905,1527,4.496,1528,3.515,1529,2.992,1530,2.799,1531,2.488,1532,3.515,1533,3.515,1534,5.117,1535,3.905,1536,4.496,1537,3.224,1538,4.496,1539,3.905,1540,4.496,1541,4.496,1542,3.905,1543,4.496,1544,4.496,1545,4.496,1546,4.496,1547,3.905,1548,4.496,1549,4.496,1550,3.905,1551,4.496,1552,3.224,1553,3.515,1554,4.496,1555,4.496,1556,3.515,1557,4.496,1558,3.905,1559,3.905,1560,4.496,1561,4.496,1562,4.496,1563,4.496,1564,4.496,1565,4.496,1566,7.728,1567,4.496,1568,3.905,1569,3.905,1570,4.496,1571,3.515,1572,4.496,1573,4.496,1574,4.496,1575,4.496,1576,3.905,1577,3.515,1578,4.496,1579,4.496,1580,4.496,1581,4.496,1582,4.496,1583,4.496,1584,4.496,1585,4.496,1586,4.496,1587,4.496,1588,4.496,1589,4.496,1590,4.496,1591,3.05]],["title/components/InvitationAcceptComponent.html",[0,0.247,80,0.376]],["body/components/InvitationAcceptComponent.html",[0,0.369,1,0.349,2,0.488,3,0.117,4,0.117,5,0.387,6,0.368,7,0.387,8,0.142,10,0.387,11,0.791,12,0.707,14,0.488,15,0.503,16,0.514,19,0.488,21,0.249,22,0.015,23,0.103,25,1.352,26,0.132,27,0.132,30,0.387,32,0.387,33,0.541,34,0.541,35,0.387,36,0.676,37,0.387,38,0.23,39,0.387,40,0.349,41,0.243,42,0.387,43,0.33,44,0.387,45,0.349,46,0.387,47,0.387,48,0.349,49,0.541,50,0.349,51,0.364,52,0.294,53,0.541,54,0.349,55,0.387,56,0.33,57,0.676,58,0.349,59,0.387,60,0.349,61,0.387,62,0.349,63,0.368,64,0.624,65,0.349,66,0.387,67,0.349,68,0.387,69,0.33,70,0.387,71,0.436,72,0.541,73,0.33,74,0.271,75,0.387,76,0.33,77,0.387,78,0.349,79,0.387,80,0.609,81,0.755,82,0.387,83,0.349,84,0.387,85,0.349,86,0.514,87,0.387,88,0.349,89,0.387,90,0.349,91,0.387,92,0.349,93,0.349,94,0.349,95,0.387,96,0.349,97,0.387,98,0.349,99,0.387,100,0.462,101,0.608,102,0.541,103,0.368,104,0.541,105,0.349,106,0.349,107,0.387,108,0.349,109,0.387,110,0.349,111,0.368,112,0.387,113,0.349,114,0.349,115,0.387,116,0.349,117,0.349,118,0.349,119,0.349,120,0.387,121,0.349,122,0.387,123,0.349,124,0.312,125,0.349,126,0.368,127,0.387,128,0.368,129,0.387,130,0.349,131,0.387,132,0.349,133,0.387,134,0.349,135,0.387,136,0.349,137,0.349,138,0.387,139,0.349,140,0.593,141,0.349,142,0.387,143,0.349,144,0.387,145,0.387,146,0.009,147,0.009,151,1.245,152,1.383,157,0.117,158,0.339,160,1.389,161,0.766,162,0.435,165,0.424,166,0.737,174,1.355,176,1.25,195,0.937,197,0.206,199,2.269,205,0.338,206,0.364,207,2.14,209,0.415,210,1.3,220,0.558,228,1.467,230,0.558,256,0.826,278,0.882,279,0.716,299,2.927,320,0.78,342,0.796,348,1.202,350,2.14,370,1.157,371,0.996,385,3.194,399,2.638,417,4.253,418,0.899,419,1.332,427,0.558,428,2.638,429,0.826,459,1.235,463,1.189,532,0.766,543,0.631,583,1.25,607,1.25,654,1.352,674,1.671,694,1.283,695,1.235,710,0.796,711,0.796,720,1.836,733,3.113,739,2.448,740,2.917,743,2.699,745,2.436,746,1.467,751,1.93,754,2.699,755,2.365,770,2.095,800,1.3,801,1.25,854,3.998,875,1.598,880,2.29,984,1.891,986,1.352,1002,1.408,1010,1.671,1015,2.699,1102,1.836,1207,3.051,1458,3.761,1592,6.686,1593,6.686,1594,3.194,1595,5.143,1596,5.15,1597,5.93,1598,5.143,1599,5.15,1600,5.15,1601,5.93,1602,4.253,1603,5.93,1604,6.422,1605,6.422,1606,5.143,1607,4.274,1608,5.143,1609,3.678,1610,3.678,1611,3.678,1612,5.143,1613,3.678,1614,5.143,1615,3.678,1616,3.678,1617,4.021,1618,3.678,1619,3.678,1620,3.678,1621,3.678,1622,3.194,1623,2.036,1624,2.448,1625,3.678,1626,5.15,1627,3.678,1628,3.678,1629,3.678,1630,5.93,1631,2.448,1632,3.678,1633,3.678,1634,3.678,1635,3.194,1636,3.678,1637,3.678,1638,3.678,1639,3.194,1640,5.143,1641,3.678,1642,3.678,1643,3.678,1644,3.678,1645,3.678,1646,2.876,1647,3.678,1648,3.678,1649,2.876,1650,2.876,1651,3.678,1652,3.678,1653,2.448,1654,3.678,1655,3.678,1656,2.448,1657,5.143,1658,5.577,1659,5.734,1660,4.021,1661,4.021]],["title/components/LoginComponent.html",[0,0.247,83,0.376]],["body/components/LoginComponent.html",[0,0.365,1,0.342,2,0.481,3,0.115,4,0.115,5,0.379,6,0.361,7,0.379,8,0.141,10,0.379,11,0.79,12,0.707,14,0.481,15,0.54,16,0.507,18,2.441,19,0.481,21,0.244,22,0.015,23,0.101,25,1.325,26,0.129,27,0.129,30,0.379,32,0.379,33,0.534,34,0.534,35,0.379,36,0.67,37,0.379,38,0.228,39,0.379,40,0.342,41,0.238,42,0.379,43,0.324,44,0.379,45,0.342,46,0.379,47,0.379,48,0.342,49,0.534,50,0.342,51,0.221,52,0.288,53,0.534,54,0.342,55,0.379,56,0.324,57,0.67,58,0.342,59,0.379,60,0.342,61,0.379,62,0.342,63,0.361,64,0.617,65,0.342,66,0.379,67,0.342,68,0.379,69,0.324,70,0.379,71,0.43,72,0.534,73,0.324,74,0.19,75,0.379,76,0.324,77,0.379,78,0.342,79,0.379,80,0.342,81,0.361,82,0.379,83,0.604,84,0.379,85,0.342,86,0.507,87,0.379,88,0.342,89,0.379,90,0.342,91,0.379,92,0.342,93,0.342,94,0.342,95,0.379,96,0.342,97,0.379,98,0.342,99,0.379,100,0.455,101,0.592,102,0.534,103,0.361,104,0.534,105,0.342,106,0.342,107,0.379,108,0.342,109,0.379,110,0.342,111,0.361,112,0.379,113,0.342,114,0.342,115,0.379,116,0.342,117,0.342,118,0.342,119,0.342,120,0.379,121,0.342,122,0.379,123,0.342,124,0.306,125,0.342,126,0.361,127,0.379,128,0.361,129,0.379,130,0.342,131,0.379,132,0.342,133,0.379,134,0.342,135,0.381,136,0.342,137,0.342,138,0.379,139,0.342,140,0.587,141,0.342,142,0.379,143,0.342,144,0.379,145,0.379,146,0.009,147,0.009,151,1.228,152,1.368,157,0.115,158,0.334,160,1.377,162,0.446,165,0.42,166,0.706,174,1.017,195,0.927,197,0.203,198,1.631,199,1.274,201,2.765,205,0.428,206,0.462,207,2.11,209,0.427,210,2.073,211,2.364,213,2.203,220,0.547,228,1.438,230,0.547,244,1.799,265,3.16,271,3.965,278,0.87,279,0.706,293,0.594,320,1.181,342,1.097,348,1.179,351,1.183,369,1.996,386,1.799,387,2.112,418,0.89,419,1.318,427,0.547,429,0.81,459,1.222,463,1.176,467,2.163,508,1.792,532,0.751,543,0.618,547,2.662,694,1.269,695,1.222,710,0.78,711,0.78,718,2.399,720,2.531,738,3.177,745,2.337,746,1.438,755,2.539,770,2.073,800,1.274,801,1.225,851,1.996,892,2.112,974,2.539,984,1.864,986,1.325,1002,1.38,1003,1.799,1005,3.963,1074,3.965,1102,3.177,1154,2.112,1207,2.11,1241,2.586,1293,4.811,1322,2.586,1454,3.157,1458,2.112,1473,1.996,1497,1.892,1596,5.095,1607,3.905,1622,3.131,1631,3.375,1649,2.819,1650,2.819,1662,3.131,1663,5.866,1664,5.071,1665,5.095,1666,3.652,1667,5.866,1668,4.587,1669,4.587,1670,5.866,1671,5.071,1672,4.404,1673,5.071,1674,5.095,1675,3.605,1676,3.605,1677,3.605,1678,4.404,1679,3.703,1680,3.605,1681,3.605,1682,3.605,1683,4.404,1684,3.605,1685,3.605,1686,3.963,1687,4.404,1688,3.605,1689,4.404,1690,4.404,1691,4.404,1692,3.605,1693,3.605,1694,3.605,1695,3.605,1696,3.605,1697,3.605,1698,2.586,1699,3.131,1700,3.605,1701,3.605,1702,3.605,1703,2.586,1704,2.586,1705,2.819,1706,2.586,1707,2.97,1708,5.071,1709,3.131,1710,3.131,1711,3.605,1712,3.131,1713,3.605,1714,5.866,1715,3.605,1716,3.605,1717,3.131,1718,3.605,1719,3.605,1720,3.605,1721,3.605,1722,5.071,1723,3.131,1724,3.131,1725,2.586,1726,3.131,1727,4.404,1728,3.131,1729,6.366,1730,4.977,1731,3.131]],["title/components/MfaSettingComponent.html",[0,0.247,85,0.376]],["body/components/MfaSettingComponent.html",[0,0.322,1,0.274,2,0.41,3,0.092,4,0.092,5,0.305,6,0.289,7,0.305,8,0.124,10,0.305,11,0.781,12,0.699,14,0.41,15,0.547,16,0.432,19,0.41,21,0.239,22,0.015,23,0.081,26,0.104,27,0.104,30,0.305,32,0.305,33,0.455,34,0.455,35,0.305,36,0.604,37,0.305,38,0.231,39,0.305,40,0.274,41,0.341,42,0.305,43,0.26,44,0.305,45,0.274,46,0.305,47,0.305,48,0.274,49,0.455,50,0.274,51,0.178,52,0.231,53,0.455,54,0.274,55,0.305,56,0.26,57,0.604,58,0.274,59,0.305,60,0.274,61,0.305,62,0.274,63,0.289,64,0.545,65,0.274,66,0.305,67,0.274,68,0.305,69,0.26,70,0.305,71,0.367,72,0.455,73,0.26,74,0.152,75,0.305,76,0.26,77,0.305,78,0.274,79,0.305,80,0.274,81,0.289,82,0.305,83,0.274,84,0.305,85,0.545,86,0.767,87,0.305,88,0.274,89,0.305,90,0.274,91,0.305,92,0.274,93,0.274,94,0.274,95,0.305,96,0.274,97,0.305,98,0.274,99,0.305,100,0.388,101,0.517,102,0.455,103,0.289,104,0.455,105,0.274,106,0.274,107,0.305,108,0.274,109,0.305,110,0.274,111,0.289,112,0.305,113,0.274,114,0.274,115,0.305,116,0.274,117,0.274,118,0.274,119,0.274,120,0.305,121,0.274,122,0.305,123,0.274,124,0.246,125,0.274,126,0.289,127,0.305,128,0.289,129,0.305,130,0.274,131,0.305,132,0.274,133,0.305,134,0.274,135,0.325,136,0.274,137,0.274,138,0.305,139,0.274,140,0.518,141,0.274,142,0.305,143,0.274,144,0.305,145,0.305,146,0.008,147,0.008,157,0.092,158,0.285,161,0.603,162,0.419,165,0.425,166,0.764,174,0.867,195,0.818,197,0.173,198,1.463,199,2.029,205,0.295,206,0.422,207,1.799,209,0.396,210,1.829,211,1.469,220,0.439,228,1.154,230,0.439,244,1.444,259,4.118,278,0.985,279,0.8,299,2.37,311,3.826,314,1.695,348,0.946,351,1.207,358,2.878,370,0.91,373,2.692,416,2.393,418,0.785,419,1.163,422,1.951,423,2.198,425,1.655,427,0.439,429,0.65,430,1.108,432,1.926,433,1.878,435,0.813,459,1.078,463,1.038,512,3.218,532,0.603,543,0.496,567,2.269,583,0.983,607,1.469,610,1.528,619,2.532,654,1.064,665,2.393,674,1.314,675,1.519,676,2.075,677,1.695,694,1.12,695,1.078,710,0.626,711,0.626,726,2.532,730,2.057,733,2.717,734,3.032,738,2.866,739,1.926,740,2.608,743,2.269,745,1.692,751,1.519,752,1.695,754,1.519,767,2.732,770,1.829,800,1.022,801,0.983,838,3.569,851,4.31,854,3.575,875,3.383,880,2.692,894,5.128,908,3.381,913,5.956,915,4.927,932,1.695,934,3.381,938,5.07,939,3.101,959,6.514,974,2.065,984,1.589,986,1.064,990,2.692,999,1.519,1001,2.393,1002,1.655,1009,3.178,1010,1.314,1015,2.269,1045,3.101,1075,3.101,1205,2.075,1207,1.799,1315,2.263,1469,2.878,1474,3.101,1491,5.041,1512,3.822,1531,4.4,1646,3.381,1656,2.878,1661,5.591,1668,4.047,1669,3.381,1679,1.377,1725,2.075,1732,6.453,1733,6.453,1734,2.513,1735,4.324,1736,4.496,1737,4.496,1738,5.176,1739,4.324,1740,5.742,1741,4.324,1742,4.324,1743,4.324,1744,4.324,1745,2.894,1746,2.894,1747,4.324,1748,2.894,1749,4.324,1750,2.894,1751,4.324,1752,2.894,1753,3.755,1754,2.894,1755,2.894,1756,2.894,1757,2.894,1758,2.894,1759,1.801,1760,1.695,1761,2.513,1762,2.513,1763,2.263,1764,2.894,1765,4.324,1766,4.987,1767,4.324,1768,4.324,1769,4.324,1770,2.894,1771,2.894,1772,2.894,1773,2.894,1774,6.146,1775,4.624,1776,2.894,1777,4.987,1778,2.894,1779,2.894,1780,2.894,1781,2.894,1782,2.894,1783,2.894,1784,2.894,1785,2.894,1786,4.324,1787,5.6,1788,2.894,1789,2.894,1790,2.894,1791,2.894,1792,2.894,1793,2.894,1794,2.894,1795,2.894,1796,2.894,1797,2.894,1798,2.894,1799,2.513,1800,2.894,1801,2.513,1802,2.263,1803,5.041,1804,2.692,1805,7.35,1806,7.5,1807,7.5,1808,6.448,1809,5.742,1810,7.617,1811,7.15,1812,3.101,1813,3.755,1814,3.755,1815,3.101,1816,3.755,1817,4.987,1818,4.324,1819,4.987,1820,4.324,1821,4.118,1822,5.6,1823,2.263,1824,4.324,1825,5.742,1826,5.591,1827,4.324,1828,5.742,1829,4.324,1830,5.742,1831,3.755,1832,4.324,1833,4.324,1834,4.324,1835,3.755,1836,3.755,1837,4.324,1838,3.755,1839,3.381,1840,4.324,1841,4.324,1842,3.381,1843,4.324,1844,3.755,1845,4.324,1846,4.324,1847,4.324,1848,4.324,1849,3.755,1850,2.894]],["title/components/MfaVerificationComponent.html",[0,0.247,88,0.376]],["body/components/MfaVerificationComponent.html",[0,0.387,1,0.381,2,0.519,3,0.128,4,0.128,5,0.423,6,0.402,7,0.423,8,0.149,10,0.423,11,0.793,12,0.71,14,0.519,15,0.464,16,0.547,19,0.519,21,0.242,22,0.015,23,0.112,25,1.478,26,0.144,27,0.144,30,0.423,32,0.423,33,0.576,34,0.576,35,0.423,36,0.702,37,0.423,38,0.196,39,0.423,40,0.381,41,0.265,42,0.423,43,0.361,44,0.423,45,0.381,46,0.423,47,0.423,48,0.381,49,0.576,50,0.381,51,0.247,52,0.322,53,0.576,54,0.381,55,0.423,56,0.361,57,0.702,58,0.381,59,0.423,60,0.381,61,0.423,62,0.381,63,0.402,64,0.654,65,0.381,66,0.423,67,0.381,68,0.423,69,0.361,70,0.423,71,0.464,72,0.576,73,0.361,74,0.212,75,0.423,76,0.361,77,0.423,78,0.381,79,0.423,80,0.381,81,0.402,82,0.423,83,0.381,84,0.423,85,0.381,86,0.768,87,0.423,88,0.633,89,0.423,90,0.381,91,0.423,92,0.381,93,0.381,94,0.381,95,0.423,96,0.381,97,0.423,98,0.381,99,0.423,100,0.491,101,0.541,102,0.576,103,0.402,104,0.576,105,0.381,106,0.381,107,0.423,108,0.381,109,0.423,110,0.381,111,0.402,112,0.423,113,0.381,114,0.381,115,0.423,116,0.381,117,0.381,118,0.381,119,0.381,120,0.423,121,0.381,122,0.423,123,0.381,124,0.341,125,0.381,126,0.402,127,0.423,128,0.402,129,0.423,130,0.381,131,0.423,132,0.381,133,0.423,134,0.381,135,0.411,136,0.381,137,0.381,138,0.423,139,0.381,140,0.622,141,0.381,142,0.423,143,0.381,144,0.423,145,0.423,146,0.01,147,0.01,155,1.537,157,0.128,158,0.361,161,1.295,162,0.433,165,0.265,166,0.423,174,0.806,195,0.983,197,0.219,199,1.421,201,2.898,205,0.42,206,0.452,207,2.275,209,0.247,213,2.376,220,0.61,228,1.604,230,0.61,265,2.484,293,0.901,299,2.646,317,3.492,320,1.165,351,1.45,369,2.226,418,0.943,427,0.61,459,1.295,463,1.246,532,0.838,543,0.689,694,1.345,695,1.295,710,0.87,711,0.87,745,2.032,746,1.604,755,2.182,770,2.196,800,1.421,801,1.366,974,2.479,984,2.011,986,1.478,1002,2.093,1003,2.73,1008,4.481,1207,2.994,1293,4.458,1454,3.405,1458,2.355,1631,3.64,1646,4.276,1649,3.144,1650,3.144,1665,5.398,1668,4.86,1669,4.86,1679,3.614,1683,4.75,1689,4.75,1690,4.75,1691,4.75,1698,2.884,1717,4.75,1724,3.492,1725,3.923,1775,3.923,1777,4.75,1787,3.492,1799,3.492,1801,4.75,1831,6.508,1851,6.672,1852,6.672,1853,3.492,1854,5.469,1855,5.469,1856,6.215,1857,6.67,1858,4.021,1859,4.021,1860,4.021,1861,4.021,1862,4.021,1863,4.021,1864,4.021,1865,4.021,1866,4.021,1867,4.021,1868,4.021,1869,4.021,1870,4.021,1871,4.021,1872,4.021,1873,5.469,1874,4.021,1875,5.469]],["title/injectables/NoteService.html",[251,0.959,1876,2.465]],["body/injectables/NoteService.html",[3,0.153,4,0.153,8,0.115,21,0.235,22,0.015,23,0.134,26,0.172,27,0.172,38,0.284,51,0.294,56,0.642,74,0.398,124,0.407,146,0.011,147,0.011,157,0.153,158,0.405,161,0.998,162,0.455,165,0.519,193,1.834,197,0.245,205,0.273,206,0.294,209,0.487,251,1.487,252,1.993,256,1.698,257,3.078,258,2.668,278,1.359,279,1.104,281,2.887,293,1.349,320,0.727,329,2.973,330,2.652,331,2.082,333,2.392,335,2.983,338,1.452,339,1.834,340,2.177,341,1.993,342,1.701,347,2.807,348,1.566,351,1.793,365,2.515,371,1.297,377,3.437,387,2.807,435,1.347,449,2.807,471,2.652,486,2.983,551,2.652,556,1.693,561,3.065,562,2.983,563,2.652,564,2.983,565,2.983,572,2.652,628,4.801,633,4.404,635,2.392,648,4.404,653,2.983,654,1.762,656,5.777,659,3.746,660,3.746,661,3.437,662,3.746,663,3.437,665,2.652,666,3.189,667,3.189,668,3.746,669,2.983,670,3.746,671,3.746,672,3.746,673,3.746,674,2.177,675,2.515,676,3.437,677,2.807,1466,3.437,1876,3.823,1877,4.161,1878,6.141,1879,4.801,1880,6.141,1881,6.141,1882,4.801,1883,4.404,1884,6.141,1885,6.141,1886,6.141,1887,4.791,1888,3.746,1889,6.141,1890,4.791,1891,4.967,1892,6.141,1893,4.791,1894,6.141,1895,4.791,1896,6.141,1897,4.791,1898,6.141,1899,4.791,1900,4.791,1901,5.333,1902,4.791,1903,4.161,1904,6.141,1905,4.791,1906,6.141,1907,4.791,1908,4.791,1909,4.161,1910,3.189,1911,4.791]],["title/components/NotesComponent.html",[0,0.247,90,0.376]],["body/components/NotesComponent.html",[0,0.358,1,0.275,2,0.411,3,0.093,4,0.093,5,0.306,6,0.29,7,0.306,8,0.125,10,0.306,11,0.782,12,0.7,14,0.492,15,0.548,16,0.519,19,0.492,21,0.246,22,0.015,23,0.081,26,0.206,27,0.156,30,0.306,32,0.306,33,0.456,34,0.456,35,0.306,36,0.605,37,0.306,38,0.247,39,0.306,40,0.275,41,0.192,42,0.306,43,0.261,44,0.306,45,0.275,46,0.306,47,0.306,48,0.275,49,0.456,50,0.275,51,0.178,52,0.232,53,0.456,54,0.275,55,0.306,56,0.261,57,0.605,58,0.275,59,0.306,60,0.275,61,0.306,62,0.275,63,0.519,64,0.546,65,0.275,66,0.306,67,0.275,68,0.306,69,0.261,70,0.306,71,0.368,72,0.456,73,0.261,74,0.34,75,0.306,76,0.261,77,0.306,78,0.275,79,0.306,80,0.275,81,0.29,82,0.306,83,0.275,84,0.306,85,0.275,86,0.434,87,0.306,88,0.275,89,0.306,90,0.546,91,0.306,92,0.411,93,0.652,94,0.275,95,0.306,96,0.275,97,0.306,98,0.275,99,0.306,100,0.389,101,0.573,102,0.456,103,0.29,104,0.456,105,0.275,106,0.275,107,0.306,108,0.275,109,0.306,110,0.275,111,0.29,112,0.306,113,0.275,114,0.275,115,0.306,116,0.275,117,0.275,118,0.275,119,0.275,120,0.306,121,0.275,122,0.306,123,0.275,124,0.522,125,0.275,126,0.29,127,0.306,128,0.29,129,0.306,130,0.275,131,0.306,132,0.275,133,0.306,134,0.275,135,0.326,136,0.275,137,0.275,138,0.306,139,0.275,140,0.669,141,0.411,142,0.306,143,0.275,144,0.306,145,0.306,146,0.008,147,0.008,151,1.05,152,1.21,155,1.218,157,0.138,158,0.286,160,1.245,161,1.08,162,0.449,165,0.485,166,0.807,171,1.524,174,1.379,176,1.473,195,0.909,197,0.173,198,1.615,205,0.408,206,0.44,209,0.446,210,1.833,211,1.473,220,0.44,230,0.44,278,1.107,279,0.899,281,1.026,293,1.211,311,2.164,320,0.657,333,1.45,334,2.4,338,0.88,342,1.488,347,1.701,348,0.949,351,1.604,356,1.969,365,1.524,370,1.81,371,1.666,372,1.808,374,1.933,375,1.608,387,1.701,418,0.872,419,1.165,422,1.955,423,2.202,425,1.659,427,0.44,429,0.652,430,1.112,433,1.883,435,1.458,436,3.39,456,2.723,457,2.871,458,1.881,459,1.08,461,2.254,462,2.589,463,1.04,467,0.987,469,2.723,470,1.112,471,2.871,472,4.097,473,3.765,475,4.126,477,4.126,479,4.126,481,3.765,483,3.109,485,4.415,486,3.229,508,1.532,512,2.871,513,1.969,520,3.109,521,3.37,523,2.062,526,3.109,530,1.524,531,1.608,532,0.605,534,1.45,535,1.45,536,0.847,539,1.933,540,2.083,541,2.083,542,1.262,543,0.498,549,1.319,551,3.184,552,3.72,553,2.083,554,2.083,555,3.229,556,2.364,557,1.158,560,2.083,561,2.164,562,1.808,563,1.608,564,1.808,565,1.808,566,1.45,567,1.524,569,3.109,570,3.109,572,1.608,573,2.083,574,2.083,575,2.083,576,2.083,577,2.083,578,2.083,579,1.933,581,1.524,582,3.109,583,0.987,584,2.4,585,1.808,586,1.524,587,3.109,588,2.083,589,3.109,591,3.109,592,2.083,594,3.109,595,2.083,596,2.083,597,1.763,601,1.608,603,1.45,606,3.109,607,1.955,608,4.126,610,2.175,615,2.613,621,1.883,625,3.765,692,2.158,694,1.122,695,1.08,698,1.112,710,0.628,711,0.628,732,2.723,750,1.524,818,1.382,827,2.276,833,1.524,840,2.276,859,1.45,1073,3.109,1079,3.229,1151,2.4,1193,1.804,1298,3.581,1459,2.271,1876,3.581,1882,4.498,1888,3.39,1891,3.832,1912,2.271,1913,3.765,1914,3.765,1915,4.505,1916,3.72,1917,4.505,1918,4.335,1919,4.335,1920,4.335,1921,4.335,1922,4.335,1923,2.904,1924,3.39,1925,3.765,1926,3.765,1927,3.765,1928,2.904,1929,2.904,1930,2.904,1931,2.904,1932,2.904,1933,3.765,1934,2.904,1935,2.904,1936,3.765,1937,3.765,1938,3.765,1939,2.885,1940,2.904,1941,3.765,1942,2.904,1943,3.765,1944,2.904,1945,3.765,1946,2.904,1947,2.904,1948,2.904,1949,2.904,1950,4.126,1951,3.829,1952,3.765,1953,3.765,1954,2.904,1955,2.904,1956,2.904,1957,3.39,1958,2.904,1959,2.904,1960,2.904,1961,2.271,1962,2.522,1963,2.083,1964,1.933,1965,4.996,1966,3.72,1967,2.522,1968,3.765,1969,2.522,1970,4.505,1971,2.522,1972,2.522,1973,2.522,1974,1.701,1975,2.522,1976,2.522,1977,2.522,1978,2.522,1979,2.522,1980,2.522,1981,2.522,1982,2.271,1983,2.522,1984,2.522,1985,4.335,1986,4.335,1987,4.335,1988,4.335,1989,3.765,1990,3.109,1991,4.335,1992,3.39,1993,4.335,1994,2.904,1995,4.335,1996,4.335,1997,4.335,1998,2.904]],["title/components/NotesFormComponent.html",[0,0.247,92,0.376]],["body/components/NotesFormComponent.html",[0,0.396,1,0.399,2,0.535,3,0.134,4,0.134,5,0.442,6,0.42,7,0.442,8,0.153,10,0.442,11,0.795,12,0.711,14,0.535,15,0.478,16,0.564,19,0.535,21,0.252,22,0.015,23,0.117,26,0.151,27,0.151,30,0.442,32,0.442,33,0.593,34,0.593,35,0.442,36,0.715,37,0.442,38,0.202,39,0.442,40,0.399,41,0.277,42,0.442,43,0.378,44,0.442,45,0.399,46,0.442,47,0.442,48,0.399,49,0.593,50,0.399,51,0.258,52,0.336,53,0.593,54,0.399,55,0.442,56,0.378,57,0.715,58,0.399,59,0.442,60,0.399,61,0.442,62,0.399,63,0.42,64,0.669,65,0.399,66,0.442,67,0.399,68,0.442,69,0.378,70,0.442,71,0.478,72,0.593,73,0.378,74,0.221,75,0.442,76,0.378,77,0.442,78,0.399,79,0.442,80,0.399,81,0.42,82,0.442,83,0.399,84,0.442,85,0.399,86,0.564,87,0.442,88,0.399,89,0.442,90,0.399,91,0.442,92,0.644,93,0.706,94,0.399,95,0.442,96,0.399,97,0.442,98,0.399,99,0.442,100,0.506,101,0.549,102,0.593,103,0.42,104,0.593,105,0.399,106,0.399,107,0.442,108,0.399,109,0.442,110,0.399,111,0.42,112,0.442,113,0.399,114,0.399,115,0.442,116,0.399,117,0.399,118,0.399,119,0.399,120,0.442,121,0.399,122,0.442,123,0.399,124,0.357,125,0.399,126,0.42,127,0.442,128,0.42,129,0.442,130,0.399,131,0.442,132,0.399,133,0.442,134,0.399,135,0.424,136,0.399,137,0.399,138,0.442,139,0.399,140,0.636,141,0.399,142,0.442,143,0.399,144,0.442,145,0.442,146,0.01,147,0.01,157,0.134,158,0.372,161,1.324,162,0.425,165,0.277,166,0.442,195,1.005,197,0.225,198,1.639,205,0.387,206,0.417,209,0.258,220,0.638,230,0.638,256,1.768,370,1.323,371,1.721,418,0.964,419,1.428,427,0.638,429,0.944,458,2.078,459,1.324,461,2.762,463,1.275,532,0.876,535,2.098,536,1.227,542,1.826,543,0.721,603,2.813,607,1.915,621,1.826,693,3.337,694,1.375,695,1.324,698,2.434,704,2.207,710,0.909,711,0.909,712,2.207,727,2.813,729,2.617,730,2.681,731,3.724,732,3.337,735,3.751,738,3.39,740,1.91,743,3.337,745,2.078,746,1.677,749,2.462,750,2.207,754,2.207,755,2.248,767,2.681,980,3.509,982,3.509,1004,3.509,1298,3.958,1876,4.229,1891,3.509,1950,4.56,1957,4.407,1961,3.287,1999,6.574,2000,6.358,2001,4.895,2002,4.204,2003,4.204,2004,4.204,2005,4.204,2006,3.651,2007,4.204,2008,4.204,2009,4.204,2010,4.204,2011,4.204,2012,4.204,2013,4.204,2014,4.204,2015,4.204]],["title/components/NotificationComponent.html",[0,0.247,94,0.376]],["body/components/NotificationComponent.html",[0,0.399,1,0.406,2,0.541,3,0.136,4,0.136,5,0.45,6,0.428,7,0.45,8,0.18,10,0.45,11,0.795,12,0.712,14,0.541,15,0.484,16,0.57,19,0.541,21,0.25,22,0.015,23,0.119,26,0.154,27,0.154,30,0.45,32,0.45,33,0.6,34,0.6,35,0.45,36,0.72,37,0.45,38,0.205,39,0.45,40,0.406,41,0.282,42,0.45,43,0.384,44,0.45,45,0.406,46,0.45,47,0.45,48,0.406,49,0.6,50,0.406,51,0.263,52,0.342,53,0.6,54,0.406,55,0.675,56,0.576,57,0.72,58,0.406,59,0.45,60,0.406,61,0.45,62,0.406,63,0.428,64,0.675,65,0.406,66,0.45,67,0.406,68,0.45,69,0.384,70,0.45,71,0.484,72,0.6,73,0.384,74,0.225,75,0.45,76,0.384,77,0.45,78,0.406,79,0.45,80,0.406,81,0.428,82,0.45,83,0.406,84,0.45,85,0.406,86,0.57,87,0.45,88,0.406,89,0.45,90,0.406,91,0.45,92,0.406,93,0.608,94,0.649,95,0.45,96,0.406,97,0.45,98,0.406,99,0.45,100,0.512,101,0.572,102,0.6,103,0.428,104,0.6,105,0.406,106,0.406,107,0.45,108,0.406,109,0.45,110,0.406,111,0.428,112,0.45,113,0.406,114,0.406,115,0.45,116,0.406,117,0.406,118,0.406,119,0.406,120,0.45,121,0.406,122,0.45,123,0.406,124,0.363,125,0.406,126,0.428,127,0.45,128,0.428,129,0.45,130,0.406,131,0.45,132,0.406,133,0.45,134,0.406,135,0.429,136,0.406,137,0.406,138,0.45,139,0.406,140,0.642,141,0.406,142,0.45,143,0.406,144,0.45,145,0.45,146,0.01,147,0.01,155,1.603,157,0.136,158,0.376,162,0.366,165,0.282,166,0.6,195,1.014,197,0.228,198,1.336,205,0.325,206,0.35,209,0.35,220,0.649,230,0.649,299,2.515,320,1.153,350,2.373,418,0.973,419,1.441,422,2.325,423,2.619,425,2.183,427,0.649,429,0.962,430,1.638,432,2.849,433,2.478,453,4.954,459,1.336,461,2.787,463,1.286,532,0.892,542,1.859,543,0.734,581,2.994,666,3.796,694,1.388,695,1.336,710,0.926,711,0.926,717,4.091,733,3.367,734,3.758,745,2.097,751,2.247,752,2.507,767,2.713,840,2.994,1009,3.787,1151,3.157,1529,3.796,1530,3.551,1531,3.157,1679,2.036,1759,2.665,1760,3.341,1964,3.796,2016,3.717,2017,6.366,2018,5.704,2019,5.704,2020,6.415,2021,4.28,2022,4.28,2023,5.704,2024,5.704,2025,5.704,2026,5.704,2027,5.704,2028,5.704,2029,4.28,2030,4.954,2031,4.954,2032,3.796,2033,3.551,2034,5.704,2035,4.46,2036,5.704,2037,5.704,2038,6.842,2039,5.704]],["title/components/OrganizationComponent.html",[0,0.247,96,0.376]],["body/components/OrganizationComponent.html",[0,0.4,1,0.408,2,0.542,3,0.137,4,0.137,5,0.452,6,0.43,7,0.452,8,0.154,10,0.452,11,0.796,12,0.712,14,0.542,15,0.485,16,0.572,19,0.542,21,0.242,22,0.015,23,0.12,26,0.154,27,0.154,30,0.452,32,0.452,33,0.602,34,0.602,35,0.452,36,0.721,37,0.452,38,0.263,39,0.452,40,0.408,41,0.283,42,0.452,43,0.386,44,0.452,45,0.408,46,0.452,47,0.452,48,0.408,49,0.602,50,0.408,51,0.438,52,0.344,53,0.602,54,0.408,55,0.452,56,0.386,57,0.721,58,0.408,59,0.452,60,0.408,61,0.452,62,0.408,63,0.43,64,0.677,65,0.408,66,0.452,67,0.408,68,0.452,69,0.386,70,0.452,71,0.485,72,0.602,73,0.386,74,0.226,75,0.452,76,0.386,77,0.452,78,0.408,79,0.452,80,0.408,81,0.43,82,0.452,83,0.408,84,0.452,85,0.408,86,0.572,87,0.452,88,0.408,89,0.452,90,0.408,91,0.452,92,0.408,93,0.408,94,0.408,95,0.452,96,0.65,97,0.452,98,0.408,99,0.452,100,0.514,101,0.552,102,0.602,103,0.43,104,0.602,105,0.408,106,0.408,107,0.452,108,0.408,109,0.452,110,0.408,111,0.43,112,0.452,113,0.408,114,0.408,115,0.452,116,0.408,117,0.408,118,0.408,119,0.408,120,0.452,121,0.408,122,0.452,123,0.408,124,0.365,125,0.408,126,0.43,127,0.452,128,0.43,129,0.452,130,0.408,131,0.452,132,0.408,133,0.452,134,0.408,135,0.43,136,0.408,137,0.408,138,0.452,139,0.408,140,0.643,141,0.408,142,0.452,143,0.408,144,0.452,145,0.452,146,0.01,147,0.01,157,0.137,158,0.377,162,0.407,165,0.283,166,0.602,174,0.862,191,3.35,192,3.35,197,0.229,198,1.604,205,0.391,206,0.421,219,2.517,220,0.652,279,0.796,320,1.113,370,1.352,418,0.975,427,0.652,458,1.87,459,1.339,463,1.289,532,0.895,536,1.254,543,0.737,583,1.46,621,1.867,694,1.391,695,1.191,698,2.461,704,2.256,710,0.93,711,0.93,723,3.082,727,2.855,745,2.101,746,1.714,755,2.281,770,2.271,800,1.518,801,1.46,974,2.564,980,3.561,984,2.103,986,1.58,999,2.256,1001,3.166,1002,2.189,1003,2.855,1004,2.675,1190,3.082,1191,2.86,1207,2.379,1343,3.166,1617,4.472,1623,2.379,1624,2.86,1679,3.395,2033,4.945,2040,3.732,2041,5.719,2042,6.428,2043,6.428,2044,6.853,2045,4.298,2046,4.298,2047,5.719,2048,5.719,2049,4.298,2050,4.298,2051,4.298,2052,4.298,2053,4.298,2054,4.298,2055,4.298,2056,4.298,2057,4.298,2058,4.298,2059,4.298,2060,4.298,2061,4.298]],["title/injectables/OrganizationService.html",[251,0.959,1623,2.192]],["body/injectables/OrganizationService.html",[3,0.176,4,0.176,8,0.132,21,0.23,22,0.015,23,0.154,26,0.198,27,0.198,38,0.281,81,0.551,146,0.012,147,0.012,157,0.176,158,0.442,161,1.148,162,0.452,165,0.508,193,2.11,197,0.268,205,0.314,206,0.339,209,0.462,251,1.623,252,2.293,256,1.622,257,3.28,258,2.912,278,1.288,279,1.046,280,6.525,293,1.346,299,2.762,303,4.787,329,3.126,331,2.395,339,2.11,340,2.504,341,2.293,342,1.666,635,2.751,654,2.026,1343,4.158,1600,6.272,1623,3.71,2062,4.787,2063,5.24,2064,7.513,2065,6.525,2066,6.702,2067,6.702,2068,6.702,2069,6.702,2070,5.512,2071,5.512,2072,5.512,2073,6.702,2074,6.525,2075,5.512,2076,6.702,2077,5.512,2078,6.702,2079,5.512,2080,5.512,2081,5.512,2082,5.512,2083,5.512]],["title/components/OrganizationsComponent.html",[0,0.247,98,0.376]],["body/components/OrganizationsComponent.html",[0,0.395,1,0.397,2,0.533,3,0.133,4,0.133,5,0.441,6,0.419,7,0.441,8,0.152,10,0.441,11,0.795,12,0.711,14,0.533,15,0.477,16,0.562,19,0.533,21,0.244,22,0.015,23,0.117,26,0.15,27,0.15,29,5.494,30,0.441,32,0.441,33,0.592,34,0.592,35,0.441,36,0.714,37,0.441,38,0.275,39,0.441,40,0.397,41,0.276,42,0.441,43,0.376,44,0.441,45,0.397,46,0.441,47,0.441,48,0.397,49,0.592,50,0.397,51,0.39,52,0.335,53,0.592,54,0.397,55,0.441,56,0.376,57,0.714,58,0.397,59,0.441,60,0.397,61,0.441,62,0.397,63,0.419,64,0.668,65,0.397,66,0.441,67,0.397,68,0.441,69,0.376,70,0.441,71,0.477,72,0.592,73,0.376,74,0.334,75,0.441,76,0.376,77,0.441,78,0.397,79,0.441,80,0.397,81,0.419,82,0.441,83,0.397,84,0.441,85,0.397,86,0.562,87,0.441,88,0.397,89,0.441,90,0.397,91,0.441,92,0.397,93,0.397,94,0.397,95,0.441,96,0.533,97,0.441,98,0.643,99,0.441,100,0.505,101,0.548,102,0.592,103,0.419,104,0.592,105,0.397,106,0.397,107,0.441,108,0.397,109,0.441,110,0.397,111,0.419,112,0.441,113,0.397,114,0.397,115,0.441,116,0.397,117,0.397,118,0.397,119,0.397,120,0.441,121,0.397,122,0.441,123,0.397,124,0.355,125,0.397,126,0.419,127,0.441,128,0.419,129,0.441,130,0.397,131,0.441,132,0.397,133,0.441,134,0.397,135,0.423,136,0.397,137,0.397,138,0.441,139,0.397,140,0.634,141,0.397,142,0.441,143,0.397,144,0.441,145,0.441,146,0.01,147,0.01,151,1.361,152,1.48,155,1.58,157,0.133,158,0.371,160,1.467,161,1.171,162,0.415,165,0.418,166,0.767,174,0.84,195,1.003,197,0.225,198,1.322,205,0.32,206,0.345,209,0.39,230,0.635,256,1.425,278,0.718,279,0.583,293,0.926,299,2.066,418,0.962,427,0.635,456,3.33,457,3.512,458,2.074,460,3.95,467,2.528,469,3.33,470,2.596,513,2.553,519,3.111,530,2.198,531,2.318,533,2.607,536,1.222,547,2.198,549,1.902,550,2.787,621,2.442,622,4.395,623,5.303,692,2.64,698,1.603,818,1.992,932,3.292,1240,3.741,1343,3.754,1377,3.274,1623,3.754,1624,2.787,1760,2.453,1982,3.274,1989,4.882,2033,3.499,2065,5.89,2084,3.637,2085,5.621,2086,5.621,2087,6.782,2088,4.187,2089,5.621,2090,5.621,2091,4.187,2092,4.187,2093,4.187,2094,5.621,2095,5.621,2096,4.187,2097,4.187,2098,5.621,2099,4.187,2100,3.637,2101,4.187,2102,4.187,2103,5.621,2104,5.621,2105,5.621,2106,5.621,2107,5.621,2108,5.621,2109,5.621]],["title/components/PasswordChangeComponent.html",[0,0.247,100,0.356]],["body/components/PasswordChangeComponent.html",[0,0.34,1,0.301,2,0.439,3,0.101,4,0.101,5,0.334,6,0.318,7,0.334,8,0.131,10,0.334,11,0.785,12,0.702,14,0.439,15,0.542,16,0.463,18,2.274,19,0.439,21,0.236,22,0.015,23,0.089,25,1.168,26,0.114,27,0.114,30,0.334,32,0.334,33,0.487,34,0.487,35,0.334,36,0.632,37,0.334,38,0.216,39,0.334,40,0.301,41,0.209,42,0.334,43,0.285,44,0.334,45,0.301,46,0.334,47,0.334,48,0.301,49,0.487,50,0.301,51,0.336,52,0.254,53,0.487,54,0.301,55,0.334,56,0.285,57,0.632,58,0.301,59,0.334,60,0.301,61,0.334,62,0.301,63,0.318,64,0.575,65,0.301,66,0.334,67,0.301,68,0.334,69,0.285,70,0.334,71,0.393,72,0.487,73,0.285,74,0.167,75,0.334,76,0.285,77,0.334,78,0.301,79,0.334,80,0.301,81,0.318,82,0.334,83,0.301,84,0.334,85,0.301,86,0.463,87,0.334,88,0.301,89,0.334,90,0.301,91,0.334,92,0.301,93,0.301,94,0.301,95,0.334,96,0.301,97,0.334,98,0.301,99,0.334,100,0.574,101,0.612,102,0.487,103,0.318,104,0.487,105,0.301,106,0.301,107,0.334,108,0.301,109,0.334,110,0.301,111,0.318,112,0.334,113,0.301,114,0.301,115,0.334,116,0.301,117,0.301,118,0.682,119,0.301,120,0.334,121,0.301,122,0.334,123,0.301,124,0.269,125,0.301,126,0.318,127,0.334,128,0.318,129,0.334,130,0.301,131,0.334,132,0.301,133,0.334,134,0.301,135,0.348,136,0.301,137,0.301,138,0.334,139,0.301,140,0.547,141,0.301,142,0.334,143,0.301,144,0.334,145,0.334,146,0.008,147,0.008,151,1.121,152,1.275,157,0.101,158,0.305,160,1.3,162,0.445,165,0.454,166,0.769,174,1.337,195,0.864,197,0.185,198,1.389,199,1.122,201,2.61,202,3.328,205,0.422,206,0.455,207,1.927,209,0.442,210,2.493,211,2.266,213,2.012,220,0.482,228,1.267,230,0.482,256,1.498,265,2.729,270,5.217,278,0.794,279,0.645,293,1.098,320,1.109,342,1.382,348,1.038,350,1.927,351,1.275,369,1.758,399,2.278,417,3.92,418,0.829,419,1.228,427,0.482,428,2.278,429,0.713,459,1.139,467,2.041,508,1.636,532,0.662,543,0.545,547,1.667,583,1.079,610,1.636,667,3.082,674,2.104,694,1.182,695,1.139,710,0.687,711,0.687,722,3.621,745,1.787,746,1.267,755,2.396,770,1.931,800,1.122,801,1.079,818,2.203,851,1.758,974,2.18,984,1.703,986,1.168,1002,2.445,1010,1.443,1015,2.431,1050,2.869,1074,4.697,1102,3.328,1146,3.322,1154,2.713,1190,2.278,1207,2.499,1363,4.251,1454,2.883,1458,1.86,1473,3.025,1497,2.431,1602,3.92,1626,5.217,1639,2.758,1656,4.251,1659,3.621,1660,3.621,1672,4.022,1678,4.022,1679,3.524,1687,4.022,1703,3.322,1707,2.713,1710,2.758,1727,5.217,1804,4.393,1910,4.251,2110,6.816,2111,6.137,2112,2.483,2113,5.466,2114,4.022,2115,5.466,2116,4.747,2117,6.387,2118,6.387,2119,6.387,2120,5.466,2121,6.007,2122,6.007,2123,6.007,2124,3.176,2125,3.176,2126,3.176,2127,3.176,2128,3.176,2129,3.176,2130,3.176,2131,3.176,2132,3.176,2133,3.176,2134,3.176,2135,4.022,2136,4.631,2137,3.176,2138,3.176,2139,3.176,2140,3.176,2141,3.176,2142,3.176,2143,3.176,2144,3.176,2145,3.176,2146,3.176,2147,3.176,2148,3.176,2149,3.176,2150,3.176,2151,3.176,2152,3.176,2153,3.176,2154,3.176,2155,3.176,2156,3.176,2157,4.631,2158,5.466,2159,4.631,2160,4.022,2161,3.176,2162,3.176,2163,3.176,2164,2.483,2165,3.176,2166,3.176,2167,3.176,2168,3.176,2169,3.176,2170,2.758,2171,3.176,2172,3.176,2173,2.483,2174,3.176,2175,3.176,2176,3.176,2177,3.621,2178,3.176,2179,3.176,2180,3.176,2181,3.176,2182,3.176,2183,5.466,2184,3.176,2185,4.631,2186,4.631,2187,3.322,2188,4.022,2189,3.322,2190,6.007,2191,3.322,2192,3.322,2193,4.022]],["title/components/PasswordChangeComponent-1.html",[0,0.206,100,0.297,597,1.122]],["body/components/PasswordChangeComponent-1.html",[0,0.386,1,0.379,2,0.516,3,0.127,4,0.127,5,0.42,6,0.399,7,0.42,8,0.149,10,0.42,11,0.793,12,0.71,14,0.516,15,0.462,16,0.544,19,0.516,21,0.238,22,0.015,23,0.111,26,0.143,27,0.143,30,0.42,32,0.42,33,0.573,34,0.573,35,0.42,36,0.7,37,0.42,38,0.195,39,0.42,40,0.379,41,0.263,42,0.42,43,0.359,44,0.42,45,0.379,46,0.42,47,0.42,48,0.379,49,0.573,50,0.379,51,0.245,52,0.319,53,0.573,54,0.379,55,0.42,56,0.359,57,0.7,58,0.379,59,0.42,60,0.379,61,0.42,62,0.379,63,0.399,64,0.652,65,0.379,66,0.42,67,0.379,68,0.42,69,0.359,70,0.42,71,0.462,72,0.573,73,0.359,74,0.21,75,0.42,76,0.359,77,0.42,78,0.379,79,0.42,80,0.379,81,0.399,82,0.42,83,0.379,84,0.42,85,0.379,86,0.544,87,0.42,88,0.379,89,0.42,90,0.379,91,0.42,92,0.379,93,0.379,94,0.379,95,0.42,96,0.379,97,0.42,98,0.379,99,0.42,100,0.625,101,0.62,102,0.573,103,0.399,104,0.573,105,0.379,106,0.379,107,0.42,108,0.379,109,0.42,110,0.379,111,0.399,112,0.42,113,0.379,114,0.379,115,0.42,116,0.379,117,0.379,118,0.379,119,0.379,120,0.42,121,0.379,122,0.42,123,0.379,124,0.339,125,0.379,126,0.399,127,0.42,128,0.399,129,0.42,130,0.379,131,0.42,132,0.379,133,0.42,134,0.379,135,0.41,136,0.379,137,0.379,138,0.42,139,0.379,140,0.619,141,0.379,142,0.42,143,0.379,144,0.42,145,0.42,146,0.01,147,0.01,151,1.318,152,1.444,157,0.127,158,0.359,160,1.439,161,1.29,162,0.419,165,0.408,166,0.756,174,0.801,197,0.218,198,1.496,199,2.35,205,0.353,206,0.38,207,2.265,209,0.245,220,0.606,228,1.593,294,5.379,296,5.379,320,1.232,348,1.305,351,1.27,372,2.486,418,0.939,419,1.391,422,2.26,423,2.546,425,2.084,427,0.606,429,0.897,430,1.529,432,2.658,433,2.365,459,1.29,463,1.242,532,0.832,543,0.685,583,1.357,597,1.357,694,1.34,695,1.29,710,0.864,711,0.864,738,3.32,745,2.275,746,1.593,755,2.865,767,2.59,1009,3.681,1146,3.904,1206,2.658,1207,3.058,1208,2.864,1497,2.857,1659,5.616,1660,4.256,1679,3.496,1707,3.188,1759,2.486,1760,2.339,2111,5.849,2112,3.122,2114,4.728,2135,4.728,2187,3.904,2194,6.497,2195,6.193,2196,5.444,2197,3.993,2198,3.993,2199,3.993,2200,3.993,2201,5.444,2202,3.993,2203,3.993,2204,3.993,2205,3.993,2206,3.993,2207,3.993,2208,3.993,2209,3.468,2210,5.2,2211,3.993,2212,3.993,2213,3.993,2214,3.993,2215,3.993,2216,3.993,2217,3.993,2218,3.993,2219,3.993,2220,3.993]],["title/components/PasswordFormComponent.html",[0,0.247,105,0.376]],["body/components/PasswordFormComponent.html",[0,0.355,1,0.27,2,0.405,3,0.091,4,0.091,5,0.3,6,0.285,7,0.3,8,0.123,10,0.3,11,0.781,12,0.699,14,0.486,15,0.544,16,0.513,19,0.486,21,0.246,22,0.015,23,0.079,26,0.153,27,0.153,30,0.3,32,0.3,33,0.45,34,0.45,35,0.3,36,0.6,37,0.3,38,0.266,39,0.3,40,0.27,41,0.188,42,0.3,43,0.256,44,0.3,45,0.27,46,0.3,47,0.3,48,0.27,49,0.45,50,0.27,51,0.35,52,0.228,53,0.45,54,0.27,55,0.3,56,0.256,57,0.6,58,0.27,59,0.3,60,0.27,61,0.3,62,0.27,63,0.285,64,0.54,65,0.27,66,0.3,67,0.27,68,0.3,69,0.256,70,0.3,71,0.362,72,0.45,73,0.256,74,0.15,75,0.3,76,0.256,77,0.3,78,0.27,79,0.3,80,0.27,81,0.285,82,0.3,83,0.27,84,0.3,85,0.27,86,0.427,87,0.3,88,0.27,89,0.3,90,0.27,91,0.3,92,0.27,93,0.27,94,0.27,95,0.3,96,0.27,97,0.3,98,0.27,99,0.3,100,0.384,101,0.599,102,0.45,103,0.285,104,0.45,105,0.54,106,0.27,107,0.3,108,0.27,109,0.3,110,0.27,111,0.285,112,0.3,113,0.27,114,0.27,115,0.3,116,0.27,117,0.27,118,0.27,119,0.27,120,0.3,121,0.27,122,0.3,123,0.27,124,0.242,125,0.27,126,0.285,127,0.3,128,0.285,129,0.3,130,0.27,131,0.3,132,0.405,133,0.3,134,0.27,135,0.321,136,0.27,137,0.27,138,0.3,139,0.27,140,0.513,141,0.27,142,0.3,143,0.27,144,0.3,145,0.3,146,0.008,147,0.01,151,1.034,152,1.196,157,0.163,158,0.282,160,1.232,162,0.445,165,0.461,166,0.761,174,1.45,176,1.742,191,1.668,192,1.668,195,0.81,197,0.171,198,1.643,205,0.418,206,0.45,209,0.408,210,1.509,211,2.178,219,1.668,220,0.432,230,0.432,244,1.421,278,0.879,279,0.714,281,1.509,293,0.938,299,1.57,320,1.207,332,2.042,334,1.576,338,0.863,342,1.232,349,2.042,351,1.328,371,1.388,398,2.226,418,0.864,419,1.152,427,0.432,429,0.64,435,0.8,458,1.862,459,1.186,461,2.227,463,1.028,467,0.967,470,1.09,471,3.153,508,1.509,513,1.94,523,2.032,532,0.593,535,1.421,536,0.831,542,1.237,543,0.488,557,1.704,566,2.559,581,2.99,583,0.967,603,2.132,607,1.935,610,2.156,653,1.773,692,2.133,693,2.691,694,1.232,695,1.186,698,2.18,704,1.494,710,0.616,711,0.616,712,1.494,720,1.421,727,2.843,729,1.773,730,2.71,731,3.003,732,2.691,735,2.843,740,2.587,744,2.226,745,1.862,746,1.136,747,3.336,748,2.042,749,2.502,750,1.494,755,2.651,770,1.509,800,1.006,801,0.967,818,2.032,838,1.421,851,2.364,854,3.191,974,1.136,980,3.191,982,2.659,984,1.047,986,1.047,1002,1.09,1004,2.659,1050,1.494,1102,2.559,1151,2.364,1169,3.34,1193,1.185,1207,2.963,1242,2.042,1343,3.547,1445,5.566,1473,1.576,1477,2.502,1497,2.691,1602,3.677,1656,1.895,1666,3.191,1679,3.678,1686,3.8,1698,3.677,1703,2.042,1704,4.085,1706,2.042,1707,2.502,1916,3.677,1939,3.412,1951,5.019,1963,4.377,1966,4.085,1974,2.502,1990,3.677,1992,3.34,2032,4.265,2160,5.566,2164,2.226,2173,2.226,2187,3.064,2210,2.226,2221,6.126,2222,6.126,2223,3.412,2224,4.452,2225,4.452,2226,4.452,2227,4.454,2228,5.126,2229,4.271,2230,3.064,2231,4.454,2232,5.126,2233,4.947,2234,2.847,2235,2.847,2236,3.71,2237,2.847,2238,2.473,2239,2.847,2240,2.847,2241,2.847,2242,2.847,2243,4.947,2244,2.847,2245,2.847,2246,4.947,2247,2.847,2248,2.847,2249,2.847,2250,2.847,2251,2.847,2252,2.847,2253,2.847,2254,4.138,2255,3.71,2256,3.71,2257,2.847,2258,4.008,2259,2.847,2260,4.452,2261,2.847,2262,2.847,2263,2.847,2264,3.71,2265,3.71,2266,2.042,2267,2.042,2268,2.042,2269,2.473,2270,2.473,2271,2.473,2272,2.473,2273,2.473,2274,2.473,2275,2.473,2276,2.473,2277,2.473,2278,2.473,2279,2.473,2280,2.473,2281,2.473,2282,2.473,2283,4.452,2284,2.843,2285,2.226,2286,2.473,2287,2.473,2288,3.71,2289,2.473,2290,2.473,2291,2.473,2292,2.226,2293,2.473,2294,2.473,2295,2.473,2296,2.473,2297,2.473,2298,2.473,2299,4.454,2300,3.71,2301,4.452,2302,3.71,2303,2.473,2304,2.473,2305,2.473,2306,2.473,2307,2.473,2308,3.34,2309,2.473,2310,2.473,2311,2.473,2312,2.473,2313,2.473,2314,3.71,2315,2.473,2316,3.71,2317,2.473,2318,1.773,2319,2.473,2320,2.473,2321,2.473,2322,2.473,2323,2.473,2324,2.473,2325,2.473,2326,2.473,2327,2.473,2328,3.71,2329,2.226,2330,2.473,2331,2.473,2332,2.473,2333,2.042,2334,2.473,2335,2.473,2336,2.473,2337,2.473]],["title/components/PasswordGenratorComponent.html",[0,0.247,106,0.376]],["body/components/PasswordGenratorComponent.html",[0,0.286,1,0.227,2,0.354,3,0.076,4,0.076,5,0.251,6,0.239,7,0.251,8,0.11,10,0.251,11,0.772,12,0.691,14,0.354,15,0.577,16,0.373,19,0.354,21,0.23,22,0.015,23,0.067,26,0.086,27,0.086,30,0.251,32,0.251,33,0.393,34,0.393,35,0.251,36,0.547,37,0.251,38,0.165,39,0.251,40,0.227,41,0.158,42,0.251,43,0.215,44,0.251,45,0.227,46,0.251,47,0.251,48,0.227,49,0.393,50,0.227,51,0.282,52,0.191,53,0.393,54,0.227,55,0.251,56,0.215,57,0.547,58,0.227,59,0.251,60,0.227,61,0.251,62,0.227,63,0.239,64,0.484,65,0.227,66,0.251,67,0.227,68,0.251,69,0.215,70,0.251,71,0.317,72,0.393,73,0.215,74,0.126,75,0.251,76,0.215,77,0.251,78,0.227,79,0.251,80,0.227,81,0.239,82,0.251,83,0.227,84,0.251,85,0.227,86,0.373,87,0.251,88,0.227,89,0.251,90,0.227,91,0.251,92,0.227,93,0.227,94,0.227,95,0.251,96,0.227,97,0.251,98,0.227,99,0.251,100,0.335,101,0.615,102,0.393,103,0.239,104,0.393,105,0.227,106,0.493,107,0.251,108,0.227,109,0.251,110,0.227,111,0.239,112,0.251,113,0.227,114,0.436,115,0.251,116,0.227,117,0.227,118,0.227,119,0.227,120,0.251,121,0.227,122,0.251,123,0.227,124,0.203,125,0.227,126,0.239,127,0.251,128,0.239,129,0.251,130,0.227,131,0.251,132,0.227,133,0.251,134,0.227,135,0.281,136,0.227,137,0.227,138,0.251,139,0.227,140,0.46,141,0.227,142,0.251,143,0.227,144,0.251,145,0.251,146,0.007,147,0.007,157,0.076,158,0.246,162,0.438,165,0.394,166,0.629,174,0.922,186,2.486,191,2.188,192,2.188,195,0.727,197,0.149,205,0.423,206,0.452,209,0.452,210,2.284,211,1.766,219,1.4,220,0.362,230,0.362,265,1.697,278,0.41,279,0.333,293,1.175,320,0.566,342,1.352,350,3.291,391,1.96,416,2.067,418,0.697,419,1.033,427,0.362,429,0.537,435,1.05,459,0.958,461,1.997,463,0.922,512,1.193,532,0.498,542,1.038,543,0.41,555,2.862,557,2.073,597,2.123,610,2.401,665,2.067,675,2.728,694,0.995,695,0.958,710,0.517,711,0.517,720,1.193,770,1.32,800,0.844,801,0.812,809,2.486,826,3.789,827,3.138,828,2.325,829,2.679,832,2.877,833,1.96,835,3.236,838,1.864,840,3.567,842,3.244,843,3.244,845,2.325,848,3.244,849,4.515,850,3.244,852,2.679,856,3.244,857,3.244,859,1.864,866,3.244,870,2.486,873,3.46,875,2.598,878,3.979,883,4.675,884,2.92,892,1.4,898,4.675,899,2.188,939,2.679,952,3.244,953,2.92,974,1.834,984,1.373,986,0.878,1005,2.325,1010,1.085,1015,1.96,1069,2.693,1191,2.486,1193,2.599,1289,2.92,1292,4.065,1330,2.486,1347,4.523,1351,2.679,1442,2.92,1463,4.804,1466,3.728,1467,2.92,1468,4.675,1469,4.303,1475,4.515,1476,4.609,1477,4.481,1478,4.675,1480,3.728,1487,4.874,1488,3.889,1491,2.92,1495,4.675,1496,4.065,1497,2.96,1498,4.766,1499,4.899,1503,2.92,1510,2.325,1511,2.679,1515,3.06,1524,4.065,1525,3.244,1526,3.244,1532,2.92,1547,3.244,1550,4.515,1552,3.728,1553,2.92,1556,4.41,1558,4.515,1559,3.244,1577,2.92,1653,2.486,1661,1.868,1706,3.298,1736,3.993,1761,2.075,1804,2.862,1924,5.314,2177,1.868,2188,3.244,2189,4.481,2191,4.766,2192,3.728,2193,2.075,2285,2.92,2329,1.868,2338,6.035,2339,6.703,2340,2.075,2341,3.735,2342,3.735,2343,3.993,2344,4.598,2345,3.735,2346,4.598,2347,5.979,2348,4.598,2349,4.598,2350,4.598,2351,4.598,2352,6.796,2353,5.64,2354,4.598,2355,5.198,2356,5.198,2357,5.198,2358,5.198,2359,5.198,2360,3.735,2361,2.39,2362,2.39,2363,2.39,2364,2.39,2365,2.39,2366,5.198,2367,2.39,2368,2.39,2369,3.735,2370,2.39,2371,2.39,2372,2.39,2373,2.39,2374,2.39,2375,3.735,2376,2.39,2377,2.39,2378,2.39,2379,2.39,2380,2.39,2381,2.39,2382,5.902,2383,4.899,2384,5.314,2385,4.598,2386,5.979,2387,3.735,2388,5.979,2389,3.298,2390,3.244,2391,3.735,2392,2.39,2393,2.39,2394,3.244,2395,2.39,2396,2.39,2397,2.39,2398,2.39,2399,3.244,2400,2.39,2401,4.41,2402,5.426,2403,2.075,2404,2.39,2405,2.39,2406,2.39,2407,2.39,2408,3.735,2409,2.39,2410,2.39,2411,2.39,2412,3.244,2413,3.735,2414,3.735,2415,2.39,2416,2.39,2417,2.39,2418,2.39,2419,2.39,2420,2.39,2421,2.075,2422,4.41,2423,3.244,2424,2.39,2425,2.39,2426,2.39,2427,2.39,2428,2.39,2429,2.39,2430,2.39,2431,3.735,2432,3.735,2433,5.64,2434,2.39,2435,3.735,2436,2.679,2437,2.39,2438,4.598,2439,2.39,2440,2.39,2441,2.39,2442,2.39,2443,2.39,2444,2.39,2445,2.39,2446,2.39,2447,2.39,2448,3.735,2449,5.193,2450,5.055,2451,3.244,2452,3.244,2453,3.244,2454,4.515,2455,3.735,2456,2.92,2457,4.065,2458,3.244,2459,2.92,2460,3.735,2461,3.735,2462,3.735,2463,3.735,2464,5.198,2465,3.244,2466,2.679,2467,3.735,2468,5.198,2469,3.735,2470,5.198,2471,3.735,2472,6.796,2473,3.735,2474,3.735,2475,3.735,2476,3.735,2477,2.39,2478,3.735,2479,3.735,2480,3.735,2481,3.735,2482,4.515,2483,3.735,2484,3.244,2485,3.735,2486,3.735,2487,3.244,2488,3.735,2489,2.92,2490,3.244,2491,3.244,2492,3.735,2493,2.679,2494,3.735,2495,3.735,2496,3.735,2497,3.735,2498,3.244,2499,3.735,2500,3.735,2501,3.735,2502,3.244,2503,3.244,2504,3.735,2505,3.735,2506,3.735,2507,3.735,2508,3.244,2509,3.735,2510,3.244,2511,3.735,2512,3.735,2513,3.735,2514,3.735,2515,3.735,2516,3.735,2517,3.735,2518,3.735,2519,3.735,2520,3.735,2521,3.244,2522,3.735,2523,3.735,2524,3.244,2525,3.244,2526,3.735,2527,3.735,2528,2.92,2529,3.735,2530,3.735,2531,3.735,2532,3.735,2533,3.735,2534,3.735,2535,3.735,2536,3.735,2537,3.244,2538,3.735,2539,3.735,2540,3.735,2541,3.735,2542,3.735,2543,3.735,2544,3.244,2545,3.244,2546,2.39]],["title/injectables/PasswordService.html",[251,0.959,747,2.32]],["body/injectables/PasswordService.html",[3,0.12,4,0.12,8,0.144,21,0.235,22,0.015,23,0.105,26,0.136,27,0.136,38,0.281,74,0.199,101,0.59,124,0.321,146,0.009,147,0.009,157,0.12,158,0.346,161,0.787,162,0.449,165,0.51,174,1.416,193,1.446,197,0.209,205,0.299,206,0.322,209,0.487,251,1.269,252,1.572,256,1.351,257,2.733,258,2.276,278,1.336,279,1.085,281,2.875,293,1.361,320,0.912,329,2.703,330,2.091,331,1.641,332,4.315,333,1.886,335,2.352,337,4.894,338,1.145,339,1.446,340,1.716,341,1.572,342,1.739,346,4.551,347,4.241,348,2.413,349,2.71,350,1.572,351,1.88,352,3.281,356,1.716,365,3.801,370,1.649,371,1.419,373,2.352,381,5.225,387,2.213,399,3.758,480,4.551,486,2.352,513,1.716,551,2.9,557,1.507,561,3.888,562,4.508,563,3.909,564,4.396,565,4.396,572,2.091,628,4.097,635,1.886,653,2.352,654,1.389,662,2.954,663,2.71,665,2.091,666,2.515,667,2.515,668,4.704,669,2.352,675,1.983,747,3.069,787,3.281,818,1.797,851,2.9,859,2.615,907,2.954,1121,4.551,1122,3.281,1127,2.954,1154,3.069,1298,4.045,1466,2.71,1535,3.281,1686,2.352,1802,4.097,1883,3.758,1901,4.551,1903,5.927,1909,3.281,1910,2.515,1974,3.069,2032,2.515,2227,4.097,2231,4.097,2254,2.352,2266,2.71,2267,3.758,2268,3.758,2292,5.08,2308,5.08,2333,3.758,2487,3.281,2547,3.281,2548,6.497,2549,5.24,2550,5.24,2551,4.097,2552,5.24,2553,5.24,2554,5.24,2555,5.24,2556,5.24,2557,5.24,2558,3.778,2559,5.24,2560,3.778,2561,5.24,2562,3.778,2563,5.24,2564,3.778,2565,5.24,2566,3.778,2567,5.24,2568,3.778,2569,5.24,2570,3.778,2571,5.24,2572,3.778,2573,6.824,2574,5.24,2575,3.778,2576,5.24,2577,3.778,2578,3.778,2579,5.24,2580,3.778,2581,5.24,2582,3.778,2583,3.778,2584,3.778,2585,4.551,2586,3.281,2587,3.778,2588,3.778,2589,3.778,2590,3.778,2591,3.778,2592,3.778,2593,6.497,2594,3.778,2595,3.778,2596,3.778,2597,5.24,2598,5.24,2599,3.778,2600,3.778,2601,3.778,2602,3.778,2603,3.281,2604,3.778,2605,2.954,2606,3.778,2607,3.778,2608,3.281,2609,3.778,2610,4.551,2611,5.24,2612,6.497,2613,5.24,2614,5.24,2615,3.778,2616,4.551,2617,3.778,2618,5.225,2619,3.778,2620,3.778,2621,3.778,2622,3.778,2623,3.778,2624,3.778,2625,3.778]],["title/components/PasswordStrengthComponent.html",[0,0.247,108,0.376]],["body/components/PasswordStrengthComponent.html",[0,0.344,1,0.306,2,0.445,3,0.103,4,0.103,5,0.34,6,0.323,7,0.34,8,0.132,10,0.34,11,0.786,12,0.703,14,0.445,15,0.398,16,0.469,19,0.445,21,0.226,22,0.015,23,0.09,26,0.116,27,0.116,30,0.34,32,0.34,33,0.494,34,0.494,35,0.34,36,0.637,37,0.34,38,0.217,39,0.34,40,0.306,41,0.213,42,0.34,43,0.29,44,0.34,45,0.306,46,0.34,47,0.34,48,0.306,49,0.494,50,0.306,51,0.395,52,0.258,53,0.494,54,0.306,55,0.34,56,0.29,57,0.637,58,0.306,59,0.34,60,0.306,61,0.34,62,0.306,63,0.323,64,0.581,65,0.306,66,0.34,67,0.306,68,0.34,69,0.29,70,0.34,71,0.398,72,0.494,73,0.29,74,0.17,75,0.34,76,0.29,77,0.34,78,0.306,79,0.34,80,0.306,81,0.323,82,0.34,83,0.306,84,0.34,85,0.306,86,0.469,87,0.34,88,0.306,89,0.34,90,0.306,91,0.34,92,0.306,93,0.306,94,0.306,95,0.34,96,0.306,97,0.34,98,0.306,99,0.34,100,0.421,101,0.628,102,0.494,103,0.323,104,0.494,105,0.306,106,0.306,107,0.34,108,0.574,109,0.34,110,0.306,111,0.323,112,0.34,113,0.306,114,0.524,115,0.34,116,0.306,117,0.306,118,0.306,119,0.306,120,0.34,121,0.306,122,0.34,123,0.306,124,0.468,125,0.306,126,0.323,127,0.34,128,0.323,129,0.34,130,0.306,131,0.34,132,0.306,133,0.34,134,0.306,135,0.353,136,0.306,137,0.306,138,0.34,139,0.306,140,0.552,141,0.306,142,0.34,143,0.306,144,0.34,145,0.34,146,0.008,147,0.008,157,0.103,158,0.309,162,0.367,165,0.364,166,0.34,174,0.648,186,3.121,195,0.873,197,0.187,205,0.267,206,0.198,209,0.436,230,0.49,248,2.011,256,1.592,278,0.804,279,0.653,293,1.14,342,1.497,350,3.224,375,3.83,386,2.34,391,2.461,418,0.837,427,0.49,439,4.811,443,2.747,459,1.15,463,1.107,532,0.673,543,0.554,557,2.416,597,2.351,607,1.593,610,2.445,665,2.595,694,1.194,710,0.699,711,0.699,767,2.881,801,1.098,816,3.121,826,3.179,827,2.461,829,4.811,832,3.352,833,3.179,838,3.023,840,2.461,859,3.348,872,2.919,875,3.188,878,3.121,892,1.892,899,2.747,905,3.121,909,3.666,913,4.735,947,5.826,1005,3.77,1010,1.468,1015,2.461,1069,1.892,1077,3.666,1154,2.747,1193,2.296,1330,2.15,1341,3.363,1347,3.121,1349,4.735,1442,2.526,1463,3.121,1468,4.735,1469,3.121,1471,4.073,1473,2.595,1476,3.121,1477,4.299,1478,5.245,1487,4.343,1488,4.917,1495,3.666,1497,2.897,1498,2.317,1503,3.666,1512,3.121,1515,2.15,1529,3.121,1530,2.919,1531,2.595,1533,3.666,1534,4.073,1556,4.735,1699,2.806,1706,3.959,1707,1.892,1709,4.073,1804,3.77,1821,3.363,1822,4.073,1849,4.073,2030,4.073,2035,4.735,2187,4.343,2189,2.317,2191,2.317,2192,2.317,2338,5.245,2383,5.26,2384,2.526,2389,2.317,2401,3.666,2421,2.806,2422,5.028,2450,3.666,2452,5.26,2457,3.666,2458,4.073,2466,4.343,2503,4.794,2525,4.073,2544,4.073,2545,4.073,2626,5.826,2627,2.806,2628,5.52,2629,3.959,2630,5.52,2631,4.689,2632,6.431,2633,4.689,2634,6.056,2635,4.689,2636,4.689,2637,3.231,2638,3.231,2639,4.689,2640,3.231,2641,7.897,2642,3.231,2643,3.231,2644,2.317,2645,3.231,2646,3.231,2647,3.231,2648,3.231,2649,2.806,2650,3.231,2651,4.689,2652,3.231,2653,3.231,2654,2.806,2655,2.806,2656,2.526,2657,3.231,2658,3.231,2659,4.689,2660,4.689,2661,4.689,2662,4.689,2663,4.689,2664,4.689,2665,4.689,2666,4.689,2667,4.689,2668,4.689,2669,4.689,2670,4.689,2671,4.073,2672,4.689,2673,4.689,2674,4.689,2675,4.689,2676,4.689,2677,4.689,2678,4.073,2679,4.689,2680,4.689,2681,3.231,2682,6.056,2683,4.073,2684,4.689,2685,4.073,2686,4.689,2687,4.689,2688,4.689,2689,4.689,2690,4.689,2691,4.689,2692,4.689,2693,4.689,2694,4.689,2695,4.689,2696,4.689,2697,4.689,2698,4.689,2699,4.689,2700,4.689,2701,4.073,2702,2.806,2703,3.231,2704,4.689,2705,3.231]],["title/injectables/PlanService.html",[251,0.959,2706,2.84]],["body/injectables/PlanService.html",[2,0.39,3,0.131,4,0.131,8,0.099,21,0.215,22,0.015,23,0.115,26,0.148,27,0.148,38,0.26,51,0.253,74,0.423,126,0.673,146,0.01,147,0.01,157,0.131,158,0.366,161,0.857,162,0.435,165,0.478,193,1.575,197,0.222,205,0.317,206,0.341,209,0.463,245,3.217,248,3.458,251,1.345,252,1.712,256,1.628,257,2.857,258,2.413,262,5.848,278,1.242,279,1.009,281,2.789,293,1.292,320,0.842,329,2.801,331,1.787,333,2.054,335,3.458,336,3.574,338,1.246,339,1.575,340,1.869,341,1.712,342,1.568,351,1.757,356,1.869,368,6.107,370,2.213,373,2.562,375,2.277,376,3.217,434,5.061,435,1.156,437,5.848,438,5.666,556,1.454,557,1.641,561,2.054,597,2.697,633,3.984,635,2.054,648,3.984,654,1.513,658,3.458,870,3.697,892,2.41,945,6.812,1008,2.562,1050,2.16,1102,2.773,1125,4.825,1193,2.311,1322,3.984,1515,3.697,1528,4.343,1726,3.574,1823,3.217,1950,5.692,2318,2.562,2394,4.825,2489,3.217,2603,3.574,2649,5.848,2655,4.825,2656,4.343,2706,3.984,2707,3.574,2708,5.555,2709,5.555,2710,5.555,2711,5.555,2712,4.115,2713,5.555,2714,4.115,2715,6.734,2716,5.555,2717,4.115,2718,5.462,2719,5.555,2720,4.115,2721,4.115,2722,6.734,2723,4.115,2724,5.555,2725,4.115,2726,5.555,2727,4.115,2728,6.893,2729,7.936,2730,6.893,2731,6.893,2732,6.542,2733,7.936,2734,5.555,2735,7.246,2736,5.555,2737,6.293,2738,5.555,2739,5.555,2740,5.555,2741,6.734,2742,5.555,2743,4.115,2744,4.115,2745,7.032,2746,4.115,2747,4.115,2748,4.115,2749,4.115,2750,5.555,2751,2.738,2752,4.115,2753,4.115,2754,3.574,2755,5.462,2756,6.289,2757,5.555,2758,4.115,2759,4.115,2760,4.825,2761,4.115,2762,4.115,2763,4.115,2764,4.115,2765,4.115,2766,4.115,2767,4.115]],["title/components/PricingPageComponent.html",[0,0.247,110,0.376]],["body/components/PricingPageComponent.html",[0,0.378,1,0.364,2,0.502,3,0.122,4,0.122,5,0.404,6,0.383,7,0.404,8,0.146,10,0.404,11,0.792,12,0.708,14,0.502,15,0.602,16,0.529,18,2.523,19,0.502,21,0.236,22,0.015,23,0.107,25,1.41,26,0.138,27,0.138,30,0.404,32,0.404,33,0.557,34,0.557,35,0.404,36,0.688,37,0.404,38,0.246,39,0.404,40,0.364,41,0.253,42,0.404,43,0.344,44,0.404,45,0.364,46,0.404,47,0.404,48,0.364,49,0.557,50,0.364,51,0.236,52,0.307,53,0.557,54,0.364,55,0.404,56,0.344,57,0.688,58,0.364,59,0.404,60,0.364,61,0.404,62,0.364,63,0.383,64,0.638,65,0.364,66,0.404,67,0.364,68,0.404,69,0.344,70,0.404,71,0.449,72,0.557,73,0.344,74,0.319,75,0.404,76,0.344,77,0.404,78,0.364,79,0.404,80,0.364,81,0.383,82,0.404,83,0.364,84,0.404,85,0.364,86,0.529,87,0.404,88,0.364,89,0.404,90,0.364,91,0.404,92,0.364,93,0.364,94,0.364,95,0.404,96,0.364,97,0.404,98,0.364,99,0.404,100,0.475,101,0.534,102,0.557,103,0.383,104,0.557,105,0.364,106,0.364,107,0.404,108,0.364,109,0.404,110,0.62,111,0.727,112,0.404,113,0.364,114,0.364,115,0.404,116,0.364,117,0.364,118,0.364,119,0.364,120,0.404,121,0.364,122,0.404,123,0.364,124,0.325,125,0.364,126,0.383,127,0.404,128,0.383,129,0.404,130,0.364,131,0.404,132,0.364,133,0.404,134,0.364,135,0.398,136,0.364,137,0.364,138,0.404,139,0.364,140,0.606,141,0.364,142,0.404,143,0.364,144,0.404,145,0.404,146,0.009,147,0.009,151,1.282,152,1.414,155,1.488,157,0.122,158,0.349,160,1.415,162,0.442,165,0.431,166,0.765,174,1.061,195,0.959,197,0.212,201,2.841,205,0.422,206,0.455,209,0.447,213,2.3,220,0.582,230,0.582,278,1.176,279,0.844,293,1.313,351,0.894,359,4.14,418,0.92,427,0.803,434,4.071,438,4.14,441,4.598,463,1.216,467,1.303,508,1.871,543,0.658,597,1.799,607,1.799,610,1.871,695,1.263,893,3.797,1050,3.183,1316,2.75,1537,3.797,1763,2.999,2223,4.036,2284,2.552,2343,5.266,2403,3.331,2489,5.112,2706,2.75,2718,6.435,2731,4.598,2732,4.598,2737,4.598,2768,6.782,2769,6.782,2770,3.331,2771,6.064,2772,5.294,2773,5.294,2774,6.064,2775,6.064,2776,6.064,2777,6.064,2778,5.294,2779,5.294,2780,5.294,2781,5.294,2782,7.094,2783,3.835,2784,3.835,2785,5.294,2786,6.539,2787,3.835,2788,3.835,2789,3.835,2790,5.294,2791,3.835,2792,3.835,2793,3.835,2794,3.835,2795,3.835,2796,3.835,2797,3.835,2798,3.835,2799,5.294,2800,3.835,2801,3.835,2802,5.294,2803,3.835,2804,3.835,2805,3.835,2806,3.835,2807,5.294,2808,3.835,2809,3.835,2810,5.294,2811,6.539,2812,3.835,2813,3.835,2814,3.835,2815,3.835,2816,5.294,2817,5.294,2818,5.294,2819,5.294,2820,3.835,2821,5.294,2822,5.294,2823,5.294,2824,4.14,2825,5.294,2826,4.598]],["title/components/PrivacyPolicyComponent.html",[0,0.247,113,0.376]],["body/components/PrivacyPolicyComponent.html",[0,0.361,1,0.334,2,0.473,3,0.112,4,0.112,5,0.371,6,0.353,7,0.371,8,0.139,10,0.371,11,0.789,12,0.708,14,0.473,15,0.424,16,0.353,19,0.473,21,0.112,22,0.014,23,0.098,26,0.127,27,0.127,30,0.371,32,0.371,33,0.525,34,0.525,35,0.371,36,0.663,37,0.371,38,0.179,39,0.371,40,0.334,41,0.233,42,0.371,43,0.317,44,0.371,45,0.334,46,0.371,47,0.371,48,0.334,49,0.525,50,0.334,51,0.217,52,0.282,53,0.525,54,0.334,55,0.7,56,0.708,57,0.663,58,0.334,59,0.371,60,0.334,61,0.371,62,0.334,63,0.353,64,0.61,65,0.334,66,0.371,67,0.334,68,0.371,69,0.317,70,0.371,71,0.424,72,0.525,73,0.317,74,0.415,75,0.371,76,0.317,77,0.371,78,0.334,79,0.371,80,0.334,81,0.353,82,0.371,83,0.334,84,0.371,85,0.334,86,0.499,87,0.371,88,0.334,89,0.371,90,0.334,91,0.371,92,0.334,93,0.74,94,0.334,95,0.371,96,0.334,97,0.371,98,0.334,99,0.371,100,0.448,101,0.546,102,0.525,103,0.353,104,0.525,105,0.334,106,0.334,107,0.371,108,0.334,109,0.371,110,0.334,111,0.353,112,0.371,113,0.598,114,0.731,115,0.371,116,0.334,117,0.334,118,0.334,119,0.334,120,0.371,121,0.334,122,0.371,123,0.334,124,0.492,125,0.334,126,0.353,127,0.371,128,0.353,129,0.371,130,0.334,131,0.371,132,0.334,133,0.371,134,0.334,135,0.52,136,0.334,137,0.334,138,0.371,139,0.334,140,0.58,141,0.334,142,0.371,143,0.334,144,0.371,145,0.371,146,0.009,147,0.009,155,1.403,209,0.307,265,2.268,299,2.317,311,2.492,339,1.911,350,2.874,371,2.209,386,2.492,391,3.626,416,4.344,435,1.403,447,2.924,450,6.816,556,1.764,557,1.991,584,2.763,597,1.696,615,2.268,658,3.108,674,2.268,730,2.375,816,4.195,826,3.626,827,3.927,828,3.924,832,4.016,834,4.336,836,3.322,838,2.492,839,4.928,840,3.808,845,4.658,847,4.336,852,5.564,859,3.448,872,3.108,875,2.738,887,3.322,899,3.692,902,3.108,916,3.903,951,4.928,961,4.928,989,3.58,1005,3.924,1006,4.336,1009,3.489,1050,2.62,1058,5.163,1063,3.58,1069,2.924,1071,4.52,1207,2.077,1274,5.48,1284,4.336,1469,4.195,1473,3.823,1474,3.58,1479,3.903,1486,4.336,1504,4.336,1510,3.108,1512,3.322,1515,3.322,1517,3.903,1528,3.903,1537,3.58,1539,4.336,1577,3.903,1707,2.924,1826,5.401,1844,4.336,1964,3.322,2230,3.58,2254,3.108,2266,3.58,2389,3.58,2493,5.204,2524,4.336,2610,4.336,2618,4.336,2678,4.336,2827,3.062,2828,3.062,2829,3.062,2830,4.992,2831,4.992,2832,4.992,2833,4.992,2834,4.992,2835,4.992,2836,4.336,2837,6.907,2838,6.907,2839,4.336,2840,4.336,2841,4.992,2842,4.992,2843,4.992,2844,4.992,2845,4.992,2846,6.303,2847,4.992,2848,4.992,2849,4.992,2850,4.992,2851,3.525,2852,4.992,2853,4.992,2854,4.336,2855,4.336,2856,4.992,2857,4.992,2858,4.336,2859,5.474,2860,4.992,2861,4.336,2862,4.336,2863,4.992,2864,4.336,2865,4.992,2866,4.992,2867,4.992,2868,4.992,2869,4.992,2870,4.992,2871,4.992,2872,4.992,2873,4.992,2874,4.992,2875,6.907,2876,4.992,2877,4.992,2878,4.992,2879,4.992,2880,4.992,2881,4.992,2882,3.525,2883,3.525,2884,3.525]],["title/components/ProfileComponent.html",[0,0.247,116,0.376]],["body/components/ProfileComponent.html",[0,0.392,1,0.391,2,0.528,3,0.131,4,0.131,5,0.434,6,0.413,7,0.434,8,0.151,10,0.434,11,0.794,12,0.711,14,0.528,15,0.615,16,0.556,17,4.924,18,2.62,19,0.528,21,0.236,22,0.015,23,0.115,24,3.225,25,1.517,26,0.148,27,0.148,30,0.434,32,0.434,33,0.586,34,0.586,35,0.434,36,0.709,37,0.434,38,0.226,39,0.434,40,0.391,41,0.272,42,0.434,43,0.37,44,0.434,45,0.391,46,0.434,47,0.434,48,0.391,49,0.586,50,0.391,51,0.253,52,0.33,53,0.586,54,0.391,55,0.434,56,0.37,57,0.709,58,0.391,59,0.434,60,0.391,61,0.434,62,0.391,63,0.413,64,0.663,65,0.391,66,0.434,67,0.391,68,0.434,69,0.37,70,0.434,71,0.472,72,0.586,73,0.37,74,0.217,75,0.434,76,0.37,77,0.434,78,0.391,79,0.434,80,0.391,81,0.413,82,0.434,83,0.391,84,0.434,85,0.391,86,0.674,87,0.434,88,0.391,89,0.434,90,0.391,91,0.434,92,0.391,93,0.391,94,0.391,95,0.434,96,0.391,97,0.434,98,0.391,99,0.434,100,0.5,101,0.567,102,0.586,103,0.413,104,0.586,105,0.391,106,0.391,107,0.434,108,0.391,109,0.434,110,0.391,111,0.413,112,0.434,113,0.391,114,0.391,115,0.434,116,0.639,117,0.391,118,0.391,119,0.391,120,0.434,121,0.391,122,0.434,123,0.391,124,0.35,125,0.391,126,0.674,127,0.434,128,0.413,129,0.434,130,0.391,131,0.434,132,0.391,133,0.434,134,0.391,135,0.419,136,0.391,137,0.391,138,0.434,139,0.391,140,0.63,141,0.391,142,0.434,143,0.391,144,0.434,145,0.434,146,0.01,147,0.01,151,1.347,152,1.469,157,0.131,158,0.367,160,1.458,162,0.444,165,0.415,166,0.741,176,1.402,197,0.222,198,1.591,201,2.928,202,2.777,205,0.43,206,0.463,209,0.414,210,1.966,211,2.391,213,2.417,220,0.626,278,0.707,279,0.775,293,1.037,299,2.046,314,3.259,370,1.298,416,3.08,418,0.955,422,2.29,423,2.58,425,2.13,427,0.626,430,1.579,434,3.464,549,2.528,610,1.458,771,4.516,774,5.854,777,5.469,778,5.469,782,4.833,792,5.469,795,3.583,799,2.959,804,3.583,805,3.583,806,4.833,807,3.583,812,3.583,814,6.113,815,4.833,816,2.746,845,3.464,875,2.736,902,2.568,971,4.351,1146,3.991,1193,2.315,1531,3.08,2017,4.833,2858,4.833,2885,3.583,2886,6.297,2887,6.297,2888,6.297,2889,5.565,2890,4.125,2891,5.565,2892,4.125,2893,4.125,2894,4.125,2895,4.125,2896,4.125,2897,4.125,2898,4.125,2899,4.125,2900,4.125,2901,4.125,2902,4.125,2903,4.125,2904,4.125,2905,4.125,2906,4.125,2907,4.125,2908,4.125]],["title/injectables/ProofIdService.html",[251,0.959,1364,2.465]],["body/injectables/ProofIdService.html",[3,0.164,4,0.164,8,0.124,21,0.241,22,0.015,23,0.144,26,0.185,27,0.185,38,0.276,41,0.34,51,0.317,74,0.422,146,0.011,147,0.011,157,0.164,158,0.424,161,1.074,162,0.45,165,0.508,176,1.752,178,3.431,193,1.973,197,0.257,205,0.294,206,0.317,209,0.473,251,1.557,252,2.145,256,1.73,257,3.184,258,2.794,278,1.321,279,1.073,281,2.85,293,1.312,320,0.782,329,3.054,330,2.854,331,2.24,333,2.573,335,3.21,338,1.562,339,1.973,340,2.342,341,2.145,342,1.666,351,1.712,377,3.698,435,1.449,551,2.854,556,1.822,633,4.613,635,2.573,648,4.613,653,3.21,654,1.895,655,4.478,656,5.906,657,3.698,658,3.21,659,4.031,660,4.031,661,3.698,669,3.21,670,4.031,671,4.031,672,4.031,673,4.031,674,2.342,675,2.706,676,3.698,677,3.02,1364,4.004,1369,5.417,2909,6.918,2910,4.478,2911,6.432,2912,5.029,2913,6.432,2914,7.34,2915,6.432,2916,6.432,2917,6.432,2918,5.156,2919,6.023,2920,6.432,2921,5.156,2922,6.432,2923,5.156,2924,5.156,2925,5.156,2926,6.432,2927,5.156,2928,6.432]],["title/components/ResetPasswordComponent.html",[0,0.247,117,0.376]],["body/components/ResetPasswordComponent.html",[0,0.386,1,0.379,2,0.517,3,0.127,4,0.127,5,0.421,6,0.4,7,0.421,8,0.149,10,0.421,11,0.793,12,0.71,14,0.517,15,0.565,16,0.545,18,2.578,19,0.517,21,0.238,22,0.015,23,0.112,25,1.47,26,0.143,27,0.143,30,0.421,32,0.421,33,0.573,34,0.573,35,0.421,36,0.7,37,0.421,38,0.196,39,0.421,40,0.379,41,0.264,42,0.421,43,0.359,44,0.421,45,0.379,46,0.421,47,0.421,48,0.379,49,0.573,50,0.379,51,0.246,52,0.32,53,0.573,54,0.379,55,0.421,56,0.359,57,0.7,58,0.379,59,0.421,60,0.379,61,0.421,62,0.379,63,0.4,64,0.652,65,0.379,66,0.421,67,0.379,68,0.421,69,0.359,70,0.421,71,0.462,72,0.573,73,0.359,74,0.21,75,0.421,76,0.359,77,0.421,78,0.379,79,0.421,80,0.379,81,0.4,82,0.421,83,0.379,84,0.421,85,0.379,86,0.545,87,0.421,88,0.379,89,0.421,90,0.379,91,0.421,92,0.379,93,0.379,94,0.379,95,0.421,96,0.379,97,0.421,98,0.379,99,0.421,100,0.489,101,0.587,102,0.573,103,0.4,104,0.573,105,0.379,106,0.379,107,0.421,108,0.379,109,0.421,110,0.379,111,0.4,112,0.421,113,0.379,114,0.379,115,0.421,116,0.379,117,0.631,118,0.728,119,0.379,120,0.421,121,0.379,122,0.421,123,0.379,124,0.339,125,0.379,126,0.4,127,0.421,128,0.4,129,0.421,130,0.379,131,0.421,132,0.379,133,0.421,134,0.379,135,0.41,136,0.379,137,0.379,138,0.421,139,0.379,140,0.62,141,0.379,142,0.421,143,0.379,144,0.421,145,0.421,146,0.01,147,0.01,151,1.319,152,1.445,157,0.127,158,0.359,160,1.44,162,0.445,165,0.359,166,0.7,195,0.98,197,0.218,199,1.413,202,3.321,205,0.432,206,0.466,207,2.267,209,0.409,210,1.925,211,2.261,220,0.606,228,1.595,230,0.606,265,2.475,299,2.641,320,1.135,342,0.865,351,0.933,370,1.258,459,1.291,463,1.242,467,2.261,508,1.925,532,0.833,543,0.686,694,1.341,695,1.291,710,0.865,711,0.865,722,4.26,745,2.276,746,1.595,755,2.173,770,2.19,796,3.126,800,1.413,801,1.359,974,2.472,984,2.003,986,1.47,1002,2.085,1008,3.392,1050,3.253,1301,3.908,1454,3.392,1458,2.342,1599,5.382,1607,4.125,1631,3.626,1666,3.858,1679,3.312,1728,3.473,1730,4.26,1731,3.473,1910,2.661,1992,3.126,2116,5.382,2177,3.126,2318,4.335,2929,6.826,2930,6.826,2931,3.126,2932,6.197,2933,4.732,2934,6.197,2935,6.197,2936,6.197,2937,6.654,2938,3.998,2939,3.998,2940,3.998,2941,3.998,2942,3.998,2943,3.473,2944,3.998,2945,3.998,2946,3.998,2947,3.998,2948,3.998,2949,3.998,2950,3.998,2951,3.998,2952,5.448,2953,5.448,2954,3.998,2955,5.448]],["title/components/RolesPermissionsComponent.html",[0,0.247,119,0.376]],["body/components/RolesPermissionsComponent.html",[0,0.37,1,0.351,2,0.49,3,0.118,4,0.118,5,0.389,6,0.37,7,0.389,8,0.143,10,0.389,11,0.791,12,0.707,14,0.49,15,0.438,16,0.516,19,0.49,21,0.241,22,0.015,23,0.103,26,0.213,27,0.133,30,0.823,31,4.645,32,0.389,33,0.543,34,0.543,35,0.389,36,0.678,37,0.389,38,0.243,39,0.389,40,0.351,41,0.244,42,0.389,43,0.332,44,0.389,45,0.351,46,0.389,47,0.389,48,0.351,49,0.543,50,0.351,51,0.227,52,0.296,53,0.543,54,0.351,55,0.389,56,0.332,57,0.678,58,0.351,59,0.389,60,0.351,61,0.389,62,0.351,63,0.37,64,0.626,65,0.351,66,0.389,67,0.351,68,0.389,69,0.332,70,0.389,71,0.438,72,0.543,73,0.332,74,0.195,75,0.389,76,0.332,77,0.389,78,0.351,79,0.389,80,0.351,81,0.37,82,0.389,83,0.351,84,0.389,85,0.351,86,0.644,87,0.389,88,0.351,89,0.389,90,0.351,91,0.389,92,0.351,93,0.564,94,0.351,95,0.389,96,0.351,97,0.389,98,0.351,99,0.389,100,0.464,101,0.528,102,0.543,103,0.37,104,0.543,105,0.351,106,0.351,107,0.389,108,0.351,109,0.389,110,0.351,111,0.37,112,0.389,113,0.351,114,0.351,115,0.389,116,0.351,117,0.351,118,0.351,119,0.611,120,0.389,121,0.351,122,0.389,123,0.351,124,0.314,125,0.351,126,0.37,127,0.389,128,0.37,129,0.389,130,0.351,131,0.389,132,0.351,133,0.389,134,0.351,135,0.388,136,0.351,137,0.351,138,0.389,139,0.351,140,0.595,141,0.351,142,0.389,143,0.351,144,0.389,145,0.389,146,0.009,147,0.009,151,1.25,152,1.387,157,0.118,158,0.341,160,1.393,161,1.076,162,0.419,165,0.425,166,0.678,174,1.193,188,3.213,195,0.94,197,0.206,205,0.211,206,0.227,209,0.416,211,1.257,230,0.561,256,1.16,278,1.02,279,0.828,311,3.213,342,1.287,418,0.902,427,0.561,443,3.484,459,1.239,474,3.703,505,3.703,532,0.771,543,0.634,586,2.71,694,1.287,695,1.239,710,0.8,711,0.8,726,2.167,730,1.76,738,3.213,739,2.462,740,2.924,743,2.71,745,2.214,754,1.942,767,2.456,808,3.213,816,2.462,833,2.71,1009,2.858,1010,1.68,1015,2.71,1076,3.703,1078,5.591,1080,3.703,1081,2.653,1084,3.213,1085,3.213,1086,2.892,1088,3.213,1193,1.539,1301,2.653,1302,2.462,1530,3.215,1531,3.563,1737,5.166,1762,3.213,1763,4.037,1775,3.703,1815,2.653,1838,5.591,1879,4.037,1883,3.703,1939,2.462,2063,4.037,2384,2.892,2457,2.892,2551,4.037,2605,2.892,2702,3.213,2751,2.462,2912,4.037,2919,4.037,2956,6.48,2957,6.48,2958,3.213,2959,5.949,2960,5.164,2961,5.949,2962,5.164,2963,5.164,2964,5.164,2965,5.163,2966,3.699,2967,5.164,2968,3.699,2969,5.164,2970,5.164,2971,3.699,2972,3.699,2973,3.699,2974,4.485,2975,4.485,2976,4.485,2977,4.485,2978,4.485,2979,4.485,2980,4.037,2981,4.485,2982,4.485,2983,4.485,2984,4.485,2985,4.485,2986,4.485,2987,4.485,2988,4.485,2989,4.485,2990,4.485,2991,4.485,2992,4.485,2993,4.485,2994,4.037,2995,4.485,2996,3.699,2997,3.699,2998,3.699,2999,3.699,3000,5.949,3001,3.699,3002,3.699,3003,3.699,3004,3.699,3005,3.699,3006,3.699,3007,3.699,3008,3.699,3009,3.699,3010,3.699,3011,3.699,3012,3.699,3013,3.699,3014,4.037,3015,3.699,3016,3.699,3017,5.164,3018,3.699,3019,3.699,3020,3.699,3021,3.213,3022,3.699,3023,3.699,3024,3.699,3025,3.699,3026,3.699,3027,3.699,3028,3.699,3029,3.699,3030,4.485,3031,5.164,3032,6.438,3033,3.699,3034,5.164,3035,4.485,3036,3.699,3037,3.699,3038,3.699,3039,3.213,3040,3.699,3041,3.699,3042,3.699,3043,3.699,3044,3.213,3045,3.213,3046,3.213]],["title/injectables/RolesPermissionsService.html",[251,0.959,2965,2.84]],["body/injectables/RolesPermissionsService.html",[3,0.155,4,0.155,8,0.116,15,0.717,21,0.229,22,0.015,23,0.135,26,0.245,27,0.174,31,5.003,38,0.174,93,0.681,135,0.466,146,0.011,147,0.011,157,0.155,158,0.408,162,0.388,165,0.408,166,0.51,174,0.972,193,1.856,197,0.247,205,0.276,206,0.298,209,0.298,211,2.84,251,1.498,252,2.018,256,1.531,278,0.832,279,0.675,293,1.122,320,1.15,337,4.888,338,1.469,341,2.018,342,1.049,474,4.438,505,5.149,1775,5.149,1812,4.438,1879,4.839,1883,5.149,2063,4.839,2551,4.839,2751,4.778,2912,4.839,2919,5.613,2965,4.438,2974,6.235,2975,6.235,2976,5.375,2977,6.235,2978,5.375,2979,6.235,2980,5.613,2981,5.375,2982,6.235,2983,5.375,2984,5.375,2985,6.235,2986,5.375,2987,6.235,2988,5.375,2989,6.235,2990,5.375,2991,5.375,2992,5.375,2993,6.235,2994,5.613,2995,5.375,3014,4.839,3021,5.919,3047,6.235,3048,4.212,3049,7.179,3050,6.188,3051,4.85,3052,6.188,3053,4.85,3054,6.188,3055,4.85,3056,4.85,3057,6.188,3058,4.85,3059,4.85,3060,4.85]],["title/components/SecurityComponent.html",[0,0.247,121,0.376]],["body/components/SecurityComponent.html",[0,0.381,1,0.37,2,0.508,3,0.124,4,0.124,5,0.411,6,0.391,7,0.411,8,0.147,10,0.411,11,0.793,12,0.709,14,0.508,15,0.455,16,0.536,19,0.508,21,0.246,22,0.015,23,0.109,26,0.14,27,0.14,30,0.411,32,0.411,33,0.564,34,0.564,35,0.411,36,0.694,37,0.411,38,0.256,39,0.411,40,0.37,41,0.354,42,0.411,43,0.351,44,0.411,45,0.37,46,0.411,47,0.411,48,0.37,49,0.564,50,0.37,51,0.24,52,0.312,53,0.564,54,0.37,55,0.411,56,0.351,57,0.694,58,0.37,59,0.411,60,0.37,61,0.411,62,0.37,63,0.391,64,0.644,65,0.37,66,0.411,67,0.37,68,0.411,69,0.351,70,0.411,71,0.455,72,0.564,73,0.351,74,0.206,75,0.411,76,0.351,77,0.411,78,0.37,79,0.411,80,0.37,81,0.391,82,0.411,83,0.37,84,0.411,85,0.37,86,0.536,87,0.411,88,0.37,89,0.411,90,0.37,91,0.411,92,0.37,93,0.37,94,0.37,95,0.411,96,0.37,97,0.411,98,0.37,99,0.411,100,0.481,101,0.537,102,0.564,103,0.391,104,0.564,105,0.37,106,0.37,107,0.411,108,0.37,109,0.411,110,0.37,111,0.391,112,0.411,113,0.37,114,0.37,115,0.411,116,0.37,117,0.37,118,0.37,119,0.37,120,0.411,121,0.625,122,0.411,123,0.37,124,0.331,125,0.37,126,0.391,127,0.411,128,0.391,129,0.411,130,0.37,131,0.411,132,0.37,133,0.411,134,0.37,135,0.403,136,0.37,137,0.37,138,0.411,139,0.37,140,0.612,141,0.37,142,0.411,143,0.37,144,0.411,145,0.411,146,0.009,147,0.009,151,1.298,152,1.428,157,0.124,158,0.354,160,1.425,161,1.275,162,0.424,165,0.435,166,0.783,174,1.227,197,0.214,198,1.275,205,0.349,206,0.376,220,0.592,320,1.158,348,1.753,351,1.537,371,1.057,417,4.391,418,0.928,419,1.375,422,2.239,423,2.522,425,2.052,427,0.592,428,2.801,429,0.877,430,1.495,432,2.599,433,2.329,435,1.098,459,1.275,532,0.813,543,0.67,583,1.327,597,2.239,694,1.324,695,1.275,710,0.845,711,0.845,730,1.858,733,3.213,734,3.586,738,3.289,745,2.001,746,1.558,751,2.05,752,2.288,755,2.968,767,2.55,875,3.174,902,4.549,932,2.288,1009,2.967,1069,3.859,1206,2.599,1207,1.625,1208,2.801,1653,4.748,1666,2.431,1679,3.592,1759,2.431,1760,3.14,1802,3.054,2170,3.392,2209,3.392,2436,2.801,3061,3.392,3062,5.361,3063,6.122,3064,4.726,3065,6.589,3066,3.905,3067,3.905,3068,3.905,3069,3.905,3070,3.905,3071,3.905,3072,6.122,3073,6.122,3074,6.122,3075,6.122,3076,3.905,3077,5.361,3078,3.905,3079,3.905,3080,3.905,3081,3.905,3082,3.905,3083,3.905,3084,3.905,3085,3.905,3086,3.905,3087,3.905,3088,3.905,3089,3.905,3090,3.392,3091,3.905,3092,3.905,3093,5.361,3094,3.905,3095,5.578,3096,3.905,3097,3.905,3098,3.905,3099,3.905,3100,3.905,3101,3.905,3102,3.905,3103,3.905,3104,5.361,3105,6.463,3106,3.905,3107,5.361,3108,5.361,3109,5.361,3110,5.361,3111,5.361,3112,5.361,3113,3.905,3114,3.905]],["title/injectables/SecurityQuestionService.html",[251,0.959,3064,2.84]],["body/injectables/SecurityQuestionService.html",[3,0.173,4,0.173,8,0.13,21,0.238,22,0.015,23,0.152,26,0.195,27,0.195,38,0.268,41,0.358,51,0.334,74,0.35,135,0.409,146,0.012,147,0.012,157,0.173,158,0.438,161,1.131,162,0.445,165,0.493,176,1.846,193,2.079,197,0.266,205,0.31,206,0.334,209,0.459,251,1.608,252,2.26,256,1.612,257,3.259,258,2.886,278,1.282,279,1.041,281,2.839,293,1.343,320,0.824,329,3.11,330,3.007,331,2.36,338,1.646,339,2.079,340,2.468,341,2.26,342,1.617,435,1.527,556,1.919,635,2.711,654,1.997,661,3.896,875,3.248,902,4.467,1127,4.247,1247,3.896,1653,5.258,3064,4.764,3090,5.769,3095,5.845,3115,6.861,3116,4.718,3117,6.643,3118,6.643,3119,7.475,3120,6.643,3121,6.643,3122,6.643,3123,5.432,3124,6.643,3125,5.432,3126,5.432,3127,6.643,3128,5.432,3129,6.643,3130,5.432]],["title/components/ShareDialogComponent.html",[0,0.247,123,0.376]],["body/components/ShareDialogComponent.html",[0,0.364,1,0.339,2,0.479,3,0.114,4,0.114,5,0.377,6,0.358,7,0.377,8,0.14,10,0.377,11,0.79,12,0.706,14,0.479,15,0.428,16,0.505,19,0.479,21,0.253,22,0.015,23,0.1,26,0.128,27,0.128,28,4.396,30,0.377,31,4.321,32,0.377,33,0.531,34,0.531,35,0.377,36,0.668,37,0.377,38,0.249,39,0.377,40,0.339,41,0.236,42,0.377,43,0.321,44,0.377,45,0.339,46,0.377,47,0.377,48,0.339,49,0.531,50,0.339,51,0.22,52,0.286,53,0.531,54,0.339,55,0.377,56,0.321,57,0.668,58,0.339,59,0.377,60,0.339,61,0.377,62,0.339,63,0.584,64,0.615,65,0.339,66,0.377,67,0.339,68,0.377,69,0.321,70,0.377,71,0.428,72,0.531,73,0.321,74,0.188,75,0.377,76,0.321,77,0.377,78,0.339,79,0.377,80,0.339,81,0.358,82,0.377,83,0.339,84,0.377,85,0.339,86,0.505,87,0.377,88,0.339,89,0.377,90,0.339,91,0.377,92,0.339,93,0.339,94,0.339,95,0.377,96,0.339,97,0.377,98,0.339,99,0.377,100,0.453,101,0.522,102,0.531,103,0.358,104,0.531,105,0.339,106,0.339,107,0.377,108,0.339,109,0.377,110,0.339,111,0.358,112,0.377,113,0.339,114,0.339,115,0.377,116,0.339,117,0.339,118,0.339,119,0.339,120,0.377,121,0.339,122,0.377,123,0.602,124,0.664,125,0.339,126,0.358,127,0.377,128,0.358,129,0.377,130,0.339,131,0.377,132,0.339,133,0.377,134,0.339,135,0.548,136,0.339,137,0.339,138,0.377,139,0.339,140,0.669,141,0.339,142,0.377,143,0.339,144,0.377,145,0.377,146,0.009,147,0.009,155,1.418,157,0.114,158,0.333,161,1.051,162,0.44,165,0.458,166,0.704,174,1.172,178,2.382,195,0.798,197,0.202,199,2.242,205,0.362,206,0.411,209,0.478,220,0.543,228,1.428,230,0.543,244,1.786,254,3.889,256,1.686,278,1.088,279,0.883,293,1.102,338,1.084,342,0.774,371,1.811,418,0.886,419,1.313,427,0.543,429,0.804,459,1.217,461,2.538,463,1.172,512,1.786,532,0.745,535,1.786,536,1.044,542,1.555,543,0.614,556,1.783,566,1.786,597,1.216,603,2.518,691,2.798,692,2.099,693,2.648,694,1.091,695,1.051,696,4.382,697,4.382,698,1.931,703,3.108,704,3.33,706,3.108,707,4.382,710,0.774,711,0.774,712,1.878,720,3.167,723,2.567,727,3.167,731,3.423,732,3.067,733,2.648,734,3.423,740,2.882,743,3.067,745,1.91,749,2.096,750,1.878,751,1.878,752,2.096,754,1.878,771,4.191,788,2.567,799,2.567,832,1.981,1004,2.228,1082,2.567,1116,3.108,1142,5.075,1144,5.075,1149,4.382,1151,2.793,1154,3.423,1163,4.382,1203,3.108,1227,3.108,1363,2.382,1816,3.108,2299,3.945,2436,2.567,3030,3.108,3131,6.754,3132,6.754,3133,5.843,3134,5.843,3135,5.045,3136,6.345,3137,5.045,3138,5.843,3139,5.116,3140,5.045,3141,3.579,3142,3.579,3143,3.579,3144,5.045,3145,3.579,3146,3.579,3147,3.579,3148,3.579,3149,3.579,3150,3.579,3151,3.579,3152,3.579,3153,3.579,3154,3.579,3155,3.579,3156,3.579,3157,5.045,3158,3.579,3159,3.579,3160,3.579,3161,3.579,3162,3.579,3163,3.579,3164,3.579,3165,3.108,3166,3.579,3167,3.579,3168,3.579,3169,3.579,3170,3.579,3171,3.579,3172,3.579,3173,3.579,3174,3.579,3175,3.579,3176,3.579,3177,3.579,3178,3.579,3179,3.579,3180,3.579,3181,5.045,3182,5.045,3183,5.045,3184,5.045]],["title/injectables/SharedItemService.html",[251,0.959,3139,2.84]],["body/injectables/SharedItemService.html",[3,0.189,4,0.189,8,0.142,21,0.245,22,0.015,23,0.165,26,0.212,27,0.212,38,0.251,41,0.39,146,0.012,147,0.012,157,0.189,158,0.461,161,1.232,162,0.424,165,0.39,176,2.01,193,2.265,197,0.279,205,0.337,206,0.363,209,0.43,251,1.693,252,2.461,256,1.672,257,3.381,258,3.038,278,1.199,279,0.974,281,2.63,329,3.2,331,2.57,338,1.792,339,2.265,341,2.461,342,1.28,371,1.893,435,1.663,635,2.953,654,2.175,1079,4.353,1097,6.073,1247,4.243,3139,5.015,3185,6.68,3186,5.138,3187,6.992,3188,6.992,3189,5.916,3190,6.992,3191,5.916]],["title/components/SideNavComponent.html",[0,0.247,125,0.376]],["body/components/SideNavComponent.html",[0,0.347,1,0.311,2,0.45,3,0.105,4,0.105,5,0.345,6,0.328,7,0.345,8,0.167,10,0.345,11,0.786,12,0.704,14,0.45,15,0.549,16,0.474,18,2.692,19,0.45,21,0.244,22,0.015,23,0.092,25,1.207,26,0.118,27,0.118,30,0.345,32,0.345,33,0.499,34,0.499,35,0.345,36,0.642,37,0.345,38,0.255,39,0.345,40,0.311,41,0.216,42,0.345,43,0.295,44,0.345,45,0.311,46,0.345,47,0.345,48,0.311,49,0.499,50,0.45,51,0.202,52,0.639,53,0.499,54,0.311,55,0.345,56,0.295,57,0.642,58,0.311,59,0.345,60,0.311,61,0.345,62,0.311,63,0.328,64,0.586,65,0.311,66,0.345,67,0.311,68,0.345,69,0.295,70,0.345,71,0.402,72,0.499,73,0.295,74,0.321,75,0.345,76,0.295,77,0.345,78,0.311,79,0.345,80,0.311,81,0.328,82,0.345,83,0.311,84,0.345,85,0.311,86,0.474,87,0.345,88,0.311,89,0.345,90,0.311,91,0.345,92,0.311,93,0.614,94,0.311,95,0.345,96,0.311,97,0.345,98,0.311,99,0.345,100,0.426,101,0.507,102,0.499,103,0.328,104,0.499,105,0.311,106,0.311,107,0.345,108,0.311,109,0.345,110,0.311,111,0.328,112,0.345,113,0.311,114,0.311,115,0.345,116,0.311,117,0.311,118,0.311,119,0.311,120,0.345,121,0.311,122,0.345,123,0.311,124,0.279,125,0.579,126,0.647,127,0.345,128,0.328,129,0.345,130,0.311,131,0.345,132,0.311,133,0.345,134,0.311,135,0.357,136,0.311,137,0.311,138,0.345,139,0.311,140,0.557,141,0.311,142,0.345,143,0.311,144,0.345,145,0.345,146,0.008,147,0.008,151,1.148,152,1.299,157,0.105,158,0.313,160,1.32,162,0.44,165,0.459,166,0.764,174,0.658,195,0.88,197,0.19,198,1.608,201,2.65,205,0.396,206,0.427,209,0.467,210,1.676,211,2.465,213,2.061,220,0.498,230,0.498,244,2.367,256,1.694,278,1.11,279,0.901,293,1.308,342,0.71,348,1.073,350,2.692,351,1.423,356,1.491,358,2.185,369,1.817,386,1.638,419,1.251,422,2.073,423,2.335,425,1.816,429,0.737,430,1.256,447,2.778,449,3.573,458,1.821,463,1.117,470,1.256,523,2.256,536,0.958,543,0.563,563,1.817,566,1.638,584,1.817,586,2.923,601,1.817,658,2.043,669,2.953,690,3.709,692,2.317,694,1.205,695,1.16,698,1.256,710,0.71,711,0.71,717,2.354,718,3.707,733,2.923,734,3.262,751,1.723,752,1.923,771,3.994,797,6.074,799,2.354,827,2.49,851,1.817,894,2.354,999,1.723,1010,2.53,1061,2.354,1075,2.354,1086,4.355,1108,5.203,1126,4.307,1151,1.817,1154,1.923,1191,2.185,1193,2.692,1232,6.397,1243,4.06,1316,2.354,1330,4.828,1350,4.119,1376,2.566,1397,4.77,1454,2.953,1458,1.923,1607,4.06,1674,4.837,1712,2.851,1813,4.837,1815,4.837,1821,3.402,1891,2.953,2423,4.119,2629,3.994,2644,2.354,3035,4.837,3039,4.837,3044,4.837,3192,6.747,3193,2.851,3194,4.743,3195,5.569,3196,5.569,3197,5.569,3198,4.743,3199,5.569,3200,4.743,3201,4.743,3202,4.743,3203,4.743,3204,4.743,3205,4.743,3206,3.282,3207,4.743,3208,3.282,3209,3.282,3210,4.743,3211,3.282,3212,4.743,3213,3.282,3214,4.743,3215,3.282,3216,3.282,3217,3.282,3218,3.282,3219,3.282,3220,3.282,3221,4.743,3222,3.282,3223,3.282,3224,3.282,3225,3.282,3226,3.282,3227,3.282,3228,3.282,3229,5.569,3230,3.282,3231,3.282,3232,3.282,3233,3.282,3234,5.569,3235,3.282,3236,3.282,3237,3.282,3238,3.282,3239,3.282,3240,3.282,3241,3.282,3242,3.282,3243,3.282,3244,7.366,3245,4.743,3246,4.743]],["title/components/SupportComponent.html",[0,0.247,130,0.376]],["body/components/SupportComponent.html",[0,0.319,1,0.271,2,0.406,3,0.091,4,0.091,5,0.3,6,0.285,7,0.3,8,0.174,10,0.3,11,0.781,12,0.699,14,0.406,15,0.363,16,0.428,19,0.406,21,0.212,22,0.015,23,0.08,26,0.102,27,0.102,28,4.173,30,0.54,31,3.549,32,0.3,33,0.45,34,0.45,35,0.3,36,0.6,37,0.3,38,0.23,39,0.3,40,0.271,41,0.188,42,0.3,43,0.256,44,0.3,45,0.271,46,0.3,47,0.3,48,0.271,49,0.45,50,0.271,51,0.375,52,0.228,53,0.45,54,0.271,55,0.3,56,0.628,57,0.6,58,0.271,59,0.3,60,0.271,61,0.3,62,0.271,63,0.665,64,0.54,65,0.271,66,0.3,67,0.271,68,0.3,69,0.256,70,0.3,71,0.363,72,0.45,73,0.256,74,0.15,75,0.3,76,0.256,77,0.3,78,0.271,79,0.3,80,0.271,81,0.285,82,0.3,83,0.271,84,0.3,85,0.271,86,0.428,87,0.3,88,0.271,89,0.3,90,0.271,91,0.3,92,0.271,93,0.703,94,0.271,95,0.3,96,0.271,97,0.3,98,0.271,99,0.3,100,0.384,101,0.603,102,0.45,103,0.285,104,0.45,105,0.271,106,0.271,107,0.3,108,0.271,109,0.3,110,0.271,111,0.285,112,0.3,113,0.271,114,0.487,115,0.3,116,0.271,117,0.271,118,0.631,119,0.271,120,0.3,121,0.271,122,0.3,123,0.271,124,0.594,125,0.271,126,0.285,127,0.3,128,0.285,129,0.3,130,0.541,131,0.3,132,0.271,133,0.3,134,0.271,135,0.536,136,0.271,137,0.271,138,0.3,139,0.271,140,0.665,141,0.271,142,0.3,143,0.271,144,0.3,145,0.3,146,0.008,147,0.008,157,0.091,158,0.376,162,0.348,165,0.188,166,0.3,186,2.847,195,0.811,197,0.171,205,0.325,206,0.35,209,0.394,211,1.744,230,0.433,265,1.943,293,0.939,299,2.445,320,0.649,350,3.161,371,1.929,373,3.549,375,3.55,386,2.135,391,3.59,416,3.156,418,0.778,427,0.433,433,1.858,435,1.202,443,3.339,447,4.292,449,2.505,459,1.069,463,1.029,486,3.549,532,0.594,543,0.489,556,2.014,557,2.558,581,2.245,583,0.969,607,1.937,610,1.511,615,1.943,666,1.898,674,2.331,694,1.11,710,0.617,711,0.617,725,3.715,730,2.035,809,3.795,820,3.068,826,2.245,827,3.74,828,4.435,832,3.55,833,3.926,836,3.795,838,2.135,840,3.74,858,4.599,859,3.201,863,4.952,872,3.549,873,3.795,875,2.477,878,3.795,893,4.089,899,4.006,902,3.549,905,2.847,908,5.014,909,3.344,915,3.068,938,4.742,961,4.776,990,2.663,993,3.344,1005,3.992,1010,1.296,1015,2.245,1058,4.552,1130,4.906,1206,3.415,1207,1.187,1208,2.046,1234,4.952,1274,3.068,1275,3.344,1330,2.847,1463,2.847,1467,4.458,1474,3.068,1476,2.847,1477,3.339,1480,3.068,1485,3.715,1487,3.068,1496,3.344,1497,2.245,1498,3.068,1524,3.344,1529,2.847,1530,2.663,1531,3.156,1542,3.715,1552,4.089,1571,3.344,1653,5.215,1730,3.344,1803,3.344,1804,2.663,1812,3.068,1815,4.906,1826,3.344,1835,3.715,1891,3.549,1910,3.795,1974,1.671,2033,3.992,2035,3.344,2189,3.068,2191,3.068,2192,3.068,2230,3.068,2318,2.663,2450,3.344,2451,3.715,2453,3.715,2454,3.715,2456,3.344,2459,3.344,2465,5.57,2466,4.599,2484,5.57,2493,3.068,2508,3.715,2521,3.715,2528,3.344,2629,3.681,2644,2.046,2671,3.715,2683,3.715,2701,3.715,2751,2.847,2754,3.715,2755,5.305,2824,3.344,2839,4.952,2840,4.952,2861,3.715,3095,6.127,3247,2.477,3248,5.132,3249,4.277,3250,5.132,3251,6.108,3252,5.701,3253,2.852,3254,5.132,3255,5.132,3256,6.108,3257,5.132,3258,5.132,3259,2.852,3260,2.852,3261,4.277,3262,3.715,3263,3.715,3264,4.277,3265,4.277,3266,7.328,3267,6.84,3268,5.701,3269,4.277,3270,4.277,3271,4.277,3272,4.277,3273,5.701,3274,4.277,3275,4.277,3276,4.277,3277,4.277,3278,5.701,3279,3.715,3280,4.277,3281,4.277,3282,4.277,3283,4.277,3284,4.277,3285,4.277,3286,4.277,3287,2.852,3288,2.852,3289,2.852,3290,2.852,3291,2.852,3292,4.277,3293,4.277,3294,2.852,3295,4.277,3296,4.277,3297,4.277,3298,4.277,3299,4.277,3300,4.277,3301,3.715,3302,4.277,3303,4.277,3304,4.277,3305,2.852,3306,4.277,3307,4.277,3308,4.277,3309,4.277,3310,4.277,3311,4.277,3312,4.277,3313,2.852]],["title/components/TagFormCompoent.html",[0,0.247,132,0.376]],["body/components/TagFormCompoent.html",[0,0.382,1,0.315,2,0.454,3,0.106,4,0.106,5,0.35,6,0.332,7,0.35,8,0.135,10,0.35,11,0.787,12,0.704,14,0.532,15,0.575,16,0.561,19,0.532,21,0.252,22,0.015,23,0.093,26,0.172,27,0.172,30,0.35,32,0.35,33,0.504,34,0.504,35,0.35,36,0.646,37,0.35,38,0.256,39,0.35,40,0.315,41,0.219,42,0.35,43,0.298,44,0.35,45,0.315,46,0.35,47,0.35,48,0.315,49,0.504,50,0.315,51,0.294,52,0.266,53,0.504,54,0.315,55,0.35,56,0.298,57,0.646,58,0.315,59,0.35,60,0.315,61,0.35,62,0.315,63,0.332,64,0.59,65,0.315,66,0.35,67,0.315,68,0.35,69,0.298,70,0.35,71,0.406,72,0.504,73,0.298,74,0.175,75,0.35,76,0.298,77,0.35,78,0.315,79,0.35,80,0.315,81,0.332,82,0.35,83,0.315,84,0.35,85,0.315,86,0.479,87,0.35,88,0.315,89,0.35,90,0.315,91,0.35,92,0.315,93,0.315,94,0.315,95,0.35,96,0.315,97,0.35,98,0.315,99,0.35,100,0.43,101,0.582,102,0.504,103,0.332,104,0.504,105,0.454,106,0.315,107,0.35,108,0.315,109,0.35,110,0.315,111,0.332,112,0.35,113,0.315,114,0.315,115,0.35,116,0.315,117,0.315,118,0.315,119,0.315,120,0.35,121,0.315,122,0.35,123,0.315,124,0.282,125,0.315,126,0.332,127,0.35,128,0.332,129,0.35,130,0.315,131,0.35,132,0.582,133,0.35,134,0.315,135,0.36,136,0.315,137,0.315,138,0.35,139,0.315,140,0.561,141,0.315,142,0.35,143,0.315,144,0.35,145,0.35,146,0.008,147,0.008,151,0.805,152,1.116,157,0.179,158,0.316,160,0.719,162,0.371,165,0.219,166,0.713,174,1.499,176,1.626,191,2.803,192,2.803,195,0.757,197,0.191,198,1.488,205,0.35,206,0.377,210,1.174,211,2.21,219,1.947,220,0.504,230,0.504,279,0.666,281,1.691,293,0.547,320,1.192,332,2.384,334,1.84,338,1.007,342,1.327,349,2.384,351,1.431,371,0.9,398,2.599,418,0.931,419,1.075,427,0.504,429,0.747,435,0.934,458,2.006,459,1.278,461,2.079,463,0.96,467,1.129,470,1.272,471,3.104,508,1.174,513,1.51,523,1.581,532,0.692,535,1.659,536,0.97,542,1.444,543,0.57,557,1.909,566,2.799,581,2.512,583,1.129,603,1.659,607,1.626,610,1.691,653,2.069,692,1.383,693,2.512,694,1.327,695,1.278,698,2.349,704,1.744,710,0.719,711,0.719,712,1.744,717,3.432,720,2.799,729,2.069,730,3.093,731,2.803,732,2.512,735,2.212,740,2.174,745,2.006,746,1.326,747,2.803,748,2.384,749,2.803,750,1.744,755,2.594,770,1.982,800,1.174,801,1.129,818,2.277,838,1.659,851,2.649,854,2.98,974,2.237,980,3.492,982,2.069,984,1.759,986,1.222,1002,1.272,1004,2.98,1050,2.944,1102,2.799,1169,2.599,1193,1.383,1242,2.384,1343,3.749,1473,1.84,1477,1.947,1497,1.744,1602,2.384,1656,2.212,1666,2.069,1679,3.627,1686,2.98,1698,3.432,1703,2.384,1704,3.432,1916,2.384,1939,3.733,1951,4.508,1963,4.023,1966,4.401,1974,2.803,1990,2.384,2032,4.754,2164,2.599,2173,2.599,2210,2.599,2221,5.296,2222,5.296,2223,2.212,2224,2.886,2225,2.886,2226,2.886,2227,2.599,2231,2.599,2233,2.886,2236,2.886,2243,4.157,2246,4.157,2254,2.98,2255,2.886,2256,2.886,2258,4.385,2260,4.157,2264,4.157,2265,4.157,2266,2.384,2267,2.384,2268,2.384,2269,2.886,2270,2.886,2271,2.886,2272,2.886,2273,2.886,2274,2.886,2275,2.886,2276,2.886,2277,2.886,2278,2.886,2279,2.886,2280,2.886,2281,2.886,2282,2.886,2283,4.871,2284,3.185,2285,2.599,2286,2.886,2287,2.886,2288,4.157,2289,2.886,2290,2.886,2291,2.886,2292,2.599,2293,2.886,2294,2.886,2295,2.886,2296,2.886,2297,2.886,2298,2.886,2299,3.742,2300,4.157,2301,4.871,2302,4.157,2303,2.886,2304,2.886,2305,2.886,2306,2.886,2307,2.886,2308,3.742,2309,2.886,2310,2.886,2311,2.886,2312,2.886,2313,2.886,2314,4.157,2315,2.886,2316,4.157,2317,2.886,2318,2.069,2319,2.886,2320,2.886,2321,2.886,2322,2.886,2323,2.886,2324,2.886,2325,2.886,2326,2.886,2327,2.886,2328,4.157,2329,2.599,2330,2.886,2331,4.157,2332,4.871,2333,4.401,2334,2.886,2335,2.886,2336,2.886,2337,2.886,3314,3.323,3315,3.323,3316,3.323,3317,3.323,3318,3.323]],["title/components/UserFormComponent.html",[0,0.247,134,0.376]],["body/components/UserFormComponent.html",[0,0.387,1,0.382,2,0.519,3,0.128,4,0.128,5,0.424,6,0.403,7,0.424,8,0.149,10,0.424,11,0.794,12,0.71,14,0.519,15,0.464,16,0.547,19,0.519,21,0.242,22,0.015,23,0.112,26,0.144,27,0.144,29,4.786,30,0.424,32,0.424,33,0.576,34,0.576,35,0.424,36,0.702,37,0.424,38,0.269,39,0.424,40,0.382,41,0.266,42,0.424,43,0.362,44,0.424,45,0.382,46,0.424,47,0.424,48,0.382,49,0.576,50,0.382,51,0.382,52,0.322,53,0.576,54,0.382,55,0.424,56,0.362,57,0.702,58,0.382,59,0.424,60,0.382,61,0.424,62,0.382,63,0.403,64,0.655,65,0.382,66,0.424,67,0.382,68,0.424,69,0.362,70,0.424,71,0.464,72,0.576,73,0.362,74,0.212,75,0.424,76,0.362,77,0.424,78,0.382,79,0.424,80,0.382,81,0.403,82,0.424,83,0.382,84,0.424,85,0.382,86,0.547,87,0.424,88,0.382,89,0.424,90,0.382,91,0.424,92,0.382,93,0.382,94,0.382,95,0.424,96,0.382,97,0.424,98,0.382,99,0.424,100,0.492,101,0.542,102,0.576,103,0.403,104,0.576,105,0.382,106,0.382,107,0.424,108,0.382,109,0.424,110,0.382,111,0.403,112,0.424,113,0.382,114,0.382,115,0.424,116,0.382,117,0.382,118,0.382,119,0.382,120,0.424,121,0.382,122,0.424,123,0.382,124,0.342,125,0.382,126,0.403,127,0.424,128,0.403,129,0.424,130,0.382,131,0.424,132,0.382,133,0.424,134,0.633,135,0.578,136,0.382,137,0.382,138,0.424,139,0.382,140,0.622,141,0.382,142,0.424,143,0.382,144,0.424,145,0.424,146,0.01,147,0.01,155,1.538,157,0.128,158,0.361,160,1.444,161,1.14,162,0.433,165,0.44,166,0.789,195,0.983,197,0.219,205,0.229,206,0.247,209,0.429,220,0.611,230,0.611,254,4.792,256,1.23,278,0.69,279,0.561,299,2.708,348,1.316,351,1.277,356,1.829,371,1.994,386,2.01,418,0.943,427,0.611,458,2.033,459,1.295,463,1.247,532,0.839,535,2.01,536,1.175,543,0.69,603,2.732,610,1.934,694,1.345,695,1.295,698,2.672,701,5.796,704,3.663,710,0.871,711,0.871,718,2.68,723,2.888,727,2.732,729,2.507,730,2.959,733,3.264,735,3.643,736,4.754,738,3.331,739,2.68,740,3.031,743,2.873,744,3.148,745,2.033,746,1.606,751,2.113,754,2.113,755,2.481,788,2.888,854,3.408,990,3.872,1207,2.995,1623,4.077,1624,2.68,1631,2.68,1658,4.754,1666,2.507,2001,3.497,2006,3.497,2033,4.345,2074,5.402,2100,3.497,2238,3.497,3045,4.754,3319,6.674,3320,6.008,3321,6.674,3322,5.474,3323,4.026,3324,4.026,3325,4.026,3326,4.026,3327,4.026,3328,4.026,3329,4.026,3330,4.026,3331,4.026,3332,4.026,3333,4.026,3334,5.474]],["title/components/UserProfileComponent.html",[0,0.247,136,0.376]],["body/components/UserProfileComponent.html",[0,0.35,1,0.317,2,0.456,3,0.107,4,0.107,5,0.352,6,0.334,7,0.352,8,0.178,10,0.352,11,0.787,12,0.704,14,0.456,15,0.408,16,0.481,19,0.317,21,0.243,22,0.015,23,0.093,30,0.352,32,0.352,33,0.506,34,0.506,35,0.352,36,0.648,37,0.352,38,0.202,39,0.352,40,0.317,41,0.371,42,0.352,43,0.3,44,0.352,45,0.317,46,0.352,47,0.352,48,0.317,49,0.506,50,0.317,51,0.295,52,0.267,53,0.506,54,0.317,55,0.352,56,0.3,57,0.648,58,0.317,59,0.352,60,0.317,61,0.352,62,0.456,63,0.563,64,0.592,65,0.317,66,0.352,67,0.317,68,0.352,69,0.3,70,0.352,71,0.408,72,0.506,73,0.3,74,0.176,75,0.352,76,0.3,77,0.352,78,0.317,79,0.352,80,0.317,81,0.334,82,0.352,83,0.317,84,0.352,85,0.317,86,0.615,87,0.352,88,0.317,89,0.352,90,0.317,91,0.352,92,0.317,93,0.317,94,0.317,95,0.352,96,0.317,97,0.352,98,0.317,99,0.352,100,0.432,101,0.51,102,0.506,103,0.334,104,0.506,105,0.317,106,0.317,107,0.352,108,0.317,109,0.352,110,0.317,111,0.334,112,0.352,113,0.317,114,0.317,115,0.352,116,0.317,117,0.317,118,0.456,119,0.317,120,0.352,121,0.317,122,0.352,123,0.317,124,0.284,125,0.317,126,0.334,127,0.352,128,0.334,129,0.352,130,0.317,131,0.352,132,0.317,133,0.352,134,0.317,135,0.526,136,0.534,137,0.317,138,0.352,139,0.317,140,0.563,141,0.317,142,0.352,143,0.317,144,0.352,145,0.352,146,0.009,147,0.009,157,0.107,158,0.317,160,1.217,162,0.444,165,0.448,166,0.767,174,1.233,176,1.633,195,0.76,197,0.192,198,1.576,199,1.988,205,0.399,206,0.43,207,1.391,209,0.4,220,0.507,228,1.333,230,0.729,244,1.668,263,4.887,278,0.573,279,0.669,299,1.767,314,3.975,320,0.507,334,1.85,338,1.013,348,1.093,351,1.312,355,2.903,356,1.518,370,1.052,371,0.905,376,3.758,418,0.853,419,1.382,422,1.912,423,2.154,425,1.279,427,0.507,429,0.751,430,1.279,433,2.088,434,4.225,458,1.839,467,1.136,470,2.154,472,2.225,508,1.181,512,1.668,523,1.59,536,0.975,549,1.518,583,1.136,615,3.082,619,2.815,621,2.088,698,1.279,720,3.253,770,1.988,800,1.181,801,1.136,835,2.992,840,2.522,845,2.992,870,3.198,967,6.122,969,2.614,970,2.614,971,2.614,974,1.917,984,1.229,986,1.229,989,3.447,990,2.992,992,3.758,993,3.758,1002,2.355,1003,3.071,1007,4.174,1008,2.992,1062,4.4,1071,2.397,1073,4.412,1102,3.071,1118,3.758,1130,4.412,1151,3.114,1190,2.397,1193,1.999,1195,2.903,1220,2.903,1276,4.174,1448,4.887,1510,2.081,1571,2.614,1705,2.614,1725,2.397,1753,4.174,1759,2.081,1760,1.958,1766,4.174,1812,3.447,2033,2.992,2223,3.198,2284,2.225,2466,2.397,2728,4.174,2730,4.174,2826,4.174,3014,3.758,3335,6.8,3336,5.627,3337,5.627,3338,4.806,3339,4.806,3340,4.806,3341,6.152,3342,4.806,3343,6.152,3344,3.343,3345,3.343,3346,3.343,3347,4.806,3348,3.343,3349,3.343,3350,3.343,3351,3.343,3352,3.343,3353,3.343,3354,3.343,3355,3.343,3356,3.343,3357,3.343,3358,3.343,3359,3.343,3360,3.343,3361,3.343,3362,2.614,3363,2.903,3364,3.343,3365,3.343,3366,3.343,3367,2.903,3368,3.343,3369,4.806,3370,3.343,3371,3.343,3372,3.343,3373,3.343,3374,3.343,3375,2.903,3376,3.343,3377,3.343,3378,3.343,3379,3.343,3380,3.343,3381,3.343,3382,6.152,3383,3.343,3384,3.343,3385,4.806,3386,3.343,3387,3.343,3388,3.343,3389,3.343,3390,3.343,3391,3.343,3392,3.343,3393,4.806,3394,3.343,3395,4.806,3396,4.806,3397,4.806,3398,4.806,3399,4.806,3400,4.806,3401,6.152,3402,4.806,3403,4.806,3404,4.806,3405,4.806,3406,4.806,3407,4.806,3408,4.806,3409,4.806,3410,4.806,3411,4.806]],["title/components/UsersComponent.html",[0,0.247,137,0.376]],["body/components/UsersComponent.html",[0,0.376,1,0.361,2,0.5,3,0.121,4,0.121,5,0.401,6,0.381,7,0.401,8,0.145,10,0.401,11,0.792,12,0.708,14,0.5,15,0.447,16,0.527,19,0.5,21,0.247,22,0.015,23,0.106,26,0.137,27,0.137,28,4.147,30,0.401,32,0.401,33,0.555,34,0.555,35,0.401,36,0.686,37,0.401,38,0.273,39,0.401,40,0.361,41,0.251,42,0.401,43,0.342,44,0.401,45,0.361,46,0.401,47,0.401,48,0.361,49,0.555,50,0.361,51,0.371,52,0.305,53,0.555,54,0.361,55,0.401,56,0.342,57,0.686,58,0.361,59,0.401,60,0.361,61,0.401,62,0.361,63,0.652,64,0.636,65,0.361,66,0.401,67,0.361,68,0.401,69,0.342,70,0.401,71,0.447,72,0.555,73,0.342,74,0.201,75,0.401,76,0.342,77,0.401,78,0.361,79,0.401,80,0.361,81,0.708,82,0.401,83,0.361,84,0.401,85,0.361,86,0.527,87,0.401,88,0.361,89,0.401,90,0.361,91,0.401,92,0.361,93,0.361,94,0.361,95,0.401,96,0.361,97,0.401,98,0.361,99,0.401,100,0.473,101,0.533,102,0.555,103,0.381,104,0.555,105,0.361,106,0.361,107,0.401,108,0.361,109,0.401,110,0.361,111,0.381,112,0.401,113,0.361,114,0.361,115,0.401,116,0.361,117,0.361,118,0.361,119,0.361,120,0.401,121,0.361,122,0.401,123,0.361,124,0.323,125,0.361,126,0.381,127,0.401,128,0.381,129,0.401,130,0.361,131,0.401,132,0.361,133,0.401,134,0.5,135,0.572,136,0.361,137,0.618,138,0.401,139,0.361,140,0.604,141,0.361,142,0.401,143,0.361,144,0.401,145,0.401,146,0.009,147,0.009,152,0.889,155,1.481,157,0.121,158,0.348,160,1.411,162,0.447,165,0.467,166,0.779,174,1.057,195,0.955,197,0.211,199,2.304,205,0.404,206,0.435,207,2.193,209,0.446,220,0.578,228,1.52,230,0.578,244,3.254,269,4.577,278,1.118,279,0.908,293,0.868,299,2.397,320,0.799,370,1.199,418,0.916,419,1.357,427,0.578,429,0.856,456,3.172,457,3.345,460,3.762,468,3.762,469,3.172,470,1.458,521,3.819,523,2.507,530,2,531,2.109,533,2.372,536,1.112,539,2.536,556,2.135,583,1.294,621,2.833,692,2.514,698,1.458,770,2.135,788,3.78,796,2.979,800,1.346,801,1.294,818,2.507,974,2.41,984,1.938,986,1.401,990,4.059,1001,2.109,1002,1.458,1003,1.902,1061,3.78,1063,3.78,1368,4.725,1617,4.121,1623,3.609,1624,2.536,2318,3.281,3165,3.309,3320,2.979,3412,3.309,3413,5.27,3414,5.27,3415,6.042,3416,6.042,3417,5.27,3418,5.27,3419,5.27,3420,6.52,3421,5.27,3422,3.81,3423,3.81,3424,5.27,3425,3.81,3426,5.27,3427,3.81,3428,3.81,3429,5.27,3430,3.81,3431,3.81,3432,3.81,3433,3.81,3434,3.81,3435,3.81,3436,6.042,3437,5.27,3438,3.81,3439,3.81,3440,6.042,3441,5.27,3442,3.81,3443,3.81,3444,5.27,3445,3.81,3446,3.81,3447,3.81,3448,3.81,3449,3.81,3450,3.81,3451,3.81,3452,3.81,3453,3.81,3454,3.81,3455,3.81,3456,3.81,3457,3.81,3458,3.81,3459,3.81,3460,3.81,3461,3.81,3462,3.81,3463,3.81,3464,3.81,3465,5.27,3466,5.27,3467,5.27,3468,5.27,3469,5.27]],["title/components/ViewNoteCompoent.html",[0,0.247,141,0.376]],["body/components/ViewNoteCompoent.html",[0,0.393,1,0.335,2,0.474,3,0.113,4,0.113,5,0.372,6,0.354,7,0.372,8,0.139,10,0.372,11,0.79,12,0.706,14,0.551,15,0.565,16,0.58,19,0.551,21,0.252,22,0.015,23,0.099,26,0.179,27,0.179,30,0.372,32,0.372,33,0.526,34,0.526,35,0.372,36,0.664,37,0.372,38,0.179,39,0.372,40,0.335,41,0.233,42,0.372,43,0.317,44,0.372,45,0.335,46,0.372,47,0.372,48,0.335,49,0.526,50,0.335,51,0.217,52,0.283,53,0.526,54,0.335,55,0.372,56,0.317,57,0.664,58,0.335,59,0.372,60,0.335,61,0.372,62,0.335,63,0.354,64,0.611,65,0.335,66,0.372,67,0.335,68,0.372,69,0.317,70,0.372,71,0.424,72,0.526,73,0.317,74,0.305,75,0.372,76,0.317,77,0.372,78,0.335,79,0.372,80,0.335,81,0.354,82,0.372,83,0.335,84,0.372,85,0.335,86,0.5,87,0.372,88,0.335,89,0.372,90,0.474,91,0.372,92,0.474,93,0.551,94,0.335,95,0.372,96,0.335,97,0.372,98,0.335,99,0.372,100,0.449,101,0.563,102,0.526,103,0.354,104,0.526,105,0.335,106,0.335,107,0.372,108,0.335,109,0.372,110,0.335,111,0.354,112,0.372,113,0.335,114,0.335,115,0.372,116,0.335,117,0.335,118,0.335,119,0.335,120,0.372,121,0.335,122,0.372,123,0.335,124,0.3,125,0.335,126,0.354,127,0.372,128,0.354,129,0.372,130,0.335,131,0.372,132,0.335,133,0.372,134,0.335,135,0.376,136,0.335,137,0.335,138,0.372,139,0.335,140,0.711,141,0.599,142,0.372,143,0.335,144,0.372,145,0.372,146,0.009,147,0.009,151,0.856,152,1.167,155,0.993,157,0.113,160,0.765,161,0.736,162,0.201,166,0.764,171,1.856,174,1.456,176,1.699,195,0.998,197,0.2,198,1.538,205,0.201,206,0.217,210,1.249,211,1.699,220,0.536,230,0.536,281,1.249,293,1.097,320,0.536,333,1.765,334,2.768,338,1.071,342,1.571,347,2.071,348,1.156,351,1.693,356,2.272,365,1.856,370,1.986,371,1.803,372,2.201,374,2.353,375,1.957,387,2.071,418,0.957,419,1.124,422,1.699,423,1.353,425,1.353,427,0.536,429,0.794,430,1.353,435,0.993,456,2.625,457,2.768,458,2.063,459,1.042,461,2.173,462,2.496,463,1.003,467,1.201,469,1.856,470,1.353,471,1.957,472,3.329,475,2.536,477,2.536,479,2.536,483,2.536,485,4.163,508,1.249,512,2.897,513,1.606,520,2.536,521,2.071,523,1.682,526,2.536,530,1.856,531,1.957,532,0.736,534,1.765,535,1.765,536,1.031,539,2.353,540,2.536,541,2.536,542,1.536,543,0.606,549,1.606,551,3.493,552,4.163,553,2.536,554,2.536,555,3.613,556,1.249,557,1.41,560,2.536,561,2.496,562,2.201,563,1.957,564,2.201,565,2.201,566,1.765,567,1.856,569,3.587,570,3.587,572,1.957,573,2.536,574,2.536,575,2.536,576,2.536,577,2.536,578,2.536,579,2.353,581,1.856,582,3.587,583,1.201,584,2.768,585,2.201,586,1.856,587,3.587,588,2.536,589,3.587,591,3.587,592,2.536,594,3.587,595,2.536,596,2.536,597,1.201,601,1.957,603,2.496,610,1.767,621,2.173,623,3.911,692,1.471,694,1.082,695,1.042,698,1.353,710,0.765,711,0.765,732,2.625,750,1.856,818,1.682,833,1.856,859,1.765,932,2.93,1079,2.201,1151,1.957,1298,2.201,1459,2.764,1876,3.114,1882,2.764,1888,2.764,1891,3.929,1912,2.764,1913,3.07,1914,3.07,1915,3.07,1916,2.536,1917,3.07,1924,2.764,1925,3.07,1926,3.07,1927,3.07,1933,3.07,1936,3.07,1937,3.07,1938,3.07,1939,2.353,1941,3.07,1943,3.07,1945,3.07,1950,2.536,1951,2.353,1952,3.07,1953,3.07,1957,2.764,1961,2.764,1962,3.07,1963,2.536,1964,2.353,1965,5.481,1966,4.163,1967,3.07,1968,4.344,1969,3.07,1970,5.041,1971,3.07,1972,3.07,1973,3.07,1974,2.071,1975,3.07,1976,3.07,1977,3.07,1978,3.07,1979,3.07,1980,3.07,1981,3.07,1982,2.764,1983,3.07,1984,4.344,3470,3.535,3471,5.002,3472,5.002,3473,5.002,3474,6.31,3475,5.002,3476,5.002]],["title/components/ViewPasswordComponent.html",[0,0.247,143,0.376]],["body/components/ViewPasswordComponent.html",[0,0.364,1,0.34,2,0.479,3,0.114,4,0.114,5,0.377,6,0.358,7,0.377,8,0.14,10,0.377,11,0.79,12,0.706,14,0.479,15,0.429,16,0.505,19,0.479,21,0.221,22,0.015,23,0.1,26,0.129,27,0.129,30,0.377,32,0.377,33,0.532,34,0.532,35,0.377,36,0.668,37,0.377,38,0.228,39,0.377,40,0.34,41,0.236,42,0.377,43,0.322,44,0.377,45,0.34,46,0.377,47,0.377,48,0.34,49,0.532,50,0.34,51,0.22,52,0.287,53,0.532,54,0.34,55,0.377,56,0.322,57,0.668,58,0.34,59,0.377,60,0.34,61,0.377,62,0.34,63,0.358,64,0.616,65,0.34,66,0.377,67,0.34,68,0.377,69,0.322,70,0.377,71,0.429,72,0.532,73,0.322,74,0.189,75,0.377,76,0.322,77,0.377,78,0.34,79,0.377,80,0.34,81,0.358,82,0.377,83,0.34,84,0.377,85,0.34,86,0.505,87,0.377,88,0.34,89,0.377,90,0.34,91,0.377,92,0.34,93,0.34,94,0.34,95,0.377,96,0.34,97,0.377,98,0.34,99,0.377,100,0.454,101,0.589,102,0.532,103,0.358,104,0.532,105,0.34,106,0.34,107,0.377,108,0.34,109,0.377,110,0.34,111,0.358,112,0.377,113,0.34,114,0.34,115,0.377,116,0.34,117,0.34,118,0.34,119,0.34,120,0.377,121,0.34,122,0.377,123,0.34,124,0.304,125,0.34,126,0.358,127,0.377,128,0.358,129,0.377,130,0.34,131,0.377,132,0.34,133,0.377,134,0.34,135,0.478,136,0.34,137,0.34,138,0.377,139,0.34,140,0.741,141,0.34,142,0.377,143,0.602,144,0.377,145,0.377,146,0.009,147,0.009,151,1.223,152,0.836,155,1.42,157,0.114,158,0.333,162,0.437,165,0.419,166,0.705,171,1.882,174,0.719,195,0.799,197,0.202,198,1.218,205,0.362,206,0.39,209,0.448,220,0.544,230,0.544,278,0.866,279,0.703,293,1.2,320,0.963,348,1.172,351,1.364,356,2.294,369,1.984,370,1.998,416,2.796,435,1.007,463,1.013,467,1.218,486,3.145,508,1.785,519,1.984,543,0.615,566,1.789,581,1.882,583,1.218,584,1.984,585,2.232,607,1.987,615,3.155,621,2.194,694,1.265,695,1.218,710,0.776,711,0.776,747,3.719,748,2.571,932,2.959,1009,1.984,1073,4.554,1102,1.789,1196,3.95,1343,3.515,1363,2.386,1568,3.114,1569,3.114,1686,3.145,1759,4.167,1760,3.426,1821,3.623,1823,2.803,1951,3.893,1990,3.623,2031,5.515,2032,4.455,2223,3.893,2254,3.145,2258,3.95,2284,3.362,2333,4.554,2412,4.387,2436,3.623,2605,2.803,2616,4.387,2629,4.195,2644,2.571,2931,2.803,2933,4.387,2943,3.114,2980,4.573,2994,4.965,3046,3.114,3105,4.387,3477,6.709,3478,6.709,3479,5.849,3480,5.051,3481,6.35,3482,5.849,3483,5.051,3484,5.051,3485,5.051,3486,5.051,3487,5.849,3488,5.849,3489,3.585,3490,3.585,3491,3.585,3492,3.585,3493,5.051,3494,6.35,3495,3.585,3496,5.051,3497,3.585,3498,3.585,3499,3.585,3500,3.585,3501,3.585,3502,3.585,3503,3.585,3504,3.585,3505,3.585,3506,3.585,3507,5.849,3508,3.585,3509,3.585,3510,3.585,3511,5.051,3512,3.585,3513,3.585,3514,5.849,3515,3.585,3516,5.849,3517,3.585,3518,3.585,3519,3.585,3520,3.585,3521,3.585,3522,3.585,3523,3.585,3524,3.585,3525,3.585,3526,5.051,3527,5.051,3528,5.051,3529,5.051,3530,5.051,3531,5.051,3532,5.051,3533,5.051,3534,5.051,3535,5.051,3536,5.051,3537,5.051,3538,5.051,3539,5.051,3540,5.051,3541,5.051]],["title/interfaces/Window.html",[233,1.799,234,2.84]],["body/interfaces/Window.html",[0,0.423,3,0.18,4,0.18,8,0.135,11,0.534,12,0.478,14,0.534,15,0.478,16,0.563,18,2.344,19,0.534,21,0.259,22,0.015,23,0.19,25,2.497,26,0.202,27,0.202,43,0.506,69,0.61,71,0.478,146,0.012,147,0.012,151,1.364,152,1.584,157,0.18,160,1.219,166,0.593,190,4.405,191,3.3,192,3.3,193,2.156,194,5.31,195,1.074,196,4.893,197,0.271,198,1.576,199,2.4,200,4.893,201,2.95,202,2.812,203,4.893,207,2.344,209,0.346,210,1.991,211,1.914,213,2.447,215,4.893,217,4.893,219,3.3,220,0.854,221,4.893,222,5.898,223,4.893,224,4.405,225,4.405,226,6.573,227,4.893,228,2.247,229,4.893,230,0.854,231,4.893,232,4.893,233,2.559,234,4.871,235,6.573,236,4.893,237,4.893,238,4.893,239,4.893,240,4.893,241,4.893,242,4.893,243,4.893,244,2.812,245,4.405,246,4.893,247,4.893,248,3.507,249,4.405,250,4.893,1237,4.041]],["title/coverage.html",[3542,4.701]],["body/coverage.html",[0,0.522,1,0.405,8,0.103,9,3.71,22,0.015,40,0.405,43,0.384,45,0.405,48,0.405,50,0.405,52,0.513,54,0.405,56,0.512,58,0.405,60,0.405,62,0.405,65,0.405,67,0.405,69,0.384,71,0.483,73,0.384,76,0.384,78,0.405,80,0.405,83,0.405,85,0.405,88,0.405,90,0.405,92,0.405,94,0.405,96,0.405,98,0.405,100,0.512,103,0.427,105,0.405,106,0.405,108,0.405,110,0.405,113,0.405,116,0.405,117,0.405,119,0.405,121,0.405,123,0.405,125,0.405,128,0.427,130,0.405,132,0.405,134,0.405,136,0.405,137,0.405,139,0.405,141,0.405,143,0.405,146,0.01,147,0.01,148,3.71,149,3.71,150,3.71,189,3.34,190,4.454,199,1.509,209,0.262,233,2.911,234,3.064,251,1.921,253,3.71,320,0.648,339,2.453,413,3.71,414,3.71,415,3.71,422,1.451,455,4.454,528,2.659,538,3.064,627,3.71,678,3.71,689,3.71,690,3.34,691,4.454,728,3.71,729,4.434,747,2.502,768,3.71,797,3.34,819,3.71,967,4.454,968,3.71,969,3.34,970,4.454,1011,3.71,1012,3.71,1013,3.71,1018,2.843,1052,3.34,1069,2.502,1091,3.71,1134,3.71,1135,3.71,1193,3.507,1238,4.454,1243,2.843,1269,3.71,1288,3.71,1328,3.71,1353,3.064,1354,4.454,1355,4.454,1356,4.454,1364,2.659,1405,3.71,1449,3.71,1592,3.71,1593,3.71,1594,3.71,1623,2.364,1662,3.71,1707,2.502,1732,3.71,1733,3.71,1734,3.71,1851,3.71,1852,3.71,1853,3.71,1876,2.659,1877,3.71,1912,4.454,1999,3.71,2016,3.71,2040,3.71,2062,3.71,2084,3.71,2110,3.71,2111,4.454,2112,4.454,2194,3.71,2221,4.454,2222,4.454,2338,4.454,2339,3.71,2340,3.71,2547,3.71,2626,3.71,2627,3.71,2706,3.064,2707,3.71,2768,3.71,2769,3.71,2770,3.71,2827,3.71,2828,3.71,2829,3.71,2885,3.71,2909,3.71,2910,3.71,2929,3.71,2930,3.71,2931,4.454,2956,3.71,2957,3.71,2958,3.71,2965,3.064,3047,3.71,3048,3.71,3061,3.71,3064,3.064,3115,3.71,3116,3.71,3131,3.71,3132,3.71,3139,3.064,3185,3.71,3186,3.71,3192,3.71,3193,3.71,3247,3.71,3319,3.71,3320,3.34,3335,3.71,3412,3.71,3477,3.71,3478,3.71,3542,3.71,3543,4.272,3544,4.272,3545,3.71,3546,7.478,3547,3.71,3548,7.834,3549,6.836,3550,6.409,3551,4.454,3552,4.272,3553,3.34,3554,3.71,3555,3.71,3556,3.71,3557,6.836,3558,6.409,3559,7.121,3560,4.272,3561,6.836,3562,4.272,3563,4.272,3564,3.71,3565,3.71,3566,7.121,3567,5.696,3568,5.696,3569,7.325,3570,6.409,3571,7.325,3572,4.272,3573,4.272,3574,4.272,3575,4.272,3576,4.272,3577,4.272,3578,7.121,3579,4.272,3580,4.272,3581,4.272,3582,4.272,3583,3.71,3584,3.71,3585,3.71,3586,4.272,3587,4.272]],["title/dependencies.html",[957,3.418,3588,2.869]],["body/dependencies.html",[8,0.138,12,0.488,22,0.015,23,0.161,25,2.116,101,0.553,146,0.012,147,0.012,170,4.999,171,3.021,172,4.999,224,5.753,225,4.5,230,0.873,338,1.744,435,1.618,543,0.987,870,3.831,892,3.371,957,4.128,1476,3.831,1488,3.583,1510,4.283,2267,4.128,2268,4.128,2399,4.999,2401,4.5,2402,4.999,2585,4.999,3362,4.5,3363,4.999,3367,5.975,3589,5.756,3590,7.993,3591,5.756,3592,6.879,3593,5.756,3594,5.756,3595,5.756,3596,5.756,3597,5.756,3598,5.756,3599,5.756,3600,5.756,3601,4.999,3602,5.756,3603,5.756,3604,6.879,3605,5.756,3606,5.756,3607,5.756,3608,5.756,3609,5.756,3610,7.358,3611,5.756,3612,5.756,3613,5.756,3614,5.756,3615,6.879,3616,5.756,3617,5.756,3618,4.999,3619,5.756,3620,5.756,3621,4.999,3622,5.756,3623,5.756,3624,5.756,3625,5.756,3626,6.879,3627,5.756,3628,5.756,3629,5.756,3630,5.756,3631,5.756,3632,5.756,3633,5.756,3634,5.756,3635,5.756,3636,5.756,3637,5.756,3638,5.756]],["title/miscellaneous/functions.html",[1839,3.726,3639,2.369]],["body/miscellaneous/functions.html",[22,0.014,38,0.231,146,0.013,147,0.013,157,0.205,209,0.395,258,2.793,278,1.102,279,0.895,329,3.053,1839,5.027,3551,5.027,3553,5.738,3639,4.611,3640,5.584,3641,6.429]],["title/index.html",[157,0.105,1341,2.369,3375,2.869]],["body/index.html",[0,0.366,12,0.591,22,0.012,28,4.082,31,2.792,41,0.296,51,0.276,63,0.448,93,0.558,101,0.616,114,0.425,124,0.381,135,0.59,140,0.448,146,0.01,147,0.01,171,4.214,176,1.999,205,0.256,233,2.982,265,2.672,279,0.97,350,3.231,351,1.046,358,2.985,371,1.777,378,3.507,391,3.446,435,1.26,440,3.507,443,3.446,447,3.845,556,1.585,557,2.347,563,2.482,584,4.11,585,2.792,597,1.524,607,1.524,619,2.627,658,2.792,665,2.482,669,2.792,677,2.627,730,2.133,827,3.898,828,4.339,832,2.482,835,2.792,836,4.816,837,5.702,838,3.478,858,4.219,859,2.239,867,3.895,868,5.702,872,3.662,873,2.985,875,3.028,887,3.915,899,3.446,907,5.133,912,3.895,914,3.895,915,3.217,916,3.507,925,3.895,928,3.895,931,3.895,933,3.895,934,3.507,938,3.915,939,3.217,951,4.6,953,4.6,957,4.708,1061,4.998,1063,3.217,1069,2.627,1196,4.6,1206,2.985,1207,1.866,1241,3.217,1351,5.57,1447,3.895,1463,3.915,1465,3.895,1473,3.634,1477,2.627,1479,5.133,1480,3.217,1488,2.792,1509,3.895,1510,4.087,1511,3.217,1512,2.985,1517,3.507,1522,3.895,1529,3.915,1530,3.662,1531,3.634,1532,3.507,1533,3.507,1552,3.217,1553,3.507,1686,3.662,1704,4.219,1705,5.133,1723,3.895,1803,3.507,1804,2.792,1814,5.109,1817,5.109,1819,5.702,1836,3.895,1842,3.507,1964,2.985,2230,3.217,2254,4.087,2382,3.895,2449,3.895,2456,5.449,2459,3.507,2482,3.895,2490,3.895,2491,5.109,2493,3.217,2498,3.895,2502,3.895,2510,5.702,2528,3.507,2537,3.895,2586,5.702,2608,5.702,2685,5.109,2751,2.985,2760,3.895,2824,4.6,2836,3.895,2854,6.053,2855,3.895,2859,3.895,2864,3.895,3262,3.895,3263,3.895,3279,5.109,3362,4.6,3621,3.895,3642,5.883,3643,6.565,3644,4.6,3645,5.883,3646,4.485,3647,4.485,3648,4.485,3649,5.883,3650,4.485,3651,4.485,3652,4.485,3653,4.485,3654,4.485,3655,5.883,3656,5.883,3657,3.895,3658,4.485,3659,4.485,3660,4.485,3661,4.485,3662,4.485,3663,5.883,3664,4.485,3665,4.485,3666,4.485,3667,4.485,3668,3.895,3669,4.485,3670,4.485,3671,4.485,3672,4.485,3673,4.485,3674,6.969,3675,6.565,3676,4.485,3677,4.485,3678,4.485,3679,4.485,3680,6.565,3681,4.485,3682,4.485,3683,4.485,3684,4.485,3685,4.485,3686,4.485,3687,4.485,3688,4.485,3689,4.485,3690,4.485,3691,4.485,3692,4.485,3693,4.485,3694,4.485,3695,4.485,3696,4.485,3697,4.485,3698,5.883,3699,4.485,3700,4.485,3701,4.485,3702,4.485,3703,4.485,3704,5.883,3705,6.565,3706,6.565,3707,4.485,3708,4.485,3709,4.485,3710,4.485,3711,6.565,3712,4.485,3713,4.485,3714,4.485,3715,7.426,3716,4.485,3717,4.485,3718,4.485,3719,4.485,3720,4.485,3721,5.883,3722,4.485,3723,4.485,3724,4.485,3725,5.883,3726,5.109,3727,5.883,3728,4.485,3729,4.485,3730,4.485,3731,4.485,3732,4.485,3733,4.485,3734,4.485,3735,4.485,3736,4.485,3737,5.883,3738,4.485,3739,4.485,3740,4.485,3741,4.485,3742,4.485,3743,4.485,3744,4.485,3745,4.485,3746,4.485]],["title/modules.html",[3747,4.701]],["body/modules.html",[22,0.013,146,0.013,147,0.013,3747,5.669]],["title/overview.html",[3644,4.232]],["body/overview.html",[2,0.615,22,0.013,146,0.013,147,0.013,252,2.699,1237,4.653,2389,4.653,3644,5.073,3748,6.488,3749,6.488]],["title/properties.html",[197,0.19,3588,2.869]],["body/properties.html",[22,0.014,101,0.486,146,0.013,147,0.013,197,0.258,828,4.019,887,4.296,938,4.296,1343,3.573,3618,5.606,3750,6.455,3751,6.455]],["title/miscellaneous/variables.html",[3639,2.369,3752,4.138]],["body/miscellaneous/variables.html",[6,0.124,15,0.332,22,0.015,38,0.295,74,0.065,101,0.216,111,0.124,114,0.117,118,0.117,135,0.093,146,0.004,147,0.004,157,0.039,174,1.077,201,0.537,202,2.575,205,0.264,206,0.285,209,0.285,211,1.463,213,0.537,265,0.562,271,0.967,279,0.172,299,0.794,320,0.815,329,0.515,339,1.648,342,0.931,386,0.617,388,1.074,389,0.887,390,1.074,392,1.074,393,1.074,394,1.69,597,2.155,607,0.734,667,1.438,718,0.823,721,1.074,809,0.823,835,1.791,893,0.887,894,0.887,989,5.973,992,5.445,999,0.649,1001,0.685,1008,5.102,1273,1.074,1274,0.887,1281,1.074,1347,0.823,1488,0.77,1511,0.887,1537,1.55,1576,1.074,1607,0.823,1635,1.074,1842,3.623,1974,1.685,2390,1.877,2422,0.967,2654,1.074,2656,0.967,2862,1.074,3301,1.074,3545,1.074,3547,1.877,3551,0.967,3553,0.967,3554,1.877,3555,1.074,3556,1.877,3564,1.074,3565,1.877,3583,1.074,3584,1.074,3585,1.074,3601,1.074,3639,0.887,3640,1.074,3657,1.074,3668,1.074,3726,1.074,3752,1.074,3753,1.237,3754,1.237,3755,1.237,3756,1.237,3757,1.237,3758,1.237,3759,1.237,3760,1.237,3761,1.237,3762,1.237,3763,1.237,3764,1.237,3765,1.237,3766,1.237,3767,1.237,3768,1.237,3769,1.237,3770,1.237,3771,1.237,3772,1.237,3773,2.161,3774,1.237,3775,1.237,3776,1.237,3777,1.237,3778,1.237,3779,1.237,3780,1.237,3781,1.237,3782,1.237,3783,1.237,3784,1.237,3785,2.161,3786,1.237,3787,1.237,3788,1.237,3789,1.237,3790,2.161,3791,1.237,3792,1.237,3793,1.237,3794,1.237,3795,1.237,3796,1.237,3797,1.237,3798,8.198,3799,1.237,3800,1.237,3801,8.198,3802,2.161,3803,8.336,3804,1.237,3805,1.237,3806,2.161,3807,1.237,3808,1.237,3809,2.161,3810,1.237,3811,1.237,3812,2.161,3813,1.237,3814,1.237,3815,1.237,3816,1.237,3817,1.237,3818,1.237,3819,1.237,3820,1.237,3821,2.161,3822,1.237,3823,1.237,3824,1.237,3825,2.161,3826,1.237,3827,1.237,3828,1.237,3829,1.237,3830,1.237,3831,1.237,3832,1.237,3833,1.237,3834,2.877,3835,1.237,3836,1.237,3837,8.02,3838,3.449,3839,2.161,3840,1.237,3841,1.237,3842,1.237,3843,1.237,3844,1.237,3845,1.237,3846,1.237,3847,1.237,3848,1.237,3849,1.237,3850,1.237,3851,1.237,3852,2.161,3853,1.237,3854,1.237,3855,1.237,3856,1.237,3857,1.237,3858,2.161,3859,1.237,3860,2.877,3861,3.917,3862,1.237,3863,1.237,3864,1.237,3865,1.237,3866,2.161,3867,1.237,3868,6.131,3869,1.237,3870,1.237,3871,1.237,3872,1.237,3873,2.161,3874,1.237,3875,1.237,3876,2.877,3877,2.161,3878,1.237,3879,1.237,3880,1.237,3881,1.237,3882,1.237,3883,1.237,3884,1.237,3885,1.237,3886,1.237,3887,1.237,3888,4.305,3889,1.237,3890,1.237,3891,2.161,3892,1.237,3893,1.237,3894,1.237,3895,1.237,3896,1.237,3897,1.237,3898,1.237,3899,1.237,3900,2.161,3901,1.237,3902,2.161,3903,2.161,3904,1.237,3905,2.877,3906,2.161,3907,1.237,3908,1.237,3909,1.237,3910,1.237,3911,1.237,3912,1.237,3913,1.237,3914,1.237,3915,1.237,3916,2.161,3917,1.237,3918,1.237,3919,1.237,3920,2.877,3921,1.237,3922,1.237,3923,1.237,3924,1.237,3925,1.237,3926,1.237,3927,1.237,3928,1.237,3929,1.237,3930,1.237,3931,1.237,3932,5.159,3933,1.237,3934,1.237,3935,2.161,3936,1.237,3937,1.237,3938,1.237,3939,1.237,3940,2.161,3941,1.237,3942,2.161,3943,2.877,3944,1.237,3945,1.237,3946,1.237,3947,1.237,3948,1.237,3949,1.237,3950,1.237,3951,1.237,3952,1.237,3953,1.237,3954,1.237,3955,1.237,3956,2.161,3957,1.237,3958,4.305,3959,1.237,3960,1.237,3961,1.237,3962,1.237,3963,1.237,3964,2.161,3965,1.237,3966,1.237,3967,2.877,3968,1.237,3969,1.237,3970,1.237,3971,1.237,3972,1.237,3973,1.237,3974,1.237,3975,1.237,3976,1.237,3977,1.237,3978,1.237,3979,1.237,3980,1.237,3981,2.161,3982,1.237,3983,1.237,3984,1.237,3985,1.237,3986,1.237,3987,3.917,3988,1.237,3989,1.237,3990,1.237,3991,1.237,3992,1.237,3993,1.237,3994,2.161,3995,1.237,3996,5.372,3997,1.237,3998,2.877,3999,1.237,4000,1.237,4001,1.237,4002,1.237,4003,1.237,4004,1.237,4005,1.237,4006,1.237,4007,1.237,4008,1.237,4009,1.237,4010,3.449,4011,2.161,4012,1.237,4013,1.237,4014,1.237,4015,1.237,4016,1.237,4017,1.237,4018,1.237,4019,1.237,4020,1.237,4021,1.237,4022,1.237,4023,1.237,4024,2.161,4025,2.877,4026,1.237,4027,1.237,4028,1.237,4029,3.449,4030,2.161,4031,1.237,4032,1.237,4033,4.305,4034,1.237,4035,1.237,4036,1.237,4037,2.161,4038,1.237,4039,1.237,4040,2.161,4041,2.161,4042,1.237,4043,1.237,4044,1.237,4045,1.237,4046,3.449,4047,1.237,4048,1.237,4049,1.237,4050,2.877,4051,1.237,4052,1.237,4053,1.237,4054,2.161,4055,1.237,4056,1.237,4057,1.237,4058,1.237,4059,2.161,4060,1.237,4061,1.237,4062,1.237,4063,1.237,4064,1.237,4065,1.237,4066,2.877,4067,2.161,4068,1.237,4069,2.161,4070,1.237,4071,1.237,4072,1.237,4073,4.305,4074,1.237,4075,1.237,4076,1.237,4077,1.237,4078,1.237,4079,1.237,4080,2.161,4081,1.237,4082,1.237,4083,1.237,4084,1.237,4085,1.237,4086,1.237,4087,1.237,4088,1.237,4089,1.237,4090,1.237,4091,1.237,4092,1.237,4093,1.237,4094,1.237,4095,1.237,4096,1.237,4097,1.237,4098,1.237,4099,2.161,4100,1.237,4101,1.237,4102,1.237,4103,2.877,4104,1.237,4105,2.877,4106,2.161,4107,1.237,4108,2.161,4109,1.237,4110,1.237,4111,2.161,4112,1.237,4113,1.237,4114,1.237,4115,2.161,4116,1.237,4117,1.237,4118,1.237,4119,1.237,4120,1.237,4121,1.237,4122,1.237,4123,1.237,4124,1.237,4125,1.237,4126,1.237,4127,1.237,4128,1.237,4129,1.237,4130,2.161,4131,2.877,4132,1.237,4133,2.161,4134,1.237,4135,1.237,4136,1.237,4137,2.161,4138,1.237,4139,1.237,4140,1.237,4141,2.877,4142,1.237,4143,1.237,4144,1.237,4145,1.237,4146,2.161,4147,1.237,4148,1.237,4149,2.161,4150,1.237,4151,1.237,4152,1.237,4153,1.237,4154,1.237,4155,1.237,4156,1.237,4157,1.237,4158,1.237,4159,1.237,4160,1.237,4161,1.237,4162,1.237,4163,3.449,4164,1.237,4165,1.237,4166,1.237,4167,1.237,4168,1.237,4169,1.237,4170,1.237,4171,1.237,4172,1.237,4173,1.237,4174,1.237,4175,1.237,4176,1.237,4177,1.237,4178,1.237,4179,1.237,4180,1.237,4181,1.237,4182,1.237,4183,1.237,4184,1.237,4185,1.237,4186,2.161,4187,1.237,4188,1.237,4189,1.237,4190,1.237,4191,1.237,4192,2.161,4193,2.161,4194,1.237,4195,1.237,4196,1.237,4197,1.237,4198,1.237,4199,1.237,4200,1.237,4201,1.237,4202,1.237,4203,3.917,4204,1.237,4205,2.161,4206,1.237,4207,1.237,4208,1.237,4209,1.237,4210,1.237,4211,1.237,4212,1.237,4213,1.237,4214,1.237,4215,1.237,4216,1.237,4217,1.237,4218,1.237,4219,1.237,4220,1.237,4221,1.237,4222,1.237,4223,1.237,4224,1.237,4225,1.237,4226,1.237,4227,1.237,4228,1.237,4229,1.237,4230,1.237,4231,1.237,4232,1.237,4233,1.237,4234,1.237,4235,1.237,4236,1.237,4237,1.237,4238,1.237,4239,1.237,4240,2.161,4241,1.237,4242,1.237,4243,1.237,4244,1.237,4245,1.237,4246,1.237,4247,1.237,4248,1.237,4249,1.237,4250,1.237,4251,1.237,4252,1.237,4253,2.161,4254,1.237,4255,1.237,4256,1.237,4257,1.237,4258,1.237,4259,1.237,4260,1.237,4261,1.237,4262,1.237,4263,1.237,4264,1.237,4265,1.237,4266,1.237,4267,1.237,4268,1.237,4269,1.237,4270,1.237,4271,1.237,4272,1.237,4273,1.237,4274,1.237,4275,1.237,4276,1.237,4277,1.237,4278,1.237,4279,1.237,4280,1.237,4281,1.237,4282,1.237,4283,1.237,4284,1.237,4285,1.237,4286,1.237,4287,1.237,4288,1.237,4289,1.237,4290,1.237,4291,1.237,4292,1.237,4293,1.237,4294,1.237,4295,1.237,4296,1.237,4297,1.237,4298,1.237,4299,1.237,4300,1.237,4301,1.237,4302,1.237,4303,1.237,4304,1.237,4305,1.237,4306,1.237,4307,1.237,4308,1.237,4309,1.237,4310,1.237,4311,1.237,4312,1.237,4313,1.237,4314,1.237,4315,1.237,4316,1.237,4317,1.237,4318,1.237,4319,1.237,4320,1.237,4321,1.237,4322,1.237,4323,1.237,4324,1.237,4325,1.237,4326,1.237,4327,1.237,4328,1.237,4329,1.237,4330,1.237,4331,1.237,4332,1.237,4333,2.161,4334,1.237,4335,1.237,4336,1.237,4337,1.237,4338,1.237,4339,1.237,4340,1.237,4341,1.237,4342,2.161,4343,1.237,4344,1.237,4345,1.237,4346,1.237,4347,1.237,4348,1.237,4349,1.237,4350,1.237,4351,1.237,4352,1.237,4353,1.237,4354,1.237,4355,1.237,4356,1.237,4357,1.237,4358,1.237,4359,1.237,4360,1.237,4361,1.237,4362,1.237,4363,1.237,4364,1.237,4365,1.237,4366,1.237,4367,1.237,4368,1.237,4369,1.237,4370,1.237,4371,1.237,4372,1.237,4373,1.237,4374,1.237,4375,1.237,4376,1.237,4377,1.237,4378,1.237,4379,1.237,4380,1.237,4381,1.237,4382,1.237,4383,1.237,4384,1.237,4385,1.237,4386,1.237,4387,1.237,4388,1.237,4389,1.237,4390,1.237,4391,2.877,4392,1.237,4393,1.237,4394,1.237,4395,1.237,4396,1.237,4397,1.237,4398,2.877,4399,2.877,4400,1.237,4401,2.161,4402,3.917,4403,1.237,4404,1.237,4405,1.237,4406,1.237,4407,1.237,4408,1.237,4409,1.237,4410,1.237,4411,1.237,4412,1.237,4413,1.237,4414,1.237,4415,1.237,4416,2.161,4417,1.237,4418,1.237,4419,1.237,4420,1.237,4421,1.237,4422,1.237,4423,1.237,4424,1.237,4425,1.237,4426,1.237,4427,1.237,4428,1.237,4429,1.237,4430,1.237,4431,1.237,4432,1.237,4433,1.237,4434,2.877,4435,1.237,4436,1.237,4437,2.161,4438,1.237,4439,1.237,4440,1.237,4441,1.237,4442,1.237,4443,1.237,4444,1.237,4445,1.237,4446,1.237,4447,1.237,4448,1.237,4449,1.237,4450,1.237,4451,1.237,4452,1.237,4453,2.161,4454,1.237,4455,1.237,4456,1.237,4457,1.237,4458,1.237,4459,1.237,4460,1.237,4461,1.237,4462,1.237,4463,1.237,4464,1.237,4465,1.237,4466,1.237,4467,1.237,4468,1.237,4469,1.237,4470,1.237,4471,2.161,4472,1.237,4473,1.237,4474,1.237,4475,1.237,4476,1.237,4477,1.237,4478,1.237,4479,1.237,4480,1.237,4481,1.237,4482,1.237,4483,3.449,4484,2.161,4485,1.237,4486,2.877,4487,1.237,4488,1.237,4489,1.237,4490,1.237,4491,1.237,4492,1.237,4493,1.237,4494,1.237,4495,1.237,4496,1.237,4497,1.237,4498,1.237,4499,1.237,4500,1.237,4501,1.237,4502,1.237,4503,1.237,4504,2.161,4505,1.237,4506,1.237,4507,1.237,4508,1.237,4509,1.237,4510,1.237,4511,1.237,4512,1.237,4513,1.237,4514,1.237,4515,1.237,4516,1.237,4517,1.237,4518,1.237,4519,1.237,4520,1.237,4521,1.237,4522,1.237,4523,1.237,4524,1.237,4525,1.237,4526,1.237,4527,2.161,4528,1.237,4529,1.237,4530,1.237,4531,1.237,4532,1.237,4533,1.237,4534,1.237,4535,2.161,4536,1.237,4537,1.237,4538,1.237,4539,1.237,4540,1.237,4541,1.237,4542,2.161,4543,1.237,4544,1.237,4545,1.237,4546,1.237,4547,1.237,4548,1.237,4549,2.161,4550,1.237,4551,1.237,4552,1.237,4553,1.237,4554,1.237,4555,2.161,4556,1.237,4557,1.237,4558,1.237,4559,1.237,4560,1.237,4561,1.237,4562,2.161,4563,2.161,4564,2.161,4565,1.237,4566,1.237,4567,1.237,4568,1.237,4569,1.237,4570,1.237,4571,3.449,4572,1.237,4573,1.237,4574,1.237,4575,1.237,4576,1.237,4577,2.161,4578,1.237,4579,1.237,4580,1.237,4581,1.237,4582,1.237,4583,1.237,4584,1.237,4585,1.237,4586,1.237,4587,1.237,4588,1.237,4589,2.161,4590,1.237,4591,1.237,4592,1.237,4593,1.237,4594,1.237,4595,1.237,4596,1.237,4597,1.237,4598,1.237,4599,1.237,4600,1.237,4601,1.237,4602,1.237,4603,1.237,4604,2.161,4605,1.237,4606,1.237,4607,1.237,4608,1.237,4609,1.237,4610,1.237,4611,1.237,4612,1.237,4613,2.161,4614,1.237,4615,1.237,4616,1.237,4617,1.237,4618,1.237,4619,1.237,4620,1.237,4621,1.237,4622,1.237,4623,1.237,4624,1.237,4625,1.237,4626,1.237,4627,1.237,4628,1.237,4629,1.237,4630,2.161,4631,1.237,4632,1.237,4633,1.237,4634,1.237,4635,1.237,4636,2.161,4637,1.237,4638,1.237,4639,1.237,4640,1.237,4641,2.161,4642,1.237,4643,1.237,4644,1.237,4645,2.877,4646,1.237,4647,1.237,4648,1.237,4649,1.237,4650,1.237,4651,2.161,4652,1.237,4653,1.237,4654,1.237,4655,1.237,4656,1.237,4657,1.237,4658,2.161,4659,1.237,4660,1.237,4661,1.237,4662,1.237,4663,1.237,4664,1.237,4665,1.237,4666,2.161,4667,2.161,4668,1.237,4669,1.237,4670,1.237,4671,1.237,4672,1.237,4673,1.237,4674,1.237,4675,1.237,4676,1.237,4677,1.237,4678,2.161,4679,1.237,4680,1.237,4681,1.237,4682,1.237,4683,1.237,4684,1.237,4685,1.237,4686,1.237,4687,1.237,4688,1.237,4689,3.917,4690,1.237,4691,1.237,4692,2.161,4693,1.237,4694,1.237,4695,1.237,4696,1.237,4697,1.237,4698,1.237,4699,1.237,4700,1.237,4701,1.237,4702,1.237,4703,1.237,4704,1.237,4705,1.237,4706,1.237,4707,1.237,4708,1.237,4709,1.237,4710,1.237,4711,1.237,4712,1.237,4713,1.237,4714,1.237,4715,2.161,4716,1.237,4717,1.237,4718,1.237,4719,1.237,4720,1.237,4721,1.237,4722,2.161,4723,1.237,4724,1.237,4725,1.237,4726,1.237,4727,1.237,4728,1.237,4729,2.161,4730,1.237,4731,1.237,4732,1.237,4733,1.237,4734,1.237,4735,1.237,4736,2.161,4737,1.237,4738,1.237,4739,1.237,4740,1.237,4741,1.237,4742,1.237,4743,1.237,4744,2.161,4745,1.237,4746,1.237,4747,1.237,4748,1.237,4749,1.237,4750,1.237,4751,2.161,4752,1.237,4753,1.237,4754,1.237,4755,1.237,4756,1.237,4757,1.237,4758,2.161,4759,1.237,4760,1.237,4761,1.237,4762,1.237,4763,1.237,4764,1.237,4765,2.161,4766,1.237,4767,1.237,4768,1.237,4769,1.237,4770,1.237,4771,1.237,4772,2.161,4773,2.161,4774,1.237,4775,1.237,4776,1.237,4777,1.237,4778,1.237,4779,1.237,4780,2.161,4781,1.237,4782,1.237,4783,1.237,4784,2.161,4785,2.161,4786,1.237,4787,1.237,4788,1.237,4789,1.237,4790,1.237,4791,1.237,4792,1.237,4793,1.237,4794,1.237,4795,1.237,4796,2.161,4797,1.237,4798,1.237,4799,1.237,4800,1.237,4801,1.237,4802,1.237,4803,1.237,4804,2.161,4805,1.237,4806,1.237,4807,1.237,4808,1.237,4809,1.237,4810,1.237,4811,2.161,4812,1.237,4813,1.237,4814,1.237,4815,1.237,4816,1.237,4817,1.237,4818,2.161,4819,1.237,4820,1.237,4821,1.237,4822,1.237,4823,1.237,4824,1.237,4825,2.161,4826,1.237,4827,1.237,4828,1.237,4829,1.237,4830,1.237,4831,2.161,4832,1.237,4833,1.237,4834,1.237,4835,1.237,4836,1.237,4837,2.161,4838,1.237,4839,1.237,4840,1.237,4841,1.237,4842,1.237,4843,1.237,4844,2.161,4845,1.237,4846,1.237,4847,1.237,4848,1.237,4849,1.237,4850,1.237,4851,2.161,4852,1.237,4853,1.237,4854,1.237,4855,1.237,4856,1.237,4857,1.237,4858,1.237,4859,2.161,4860,1.237,4861,1.237,4862,1.237,4863,1.237,4864,1.237,4865,1.237,4866,2.161,4867,1.237,4868,1.237,4869,1.237,4870,1.237,4871,1.237,4872,1.237,4873,2.161,4874,1.237,4875,1.237,4876,1.237,4877,1.237,4878,1.237,4879,1.237,4880,1.237,4881,2.161,4882,1.237,4883,1.237,4884,1.237,4885,1.237,4886,1.237,4887,1.237,4888,2.161,4889,1.237,4890,1.237,4891,1.237,4892,2.877,4893,1.237,4894,1.237,4895,1.237,4896,1.237,4897,1.237,4898,1.237,4899,1.237,4900,1.237,4901,2.161,4902,1.237,4903,1.237,4904,1.237,4905,1.237,4906,1.237,4907,1.237,4908,2.161,4909,1.237,4910,1.237,4911,1.237,4912,1.237,4913,1.237,4914,1.237,4915,2.161,4916,1.237,4917,1.237,4918,1.237,4919,1.237,4920,1.237,4921,1.237,4922,2.161,4923,1.237,4924,1.237,4925,1.237,4926,1.237,4927,1.237,4928,1.237,4929,2.161,4930,1.237,4931,1.237,4932,1.237,4933,1.237,4934,1.237,4935,1.237,4936,1.237,4937,2.161,4938,1.237,4939,1.237,4940,1.237,4941,1.237,4942,1.237,4943,1.237,4944,2.161,4945,2.161,4946,2.161,4947,1.237,4948,1.237,4949,1.237,4950,1.237,4951,1.237,4952,1.237,4953,1.237,4954,2.161,4955,1.237,4956,1.237,4957,1.237,4958,1.237,4959,1.237,4960,1.237,4961,2.161,4962,2.161,4963,1.237,4964,1.237,4965,1.237,4966,1.237,4967,1.237,4968,1.237,4969,1.237,4970,2.161,4971,1.237,4972,1.237,4973,1.237,4974,1.237,4975,1.237,4976,1.237,4977,1.237,4978,2.161,4979,1.237,4980,1.237,4981,1.237,4982,1.237,4983,1.237,4984,1.237,4985,2.161,4986,1.237,4987,1.237,4988,1.237,4989,1.237,4990,1.237,4991,1.237,4992,1.237,4993,1.237,4994,1.237,4995,1.237,4996,1.237,4997,1.237,4998,1.237,4999,1.237,5000,2.161,5001,1.237,5002,1.237,5003,1.237,5004,2.161,5005,1.237,5006,1.237,5007,2.161,5008,1.237,5009,1.237,5010,1.237,5011,1.237,5012,1.237,5013,2.161,5014,1.237,5015,1.237,5016,1.237,5017,1.237,5018,1.237,5019,1.237,5020,2.161,5021,1.237,5022,1.237,5023,1.237,5024,1.237,5025,1.237,5026,2.161,5027,1.237,5028,1.237,5029,1.237,5030,1.237,5031,1.237,5032,1.237,5033,2.161,5034,1.237,5035,1.237,5036,1.237,5037,1.237,5038,1.237,5039,1.237,5040,1.237,5041,1.237,5042,2.161,5043,1.237,5044,1.237,5045,1.237,5046,1.237,5047,1.237,5048,1.237,5049,2.161,5050,1.237,5051,1.237,5052,1.237,5053,1.237,5054,1.237,5055,1.237,5056,2.161,5057,1.237,5058,1.237,5059,1.237,5060,1.237,5061,1.237,5062,1.237,5063,2.161,5064,1.237,5065,1.237,5066,1.237,5067,1.237,5068,1.237,5069,1.237,5070,2.161,5071,1.237,5072,1.237,5073,1.237,5074,1.237,5075,2.161,5076,1.237,5077,2.161,5078,1.237,5079,1.237,5080,1.237,5081,1.237,5082,1.237,5083,1.237,5084,2.161,5085,1.237,5086,1.237,5087,1.237,5088,1.237,5089,2.161,5090,1.237,5091,2.161,5092,1.237,5093,1.237,5094,1.237,5095,1.237,5096,1.237,5097,1.237,5098,1.237,5099,2.161,5100,1.237,5101,1.237,5102,1.237,5103,1.237,5104,1.237,5105,1.237,5106,1.237,5107,2.877,5108,1.237,5109,1.237,5110,1.237,5111,1.237,5112,1.237,5113,1.237,5114,2.161,5115,1.237,5116,1.237,5117,1.237,5118,1.237,5119,1.237,5120,1.237,5121,2.161,5122,1.237,5123,1.237,5124,1.237,5125,1.237,5126,1.237,5127,1.237,5128,2.161,5129,1.237,5130,1.237,5131,2.877,5132,1.237,5133,1.237,5134,1.237,5135,2.161,5136,1.237,5137,1.237,5138,1.237,5139,1.237,5140,1.237,5141,2.161,5142,1.237,5143,1.237,5144,1.237,5145,1.237,5146,1.237,5147,1.237,5148,2.161,5149,1.237,5150,1.237,5151,1.237,5152,1.237,5153,1.237,5154,1.237,5155,2.161,5156,1.237,5157,1.237,5158,1.237,5159,2.161,5160,2.161,5161,1.237,5162,2.161,5163,1.237,5164,1.237,5165,1.237,5166,1.237,5167,1.237,5168,1.237,5169,1.237,5170,2.161,5171,1.237,5172,1.237,5173,1.237,5174,1.237,5175,1.237,5176,1.237,5177,1.237,5178,2.161,5179,1.237,5180,1.237,5181,1.237,5182,1.237,5183,1.237,5184,1.237,5185,1.237,5186,2.161,5187,1.237,5188,1.237,5189,1.237,5190,1.237,5191,1.237,5192,1.237,5193,2.161,5194,1.237,5195,1.237,5196,1.237,5197,1.237,5198,1.237,5199,1.237,5200,1.237,5201,2.161,5202,1.237,5203,1.237,5204,1.237,5205,1.237,5206,1.237,5207,1.237,5208,2.161,5209,1.237,5210,1.237,5211,1.237,5212,1.237,5213,1.237,5214,1.237,5215,1.237,5216,2.161,5217,1.237,5218,1.237,5219,1.237,5220,1.237,5221,1.237,5222,1.237,5223,1.237,5224,2.161,5225,1.237,5226,1.237,5227,1.237,5228,2.877,5229,1.237,5230,1.237,5231,1.237,5232,1.237,5233,1.237,5234,1.237,5235,1.237,5236,1.237,5237,2.161,5238,1.237,5239,1.237,5240,2.161,5241,1.237,5242,1.237,5243,1.237,5244,1.237,5245,1.237,5246,2.161,5247,1.237,5248,1.237,5249,1.237,5250,1.237,5251,1.237,5252,1.237,5253,2.161,5254,1.237,5255,1.237,5256,1.237,5257,1.237,5258,1.237,5259,1.237,5260,1.237,5261,1.237,5262,1.237,5263,1.237,5264,1.237,5265,1.237,5266,1.237,5267,1.237,5268,1.237,5269,1.237,5270,1.237,5271,1.237,5272,2.161,5273,1.237,5274,1.237,5275,1.237,5276,1.237,5277,1.237,5278,1.237,5279,2.161,5280,1.237,5281,1.237,5282,1.237,5283,1.237,5284,1.237,5285,1.237,5286,1.237,5287,1.237,5288,2.161,5289,1.237,5290,1.237,5291,1.237,5292,1.237,5293,1.237,5294,1.237,5295,2.161,5296,1.237,5297,1.237,5298,1.237,5299,1.237,5300,1.237,5301,1.237,5302,1.237,5303,1.237,5304,2.161,5305,2.161,5306,1.237,5307,1.237,5308,1.237,5309,1.237,5310,1.237,5311,2.161,5312,1.237,5313,1.237,5314,2.161,5315,2.161,5316,2.161,5317,3.449,5318,2.161,5319,2.161,5320,2.161,5321,1.237,5322,1.237,5323,2.161,5324,1.237,5325,1.237,5326,1.237,5327,2.161,5328,1.237,5329,1.237,5330,2.161,5331,3.917,5332,1.237,5333,1.237,5334,2.161,5335,1.237,5336,1.237,5337,2.161,5338,1.237,5339,1.237,5340,1.237,5341,1.237,5342,1.237,5343,1.237,5344,1.237,5345,1.237,5346,1.237,5347,1.237,5348,1.237,5349,1.237,5350,2.161,5351,1.237,5352,1.237,5353,1.237,5354,1.237,5355,1.237,5356,2.161,5357,1.237,5358,1.237,5359,1.237,5360,1.237,5361,1.237,5362,1.237,5363,2.161,5364,2.161,5365,1.237,5366,1.237,5367,1.237,5368,1.237,5369,1.237,5370,1.237,5371,2.161,5372,1.237,5373,1.237,5374,2.161,5375,1.237,5376,1.237,5377,1.237,5378,1.237,5379,1.237,5380,2.161,5381,1.237,5382,1.237,5383,1.237,5384,1.237,5385,1.237,5386,1.237,5387,1.237,5388,2.161,5389,1.237,5390,1.237,5391,1.237,5392,2.877,5393,1.237,5394,1.237,5395,1.237,5396,1.237,5397,1.237,5398,2.877,5399,1.237,5400,1.237,5401,1.237,5402,1.237,5403,1.237,5404,2.877,5405,1.237,5406,1.237,5407,1.237,5408,1.237,5409,1.237,5410,1.237,5411,1.237,5412,1.237,5413,2.161,5414,1.237,5415,1.237,5416,1.237,5417,1.237,5418,1.237,5419,1.237,5420,2.161,5421,1.237,5422,1.237,5423,1.237,5424,1.237,5425,2.877,5426,2.877,5427,2.877,5428,2.161,5429,1.237]],["title/components/viewCardDetailsComponent.html",[0,0.247,139,0.376]],["body/components/viewCardDetailsComponent.html",[0,0.392,1,0.334,2,0.473,3,0.112,4,0.112,5,0.371,6,0.352,7,0.371,8,0.139,10,0.371,11,0.789,12,0.706,14,0.549,15,0.491,16,0.579,19,0.549,21,0.251,22,0.015,23,0.098,26,0.179,27,0.179,30,0.371,32,0.371,33,0.525,34,0.525,35,0.371,36,0.663,37,0.371,38,0.226,39,0.371,40,0.334,41,0.232,42,0.371,43,0.316,44,0.371,45,0.334,46,0.61,47,0.371,48,0.473,49,0.525,50,0.334,51,0.216,52,0.282,53,0.525,54,0.473,55,0.371,56,0.716,57,0.663,58,0.334,59,0.371,60,0.334,61,0.371,62,0.334,63,0.352,64,0.61,65,0.334,66,0.371,67,0.334,68,0.371,69,0.316,70,0.371,71,0.423,72,0.525,73,0.316,74,0.263,75,0.371,76,0.316,77,0.371,78,0.334,79,0.371,80,0.334,81,0.352,82,0.371,83,0.334,84,0.371,85,0.334,86,0.499,87,0.371,88,0.334,89,0.371,90,0.334,91,0.371,92,0.334,93,0.334,94,0.334,95,0.371,96,0.334,97,0.371,98,0.334,99,0.371,100,0.448,101,0.546,102,0.525,103,0.352,104,0.525,105,0.334,106,0.334,107,0.371,108,0.334,109,0.371,110,0.334,111,0.352,112,0.371,113,0.334,114,0.334,115,0.371,116,0.334,117,0.334,118,0.334,119,0.334,120,0.371,121,0.334,122,0.371,123,0.334,124,0.299,125,0.334,126,0.352,127,0.371,128,0.352,129,0.371,130,0.334,131,0.371,132,0.334,133,0.371,134,0.334,135,0.375,136,0.334,137,0.334,138,0.371,139,0.598,140,0.71,141,0.334,142,0.371,143,0.334,144,0.371,145,0.371,146,0.009,147,0.009,151,1.402,152,1.469,155,0.99,157,0.112,158,0.329,160,1.438,162,0.33,165,0.232,166,0.776,171,1.848,174,1.423,176,1.695,195,0.996,197,0.199,198,1.479,205,0.201,206,0.216,209,0.356,220,0.534,230,0.534,281,1.244,293,1.169,320,0.534,333,1.758,334,2.761,338,1.067,342,1.569,347,2.063,348,1.151,351,1.656,356,2.266,365,1.848,370,1.822,371,1.8,372,2.192,374,2.344,375,1.949,416,2.761,418,1.008,419,1.494,422,1.695,423,1.348,425,1.348,427,0.534,429,0.791,430,1.348,435,0.99,455,2.754,456,2.618,457,2.761,458,2.059,459,1.039,460,3.105,461,2.167,462,2.49,463,1,464,3.059,465,3.059,466,3.059,467,1.695,468,2.192,469,1.848,470,1.909,471,1.949,472,2.344,475,2.526,476,3.059,477,2.526,479,2.526,483,2.526,485,3.577,487,2.754,493,3.059,497,3.059,499,2.754,500,3.059,502,3.059,503,3.059,505,2.526,506,3.059,508,1.244,512,2.891,513,1.6,514,2.754,515,2.754,516,2.192,517,4.529,518,2.526,519,1.949,520,2.526,521,2.063,523,1.675,526,2.526,528,2.192,529,2.754,530,1.848,531,1.949,532,0.734,533,2.192,534,1.758,535,1.758,536,1.027,537,3.059,538,2.526,539,2.344,540,2.526,541,2.526,542,1.53,543,0.604,544,5.03,545,3.059,546,2.344,547,2.618,548,3.059,549,1.6,550,2.344,551,3.487,552,4.154,553,2.526,554,2.526,555,3.606,556,1.244,557,1.405,558,3.059,559,3.059,560,2.526,561,2.49,562,2.192,563,1.949,564,2.192,565,2.192,566,1.758,567,1.848,568,3.059,569,3.577,570,3.577,571,3.059,572,1.949,573,2.526,574,2.526,575,2.526,576,2.526,577,2.526,578,2.526,579,2.344,580,3.059,581,1.848,582,3.577,583,1.197,584,2.761,585,2.192,586,1.848,587,3.577,588,2.526,589,3.577,590,3.059,591,3.577,592,2.526,593,3.059,594,3.577,595,2.526,596,2.526,597,1.695,598,3.059,599,3.059,600,3.059,601,1.949,602,4.332,603,2.49,604,3.059,605,3.059,610,1.762,612,3.9,614,3.32,615,2.862,619,2.922,720,2.49,5430,3.522,5431,3.522,5432,3.522,5433,4.988,5434,4.988,5435,4.988,5436,4.988,5437,4.988,5438,4.988]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["0",{"_index":1193,"title":{},"body":{"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/ProfileComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":3750,"title":{},"body":{"properties.html":{}}}],["0.12.7",{"_index":3627,"title":{},"body":{"dependencies.html":{}}}],["0.14.3",{"_index":3637,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":3548,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3559,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3570,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3557,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3561,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":3580,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":3567,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3558,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":3576,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":3560,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3550,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":3568,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":3579,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":3577,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":3582,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3575,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3569,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3581,"title":{},"body":{"coverage.html":{}}}],["0/51",{"_index":3563,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3578,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3549,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3566,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3571,"title":{},"body":{"coverage.html":{}}}],["0123456789",{"_index":2406,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["1",{"_index":597,"title":{"components/HeaderComponent-1.html":{},"components/PasswordChangeComponent-1.html":{}},"body":{"components/CardComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent-1.html":{},"components/NotesComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/ViewNoteCompoent.html":{},"index.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["1.0",{"_index":1068,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["1.0.1",{"_index":3615,"title":{},"body":{"dependencies.html":{}}}],["1.13.12",{"_index":3623,"title":{},"body":{"dependencies.html":{}}}],["1.7.1",{"_index":3617,"title":{},"body":{"dependencies.html":{}}}],["1.7.2",{"_index":3607,"title":{},"body":{"dependencies.html":{}}}],["1/34",{"_index":3574,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2394,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"injectables/PlanService.html":{}}}],["10.0.0",{"_index":3635,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"interfaces/Window.html":{}}}],["10px",{"_index":1085,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["11.0.0",{"_index":3625,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1442,"title":{},"body":{"components/IdproofformComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["13",{"_index":3749,"title":{},"body":{"overview.html":{}}}],["14",{"_index":2689,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["15.0.0",{"_index":3599,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":2375,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["18.0.0",{"_index":3590,"title":{},"body":{"dependencies.html":{}}}],["18.0.3",{"_index":3594,"title":{},"body":{"dependencies.html":{}}}],["18.0.4",{"_index":3592,"title":{},"body":{"dependencies.html":{}}}],["1px",{"_index":3036,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["2",{"_index":1069,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SecurityComponent.html":{},"coverage.html":{},"index.html":{}}}],["2.0.1",{"_index":3630,"title":{},"body":{"dependencies.html":{}}}],["2.0.10",{"_index":3608,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":3616,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":3604,"title":{},"body":{"dependencies.html":{}}}],["2/24",{"_index":3572,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2654,"title":{},"body":{"components/PasswordStrengthComponent.html":{},"miscellaneous/variables.html":{}}}],["2000",{"_index":1003,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{},"components/OrganizationComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{}}}],["2024",{"_index":1284,"title":{},"body":{"components/FooterComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["20px",{"_index":1078,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["220",{"_index":5244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["221",{"_index":5133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["223",{"_index":5199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["225",{"_index":5126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["226",{"_index":5214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["227",{"_index":5206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["228",{"_index":5119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["230",{"_index":5191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["231",{"_index":5112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["232",{"_index":5105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["233",{"_index":5047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["234",{"_index":1281,"title":{},"body":{"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["235",{"_index":5146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["236",{"_index":5153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["237",{"_index":5139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["239",{"_index":5238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24.13.3",{"_index":3612,"title":{},"body":{"dependencies.html":{}}}],["240",{"_index":5184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["241",{"_index":5176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["242",{"_index":5160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["243",{"_index":5168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["244",{"_index":5054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["246",{"_index":5315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["248",{"_index":5258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["249",{"_index":5005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["250",{"_index":5040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["252",{"_index":4998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["253",{"_index":5229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["254",{"_index":5018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["255",{"_index":5031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["256",{"_index":2862,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["257",{"_index":5222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["260",{"_index":5061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["263",{"_index":5011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["264",{"_index":5075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["265",{"_index":5097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["266",{"_index":5082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["267",{"_index":5068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["268",{"_index":5089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["269",{"_index":5251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27",{"_index":4509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29",{"_index":2833,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["2fa",{"_index":3655,"title":{},"body":{"index.html":{}}}],["3",{"_index":2389,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"overview.html":{}}}],["3.0.0",{"_index":3633,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":4697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300",{"_index":2952,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["3000",{"_index":1656,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["300ms",{"_index":2280,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["31",{"_index":4517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":4472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":4525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["345",{"_index":5328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["351",{"_index":4727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["353",{"_index":4681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["354",{"_index":4720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["355",{"_index":4809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["358",{"_index":4705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["36",{"_index":4713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["370",{"_index":4749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["371",{"_index":4742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["372",{"_index":4734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["373",{"_index":4816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["374",{"_index":4823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["381",{"_index":4770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["382",{"_index":4794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["385",{"_index":4778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["386",{"_index":4763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["387",{"_index":4786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["389",{"_index":4802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39",{"_index":4495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1515,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PrivacyPolicyComponent.html":{}}}],["4.2.0",{"_index":3609,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":3638,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":2655,"title":{},"body":{"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{}}}],["400px",{"_index":1981,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["420",{"_index":4690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["421",{"_index":4756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":4173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46",{"_index":4547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47",{"_index":4554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["473",{"_index":5309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49",{"_index":4458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":1504,"title":{},"body":{"components/IndexComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["5.17.14",{"_index":3632,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":3748,"title":{},"body":{"overview.html":{}}}],["500",{"_index":2388,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["500px",{"_index":550,"title":{},"body":{"components/CardComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/OrganizationsComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["501",{"_index":5418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["502",{"_index":5405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["503",{"_index":5399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["504",{"_index":5411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["505",{"_index":5378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["506",{"_index":5386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["507",{"_index":5393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["509",{"_index":5361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52",{"_index":4489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["53",{"_index":5372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54",{"_index":4560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["55",{"_index":4481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56",{"_index":4569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["567",{"_index":1282,"title":{},"body":{"components/FooterComponent.html":{}}}],["5gv04444vf2894031m3vr2my",{"_index":2736,"title":{},"body":{"injectables/PlanService.html":{}}}],["5px",{"_index":1303,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["6",{"_index":1528,"title":{},"body":{"components/IndexComponent.html":{},"injectables/PlanService.html":{},"components/PrivacyPolicyComponent.html":{}}}],["6.6.0",{"_index":3598,"title":{},"body":{"dependencies.html":{}}}],["6.7.0",{"_index":3620,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2656,"title":{},"body":{"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"miscellaneous/variables.html":{}}}],["60.00/year",{"_index":442,"title":{},"body":{"components/BillingDetailsComponent.html":{}}}],["600px",{"_index":806,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["61",{"_index":4392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62",{"_index":4594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["63",{"_index":4586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64",{"_index":4540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["649",{"_index":5335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65",{"_index":4578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66",{"_index":4602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["673",{"_index":4942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["683760842y234025bm3wgq6y",{"_index":2740,"title":{},"body":{"injectables/PlanService.html":{}}}],["6xr17625jv867584nm3wgf7i",{"_index":2734,"title":{},"body":{"injectables/PlanService.html":{}}}],["7",{"_index":1537,"title":{},"body":{"components/IndexComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":3631,"title":{},"body":{"dependencies.html":{}}}],["758",{"_index":5293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["767",{"_index":5286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["767px",{"_index":1297,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["768px",{"_index":1291,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["784",{"_index":5302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["787",{"_index":5348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1707,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["8.0.0",{"_index":3602,"title":{},"body":{"dependencies.html":{}}}],["8.41.1",{"_index":3605,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2658,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["800px",{"_index":3378,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["8080:8080",{"_index":946,"title":{},"body":{"components/DownloadComponent.html":{}}}],["809",{"_index":5355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81",{"_index":4451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["84",{"_index":4611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["855",{"_index":4959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["856",{"_index":4968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85r761525x622673pm3wgotq",{"_index":2739,"title":{},"body":{"injectables/PlanService.html":{}}}],["869",{"_index":5277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["876",{"_index":5341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["880",{"_index":4628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["890",{"_index":1283,"title":{},"body":{"components/FooterComponent.html":{}}}],["8px",{"_index":3040,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["9",{"_index":2881,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["90",{"_index":4533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91",{"_index":4200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92",{"_index":4621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93233881xj483274hm3wgpga",{"_index":2738,"title":{},"body":{"injectables/PlanService.html":{}}}],["94",{"_index":4991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95",{"_index":4952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["959072281u895714bm3wgqca",{"_index":2742,"title":{},"body":{"injectables/PlanService.html":{}}}],["960",{"_index":4935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["961",{"_index":4899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["962",{"_index":4913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["963",{"_index":4906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["965",{"_index":4893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["966",{"_index":4649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["967",{"_index":4920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["968",{"_index":4879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["971",{"_index":4657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["972",{"_index":4664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["973",{"_index":4886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9733",{"_index":1566,"title":{},"body":{"components/IndexComponent.html":{}}}],["9734",{"_index":1567,"title":{},"body":{"components/IndexComponent.html":{}}}],["974",{"_index":4871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["975",{"_index":4927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["976",{"_index":4976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["977",{"_index":4983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["992",{"_index":4857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["993",{"_index":4864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["995",{"_index":4829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["996",{"_index":4849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["998",{"_index":4842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]/.test(password",{"_index":2652,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["9]{12",{"_index":1430,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["9]{16",{"_index":757,"title":{},"body":{"components/CreditCardFormComponent.html":{}}}],["9]{3,4",{"_index":758,"title":{},"body":{"components/CreditCardFormComponent.html":{}}}],["9]{4}[a",{"_index":1433,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["_",{"_index":2329,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/TagFormCompoent.html":{}}}],["_filter",{"_index":3135,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["_filter(value",{"_index":3140,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["_id",{"_index":513,"title":{},"body":{"components/CardComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["_search",{"_index":2573,"title":{},"body":{"injectables/PasswordService.html":{}}}],["_userprofilesubject",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["a.click",{"_index":578,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["a.download",{"_index":576,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["a.href",{"_index":575,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["aadhar",{"_index":1444,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["aadharcard",{"_index":1416,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["abad",{"_index":4854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abbreviation",{"_index":3837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abcde1234f",{"_index":1446,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["abcdefghijklmnopqrstuvwxyz",{"_index":2408,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_",{"_index":2320,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["aberdeen",{"_index":4111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abidjan",{"_index":5129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absolutely",{"_index":2671,"title":{},"body":{"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{}}}],["abstractcontrol",{"_index":2264,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["abu",{"_index":4659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abéch",{"_index":5151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acc",{"_index":3017,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["acc[roleobj.rolename",{"_index":3024,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["accept",{"_index":1595,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["accept'},{'name",{"_index":82,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["accept.component.css",{"_index":1597,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["accept.component.html",{"_index":1598,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["accept.component.ts",{"_index":1594,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"coverage.html":{}}}],["accept.component.ts:36",{"_index":1619,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["accept.component.ts:37",{"_index":1615,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["accept.component.ts:38",{"_index":1616,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["accept.component.ts:39",{"_index":1618,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["accept.component.ts:40",{"_index":1620,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["accept.component.ts:41",{"_index":1608,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["accept.component.ts:55",{"_index":1609,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["accept.component.ts:62",{"_index":1613,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["accept.component.ts:68",{"_index":1611,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["accept.component.ts:81",{"_index":1610,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["accept/invitation",{"_index":1593,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"coverage.html":{}}}],["accepted",{"_index":1645,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["access",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"components/DownloadComponent.html":{},"components/FileUploadComponent.html":{},"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["accessibility",{"_index":2490,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"index.html":{}}}],["accessible",{"_index":3701,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":2964,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["accidental",{"_index":3670,"title":{},"body":{"index.html":{}}}],["account",{"_index":1005,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{}}}],["account_box",{"_index":3246,"title":{},"body":{"components/SideNavComponent.html":{}}}],["accounts",{"_index":1487,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{}}}],["accra",{"_index":5049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accurately",{"_index":1833,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["aconibe",{"_index":5189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["act",{"_index":4438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":521,"title":{},"body":{"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/DashboardComponent.html":{},"components/NotesComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["actions",{"_index":1045,"title":{},"body":{"components/FileExplorerComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/MfaSettingComponent.html":{}}}],["activate",{"_index":1452,"title":{},"body":{"components/IndexComponent.html":{}}}],["activatedroute",{"_index":1458,"title":{},"body":{"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SideNavComponent.html":{}}}],["activateroute",{"_index":1856,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["activaterouter",{"_index":773,"title":{},"body":{"components/DashboardComponent.html":{}}}],["activeroute",{"_index":2115,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["activity",{"_index":3266,"title":{},"body":{"components/SupportComponent.html":{}}}],["actual_component",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["adapt",{"_index":3698,"title":{},"body":{"index.html":{}}}],["add",{"_index":607,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DownloadComponent.html":{},"components/FileExplorerComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["add_circle_outline",{"_index":606,"title":{},"body":{"components/CardComponent.html":{},"components/FileExplorerComponent.html":{},"components/IdProofComponent.html":{},"components/NotesComponent.html":{}}}],["addcomment",{"_index":2994,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/ViewPasswordComponent.html":{}}}],["added",{"_index":581,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordFormComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["adding",{"_index":585,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["additional",{"_index":665,"title":{},"body":{"injectables/CardService.html":{},"components/DownloadComponent.html":{},"components/MfaSettingComponent.html":{},"injectables/NoteService.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"index.html":{}}}],["addorganization",{"_index":2044,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["addpassword",{"_index":2227,"title":{},"body":{"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/TagFormCompoent.html":{}}}],["addpassword(newpasswordobject",{"_index":2315,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["addpassword(password",{"_index":2557,"title":{},"body":{"injectables/PasswordService.html":{}}}],["address",{"_index":619,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/EditProfileComponent.html":{},"components/MfaSettingComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["addresses",{"_index":2843,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["addtag",{"_index":2333,"title":{},"body":{"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/TagFormCompoent.html":{},"components/ViewPasswordComponent.html":{}}}],["addtag(payload",{"_index":2559,"title":{},"body":{"injectables/PasswordService.html":{}}}],["addtagtopassword",{"_index":2549,"title":{},"body":{"injectables/PasswordService.html":{}}}],["addtagtopassword(passwordid",{"_index":2561,"title":{},"body":{"injectables/PasswordService.html":{}}}],["addtofavorites",{"_index":628,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/PasswordService.html":{}}}],["addtofavorites(cardids",{"_index":637,"title":{},"body":{"injectables/CardService.html":{}}}],["addtofavorites(noteid",{"_index":1886,"title":{},"body":{"injectables/NoteService.html":{}}}],["addtofavorites(passwordid",{"_index":2563,"title":{},"body":{"injectables/PasswordService.html":{}}}],["addu",{"_index":4938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adduser",{"_index":2976,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["adelaide",{"_index":4423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aden",{"_index":4923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adjust",{"_index":1245,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{}}}],["admiiin",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{}}}],["admiiin'},{'name",{"_index":39,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["admin",{"_index":1812,"title":{},"body":{"components/MfaSettingComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SupportComponent.html":{},"components/UserProfileComponent.html":{}}}],["admin.component.html",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin_panel_settings",{"_index":1324,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["admincomponent",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["administration",{"_index":1325,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["administrator",{"_index":958,"title":{},"body":{"components/DownloadComponent.html":{}}}],["advanced",{"_index":440,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/IndexComponent.html":{},"index.html":{}}}],["advantage",{"_index":888,"title":{},"body":{"components/DownloadComponent.html":{}}}],["aes",{"_index":2266,"title":{},"body":{"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/PrivacyPolicyComponent.html":{},"components/TagFormCompoent.html":{}}}],["aes.decrypt",{"_index":2611,"title":{},"body":{"injectables/PasswordService.html":{}}}],["aes.encrypt",{"_index":2306,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["afg",{"_index":3799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afghanistan",{"_index":3797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["africa",{"_index":4508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["african",{"_index":5152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agadez",{"_index":5211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["again",{"_index":676,"title":{},"body":{"injectables/CardService.html":{},"components/MfaSettingComponent.html":{},"injectables/NoteService.html":{},"injectables/ProofIdService.html":{}}}],["against",{"_index":2676,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["agartala",{"_index":4367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ago",{"_index":5055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agra",{"_index":4374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agree",{"_index":2840,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{}}}],["agreetopolicies",{"_index":3258,"title":{},"body":{"components/SupportComponent.html":{}}}],["ahmadi",{"_index":4895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ahmedabad",{"_index":4246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aia",{"_index":5265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aires",{"_index":4563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airport",{"_index":5284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aizawl",{"_index":4315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ajloun",{"_index":4918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ajman",{"_index":4662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ajmer",{"_index":4344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ak",{"_index":3844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["akron",{"_index":4079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["akureyri",{"_index":4725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["al",{"_index":3838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alabama",{"_index":3836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alajuela",{"_index":5389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alam",{"_index":4676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alaska",{"_index":3843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alb",{"_index":4810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["albania",{"_index":4808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["albuquerque",{"_index":4048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alcal",{"_index":4528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aleppo",{"_index":4909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alerts",{"_index":1533,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordStrengthComponent.html":{},"index.html":{}}}],["alexandria",{"_index":4643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algorithm",{"_index":3662,"title":{},"body":{"index.html":{}}}],["algorithms",{"_index":3738,"title":{},"body":{"index.html":{}}}],["ali",{"_index":5231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alice",{"_index":4446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":1081,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/RolesPermissionsComponent.html":{}}}],["alkmaar",{"_index":4523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allentown",{"_index":4094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alleviate",{"_index":2534,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["allow",{"_index":2855,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["allows",{"_index":1520,"title":{},"body":{"components/IndexComponent.html":{}}}],["almaty",{"_index":4837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alto",{"_index":4574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["always",{"_index":885,"title":{},"body":{"components/DownloadComponent.html":{}}}],["amadora",{"_index":4731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ambassa",{"_index":4368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["american",{"_index":764,"title":{},"body":{"components/CreditCardFormComponent.html":{}}}],["amman",{"_index":4915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amount",{"_index":2728,"title":{},"body":{"injectables/PlanService.html":{},"components/UserProfileComponent.html":{}}}],["ample",{"_index":2511,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["amritsar",{"_index":4336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amsterdam",{"_index":4520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ana",{"_index":5401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["analyze",{"_index":2857,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["analyzer",{"_index":1534,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["analyzes",{"_index":2675,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["anchorage",{"_index":3845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["andhra",{"_index":4202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["andijan",{"_index":4847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["andkhoy",{"_index":3829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["andr",{"_index":4487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angeles",{"_index":3867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angola",{"_index":5053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anguilla",{"_index":5264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":3362,"title":{},"body":{"components/UserProfileComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":3589,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3591,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/clipboard",{"_index":2398,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["angular/cdk/collections",{"_index":541,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["angular/cdk/keycodes",{"_index":2270,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["angular/cdk/layout",{"_index":795,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["angular/common",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{},"components/viewCardDetailsComponent.html":{}}}],["angular/common/http",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"injectables/NoteService.html":{},"injectables/OrganizationService.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{}}}],["angular/compiler",{"_index":3593,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":23,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{},"components/viewCardDetailsComponent.html":{}}}],["angular/forms",{"_index":543,"title":{},"body":{"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"dependencies.html":{},"components/viewCardDetailsComponent.html":{}}}],["angular/material",{"_index":3595,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":749,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{}}}],["angular/material/button",{"_index":427,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["angular/material/card",{"_index":428,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/PasswordChangeComponent.html":{},"components/SecurityComponent.html":{}}}],["angular/material/checkbox",{"_index":542,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["angular/material/chips",{"_index":750,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{}}}],["angular/material/core",{"_index":752,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/IdproofformComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotificationComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{}}}],["angular/material/dialog",{"_index":536,"title":{},"body":{"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["angular/material/expansion",{"_index":2644,"title":{},"body":{"components/PasswordStrengthComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["angular/material/form",{"_index":710,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{}}}],["angular/material/icon",{"_index":429,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["angular/material/input",{"_index":532,"title":{},"body":{"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["angular/material/list",{"_index":799,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{}}}],["angular/material/menu",{"_index":534,"title":{},"body":{"components/CardComponent.html":{},"components/DashboardComponent.html":{},"components/FileExplorerComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["angular/material/paginator",{"_index":533,"title":{},"body":{"components/CardComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/OrganizationsComponent.html":{},"components/UsersComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["angular/material/progress",{"_index":1699,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["angular/material/radio",{"_index":2403,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PricingPageComponent.html":{}}}],["angular/material/select",{"_index":751,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotificationComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/UserFormComponent.html":{}}}],["angular/material/sidenav",{"_index":24,"title":{},"body":{"components/AdminComponent.html":{},"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["angular/material/slide",{"_index":1762,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["angular/material/slider",{"_index":1761,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["angular/material/snack",{"_index":800,"title":{},"body":{"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{}}}],["angular/material/sort",{"_index":531,"title":{},"body":{"components/CardComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["angular/material/stepper",{"_index":1622,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{}}}],["angular/material/table",{"_index":530,"title":{},"body":{"components/CardComponent.html":{},"components/FileExplorerComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["angular/material/toolbar",{"_index":712,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{}}}],["angular/platform",{"_index":3367,"title":{},"body":{"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SideNavComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{}}}],["ann",{"_index":3991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anse",{"_index":5261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["answer",{"_index":3095,"title":{},"body":{"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/SupportComponent.html":{}}}],["answers",{"_index":3100,"title":{},"body":{"components/SecurityComponent.html":{}}}],["antigua",{"_index":5269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["antonio",{"_index":4124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anyone",{"_index":3277,"title":{},"body":{"components/SupportComponent.html":{}}}],["anywhere",{"_index":1557,"title":{},"body":{"components/IndexComponent.html":{}}}],["ap",{"_index":4204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":41,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["api_url",{"_index":5427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apidocscomponent",{"_index":40,"title":{"components/ApiDocsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["apiinterceptor",{"_index":3547,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apis",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiurl",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/FileService.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"injectables/NoteService.html":{},"injectables/OrganizationService.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["app.component.html",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["appcomponent",{"_index":43,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["appconfig",{"_index":3554,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicable",{"_index":3674,"title":{},"body":{"index.html":{}}}],["application",{"_index":938,"title":{},"body":{"components/DownloadComponent.html":{},"components/MfaSettingComponent.html":{},"components/SupportComponent.html":{},"index.html":{},"properties.html":{}}}],["applicationconfig",{"_index":3768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":939,"title":{},"body":{"components/DownloadComponent.html":{},"components/MfaSettingComponent.html":{},"components/PasswordGenratorComponent.html":{},"index.html":{}}}],["applyfilter",{"_index":3417,"title":{},"body":{"components/UsersComponent.html":{}}}],["applyfilter(event",{"_index":3421,"title":{},"body":{"components/UsersComponent.html":{}}}],["appropriate",{"_index":1816,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/ShareDialogComponent.html":{}}}],["apt",{"_index":926,"title":{},"body":{"components/DownloadComponent.html":{}}}],["ar",{"_index":3858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arab",{"_index":4655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arabia",{"_index":4648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arbor",{"_index":3992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arg",{"_index":4561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arg0",{"_index":1031,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/IdProofComponent.html":{}}}],["argentina",{"_index":4559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arises",{"_index":2514,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["arizona",{"_index":3850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arkansas",{"_index":3857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arm",{"_index":4824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["armenia",{"_index":4822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":2436,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["array(this.length",{"_index":2415,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["arrow",{"_index":4084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["art",{"_index":2860,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["articles",{"_index":1492,"title":{},"body":{"components/IndexComponent.html":{}}}],["arunachal",{"_index":4210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arusha",{"_index":5037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asansol",{"_index":4388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ashgabat",{"_index":4866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asked",{"_index":3296,"title":{},"body":{"components/SupportComponent.html":{}}}],["assam",{"_index":4216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets",{"_index":2492,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["assign",{"_index":3286,"title":{},"body":{"components/SupportComponent.html":{}}}],["assistance",{"_index":3299,"title":{},"body":{"components/SupportComponent.html":{}}}],["assuming",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"components/LoginComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/PasswordService.html":{},"components/ViewNoteCompoent.html":{}}}],["astana",{"_index":4838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atakpam",{"_index":5124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atg",{"_index":5271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["athens",{"_index":4700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atlanta",{"_index":3904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atob(token",{"_index":2148,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["attach_file",{"_index":1231,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["attach_money",{"_index":1342,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["attempt",{"_index":2516,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["attempts",{"_index":2462,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["attica",{"_index":4699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["au",{"_index":5363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auburn",{"_index":3969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auckland",{"_index":4542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["augsburg",{"_index":4463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["augusta",{"_index":3905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aurangabad",{"_index":4299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aurora",{"_index":3877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aus",{"_index":4393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["austin",{"_index":4126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["australia",{"_index":4391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["australian",{"_index":4435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth",{"_index":1665,"title":{},"body":{"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["auth/login",{"_index":3794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth/login?username=${route.queryparams['username']}&password=${route.queryparams['password",{"_index":3793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticate",{"_index":1490,"title":{},"body":{"components/IndexComponent.html":{}}}],["authenticated",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":1531,"title":{},"body":{"components/IndexComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/ProfileComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["authguard",{"_index":3556,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["authrequest",{"_index":3761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authroutes",{"_index":3782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authroutes.some(route",{"_index":3784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice",{"_index":199,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/ResetPasswordComponent.html":{},"components/ShareDialogComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["auto",{"_index":1090,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/IndexComponent.html":{}}}],["autofill",{"_index":1479,"title":{},"body":{"components/IndexComponent.html":{},"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["automatically",{"_index":2537,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"index.html":{}}}],["available",{"_index":2528,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["availablepermissions",{"_index":3133,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["aviv",{"_index":4667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avoid",{"_index":2451,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{}}}],["awareness",{"_index":3310,"title":{},"body":{"components/SupportComponent.html":{}}}],["axios",{"_index":3606,"title":{},"body":{"dependencies.html":{}}}],["az",{"_index":3851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["back",{"_index":722,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/PasswordChangeComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["backend",{"_index":2319,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["background",{"_index":3041,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["backup",{"_index":876,"title":{},"body":{"components/DownloadComponent.html":{}}}],["bad",{"_index":672,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/ProofIdService.html":{}}}],["badagry",{"_index":4638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["badakhshan",{"_index":3818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bafoussam",{"_index":5144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baghlan",{"_index":3821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bago",{"_index":4957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bahamas",{"_index":5321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bahrain",{"_index":4885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baidoa",{"_index":5003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bali",{"_index":4596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["balkanabat",{"_index":4869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["balkh",{"_index":3812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ballarat",{"_index":4406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baltimore",{"_index":3972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bamako",{"_index":5201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bandar",{"_index":4944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["banfora",{"_index":5220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bangkok",{"_index":4604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bangladesh",{"_index":4627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bangor",{"_index":3968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bangui",{"_index":5155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["banjul",{"_index":5246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":801,"title":{},"body":{"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{}}}],["barbados",{"_index":5314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["barbuda",{"_index":5270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["barre",{"_index":4140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["barrouallie",{"_index":5306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["barry",{"_index":4191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64",{"_index":2150,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["based",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/MfaSettingComponent.html":{},"components/SideNavComponent.html":{},"index.html":{}}}],["basic",{"_index":2649,"title":{},"body":{"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{}}}],["basseterre",{"_index":5279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bassin",{"_index":5194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bata",{"_index":5187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bathsheba",{"_index":5320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["batok",{"_index":4584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baton",{"_index":3960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["battambang",{"_index":4965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["batumi",{"_index":4834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bavaria",{"_index":4460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bay",{"_index":4163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bayamon",{"_index":5351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":3654,"title":{},"body":{"index.html":{}}}],["bdi",{"_index":5223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beach",{"_index":4143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearer",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["beau",{"_index":5193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["becomes",{"_index":2480,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["before",{"_index":2864,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["begawan",{"_index":4946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behaviorsubject",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/PasswordService.html":{},"injectables/RolesPermissionsService.html":{}}}],["behaviorsubject(false",{"_index":685,"title":{},"body":{"injectables/CommonService.html":{}}}],["behaviorsubject(null",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["behsud",{"_index":3817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["being",{"_index":2865,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["beirut",{"_index":4901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belait",{"_index":4948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belconnen",{"_index":4443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belfast",{"_index":4195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belgrade",{"_index":4772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["believe",{"_index":2507,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["belize",{"_index":5417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bellevue",{"_index":4024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belmopan",{"_index":5420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belonia",{"_index":4370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["below",{"_index":909,"title":{},"body":{"components/DownloadComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{}}}],["bend",{"_index":3933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bender",{"_index":4820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bendigo",{"_index":4407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["benefits",{"_index":1545,"title":{},"body":{"components/IndexComponent.html":{}}}],["bengal",{"_index":4384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bengaluru",{"_index":4274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bequia",{"_index":5307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["berberati",{"_index":5156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bergen",{"_index":4557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["berhampur",{"_index":4331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["best",{"_index":439,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["between",{"_index":3719,"title":{},"body":{"index.html":{}}}],["beyoğlu",{"_index":4537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bfa",{"_index":5215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bg",{"_index":2386,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["bgd",{"_index":4629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bhagalpur",{"_index":4226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bhaktapur",{"_index":4988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bhilai",{"_index":4234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bholaganj",{"_index":4312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bhopal",{"_index":4288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bhr",{"_index":4887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bhs",{"_index":5322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bhubaneswar",{"_index":4328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bhutan",{"_index":4926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bih",{"_index":4787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bihar",{"_index":4222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bijelo",{"_index":4799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bikaner",{"_index":4345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bilaspur",{"_index":4232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["billancourt",{"_index":4478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["billing",{"_index":46,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["billingaddress",{"_index":518,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/EditProfileComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["billingdetailscomponent",{"_index":45,"title":{"components/BillingDetailsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["billings",{"_index":4015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biloxi",{"_index":4007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bimbo",{"_index":5157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["birmingham",{"_index":3839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["birthdays",{"_index":2454,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{}}}],["bishkek",{"_index":4851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bismarck",{"_index":4070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bitola",{"_index":4805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bitwarden",{"_index":2543,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["blantyre",{"_index":5100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blob",{"_index":572,"title":{},"body":{"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/FileService.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/PasswordService.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["block",{"_index":3044,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"components/SideNavComponent.html":{}}}],["bloomington",{"_index":4000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blowing",{"_index":5266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blue",{"_index":2391,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["bluetooth",{"_index":1845,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["blz",{"_index":5419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bo",{"_index":5108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bobo",{"_index":5217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bodden",{"_index":5332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":668,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/PasswordService.html":{}}}],["boise",{"_index":3917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bokaro",{"_index":4270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boldak",{"_index":3808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bomdila",{"_index":4215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bong",{"_index":5117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{},"interfaces/Window.html":{}}}],["border",{"_index":3035,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"components/SideNavComponent.html":{}}}],["bosnia",{"_index":4784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boston",{"_index":3979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["botswana",{"_index":5067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":1084,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["bouak",{"_index":5130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boulogne",{"_index":4477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bowie",{"_index":3976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bowling",{"_index":3954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["box",{"_index":3196,"title":{},"body":{"components/SideNavComponent.html":{}}}],["bozeman",{"_index":4018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["br",{"_index":4223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bra",{"_index":4482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["braga",{"_index":4732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brampton",{"_index":4470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bratislava",{"_index":4758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brazil",{"_index":4480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brazzaville",{"_index":5162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brb",{"_index":5316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["breach",{"_index":1532,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"index.html":{}}}],["breakpointobserver",{"_index":774,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["breakpoints",{"_index":794,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bridge",{"_index":4427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bridgeport",{"_index":3883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bridgetown",{"_index":5317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brikama",{"_index":5248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brisbane",{"_index":4411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bristol",{"_index":4179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brn",{"_index":4943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brno",{"_index":4693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["broken",{"_index":4083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brookings",{"_index":4112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brown",{"_index":1586,"title":{},"body":{"components/IndexComponent.html":{}}}],["browser",{"_index":1510,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{},"index.html":{}}}],["browserify",{"_index":3628,"title":{},"body":{"dependencies.html":{}}}],["browsers",{"_index":3681,"title":{},"body":{"index.html":{}}}],["brunei",{"_index":4941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["btn",{"_index":4928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bubbling",{"_index":3240,"title":{},"body":{"components/SideNavComponent.html":{}}}],["budapest",{"_index":4715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buenos",{"_index":4562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffalo",{"_index":4056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":3611,"title":{},"body":{"dependencies.html":{}}}],["building",{"_index":3649,"title":{},"body":{"index.html":{}}}],["bujumbura",{"_index":5225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bukhara",{"_index":4846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bukit",{"_index":4583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bulawayo",{"_index":5014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bunbury",{"_index":4418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["burden",{"_index":2535,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["burkina",{"_index":5212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["burlington",{"_index":4137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["burnie",{"_index":4433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["burundi",{"_index":5221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["business",{"_index":2488,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["butare",{"_index":5043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["butte",{"_index":4019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button",{"_index":726,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/DownloadComponent.html":{},"components/FileExplorerComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/MfaSettingComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["buttonlink",{"_index":2784,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["bwa",{"_index":5069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bălți",{"_index":4819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ca",{"_index":3301,"title":{},"body":{"components/SupportComponent.html":{},"miscellaneous/variables.html":{}}}],["caballeros",{"_index":5357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caf",{"_index":5154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caguas",{"_index":5353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caicos",{"_index":5334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cairns",{"_index":4413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cairo",{"_index":4641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calculate",{"_index":2674,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["calculatepasswordstrength",{"_index":2633,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["calculatepasswordstrength(password",{"_index":2636,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["calibration",{"_index":1837,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["california",{"_index":3865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["call",{"_index":3099,"title":{},"body":{"components/SecurityComponent.html":{}}}],["caloocan",{"_index":4591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["camagüey",{"_index":5375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cambodia",{"_index":4958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cambridge",{"_index":3982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["camera",{"_index":1834,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["cameroon",{"_index":5138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["campinas",{"_index":4485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivatefn",{"_index":3779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canada",{"_index":4465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canberra",{"_index":4439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancel",{"_index":727,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesFormComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/UserFormComponent.html":{}}}],["cankuzo",{"_index":5227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cap",{"_index":5365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":3268,"title":{},"body":{"components/SupportComponent.html":{}}}],["capital",{"_index":4436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capitalize",{"_index":2474,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["capitalizewords",{"_index":2346,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["card",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["card'},{'name",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["card.billingaddress",{"_index":5438,"title":{},"body":{"components/viewCardDetailsComponent.html":{}}}],["card.cardholdername",{"_index":5435,"title":{},"body":{"components/viewCardDetailsComponent.html":{}}}],["card.cardnumber",{"_index":5434,"title":{},"body":{"components/viewCardDetailsComponent.html":{}}}],["card.cardtype",{"_index":5433,"title":{},"body":{"components/viewCardDetailsComponent.html":{}}}],["card.component.css",{"_index":465,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["card.component.html",{"_index":464,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["card.cvv",{"_index":5437,"title":{},"body":{"components/viewCardDetailsComponent.html":{}}}],["card.expirydate",{"_index":5436,"title":{},"body":{"components/viewCardDetailsComponent.html":{}}}],["cardcomponent",{"_index":48,"title":{"components/CardComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["carddetails",{"_index":505,"title":{},"body":{"components/CardComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/viewCardDetailsComponent.html":{}}}],["cardholdername",{"_index":515,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["cardid",{"_index":502,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["cardids",{"_index":639,"title":{},"body":{"injectables/CardService.html":{}}}],["cardiff",{"_index":4188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cardnumber",{"_index":499,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["cardnumber.replace(/\\s+/g",{"_index":598,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["cards",{"_index":449,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/IndexComponent.html":{},"injectables/NoteService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{}}}],["cardserrvice",{"_index":466,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["cardservice",{"_index":528,"title":{"injectables/CardService.html":{}},"body":{"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CreditCardFormComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["cardtype",{"_index":514,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["carmel",{"_index":3934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["carolina",{"_index":4059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["carrickfergus",{"_index":4198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cartago",{"_index":5390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2422,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"miscellaneous/variables.html":{}}}],["casper",{"_index":4169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["castries",{"_index":5295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["casuarina",{"_index":4448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catarina",{"_index":5242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":2596,"title":{},"body":{"injectables/PasswordService.html":{}}}],["catcherror",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["catcherror((error",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/PasswordService.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["catcherror(this.handleerror",{"_index":2745,"title":{},"body":{"injectables/PlanService.html":{}}}],["caught",{"_index":2766,"title":{},"body":{"injectables/PlanService.html":{}}}],["cautious",{"_index":2460,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["cay",{"_index":5339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cayes",{"_index":5368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cayman",{"_index":5326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ccc",{"_index":3038,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["cd",{"_index":3731,"title":{},"body":{"index.html":{}}}],["cdr",{"_index":1373,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["cedar",{"_index":3939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ceiba",{"_index":5416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["celje",{"_index":4767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["center",{"_index":1083,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["central",{"_index":4398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cg",{"_index":4230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chad",{"_index":5145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["challenge",{"_index":2513,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["chandigarh",{"_index":4253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chandler",{"_index":3855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":1146,"title":{},"body":{"components/FileUploadComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/ProfileComponent.html":{}}}],["change'},{'name",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["change(folder",{"_index":1153,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["change.component.css",{"_index":2113,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.html",{"_index":2114,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{}}}],["change.component.ts",{"_index":2112,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"coverage.html":{}}}],["change.component.ts:117",{"_index":2131,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:135",{"_index":2130,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:139",{"_index":2129,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:17",{"_index":2202,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["change.component.ts:22",{"_index":2200,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["change.component.ts:23",{"_index":2196,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["change.component.ts:25",{"_index":2197,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["change.component.ts:27",{"_index":2198,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["change.component.ts:31",{"_index":2140,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:32",{"_index":2143,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:33",{"_index":2133,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:34",{"_index":2139,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:35",{"_index":2132,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:37",{"_index":2137,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:41",{"_index":2199,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["change.component.ts:49",{"_index":2144,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:50",{"_index":2138,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:51",{"_index":2134,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:52",{"_index":2142,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:53",{"_index":2141,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:55",{"_index":2126,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:71",{"_index":2127,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:81",{"_index":2125,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change.component.ts:93",{"_index":2128,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["change/password",{"_index":2111,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"coverage.html":{}}}],["changed",{"_index":2207,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["changedetect",{"_index":1915,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["changedetection",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/FileUploadComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/TagFormCompoent.html":{},"interfaces/Window.html":{}}}],["changedetectionstrategy",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/FileUploadComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/TagFormCompoent.html":{},"interfaces/Window.html":{}}}],["changedetectionstrategy.onpush",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/FileUploadComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/TagFormCompoent.html":{},"interfaces/Window.html":{}}}],["changedetectorref",{"_index":467,"title":{},"body":{"components/CardComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/LoginComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PricingPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["changedetetorref",{"_index":1382,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["changepassword",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassword(passowrd",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["changer",{"_index":1562,"title":{},"body":{"components/IndexComponent.html":{}}}],["changes",{"_index":1009,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PrivacyPolicyComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["changing",{"_index":2208,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["character",{"_index":2193,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["characters",{"_index":1497,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{}}}],["characters.length",{"_index":2411,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["characters:{{length",{"_index":2471,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["charikar",{"_index":3805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charles",{"_index":3965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charleston",{"_index":4105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charlotte",{"_index":4061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chattanooga",{"_index":4119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":892,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"dependencies.html":{}}}],["check_circle",{"_index":1348,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["check_circle10",{"_index":451,"title":{},"body":{"components/BillingDetailsComponent.html":{}}}],["check_circle100",{"_index":452,"title":{},"body":{"components/BillingDetailsComponent.html":{}}}],["check_circle5",{"_index":445,"title":{},"body":{"components/BillingDetailsComponent.html":{}}}],["check_circlestore",{"_index":448,"title":{},"body":{"components/BillingDetailsComponent.html":{}}}],["checkbox",{"_index":1925,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["checkboxlabel",{"_index":473,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{}}}],["checkboxlabel(row",{"_index":483,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["checker",{"_index":1349,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["checkpassword",{"_index":2634,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["checks",{"_index":2650,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["chennai",{"_index":4355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chesapeake",{"_index":4145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cheyenne",{"_index":4168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chhattisgarh",{"_index":4229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chi",{"_index":4615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chicago",{"_index":3924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["childhood",{"_index":3107,"title":{},"body":{"components/SecurityComponent.html":{}}}],["chile",{"_index":4568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chitr",{"_index":5397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chittagong",{"_index":4631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chișinău",{"_index":4818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chl",{"_index":4570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["choloma",{"_index":5415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["choose",{"_index":2816,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["choosing",{"_index":2696,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["chosen",{"_index":3725,"title":{},"body":{"index.html":{}}}],["churachandpur",{"_index":4304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cincinnati",{"_index":4077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cities",{"_index":3803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city",{"_index":992,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["civ",{"_index":5127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["civitavecchia",{"_index":4501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clarksville",{"_index":4120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["clayton",{"_index":5280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clean",{"_index":3690,"title":{},"body":{"index.html":{}}}],["clear",{"_index":1939,"title":{},"body":{"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{}}}],["cleveland",{"_index":4076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["click",{"_index":908,"title":{},"body":{"components/DownloadComponent.html":{},"components/MfaSettingComponent.html":{},"components/SupportComponent.html":{}}}],["clickevent",{"_index":1671,"title":{},"body":{"components/LoginComponent.html":{}}}],["clickevent(event",{"_index":1673,"title":{},"body":{"components/LoginComponent.html":{}}}],["clicking",{"_index":725,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/SupportComponent.html":{}}}],["client",{"_index":2756,"title":{},"body":{"injectables/PlanService.html":{}}}],["clipboard",{"_index":2347,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["clipboardmodule",{"_index":2342,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["clipboardmodule,matsnackbarmodule",{"_index":2404,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["clone",{"_index":3726,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["close",{"_index":720,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["closed",{"_index":1378,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["cloud",{"_index":2866,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["cmr",{"_index":5140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["co",{"_index":3874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coast",{"_index":4399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cockburn",{"_index":5338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cod",{"_index":5169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":1008,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/PlanService.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["code/${email",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["code:\"+93",{"_index":3800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coffs",{"_index":4400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cog",{"_index":5161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cohesive",{"_index":3717,"title":{},"body":{"index.html":{}}}],["coimbatore",{"_index":4356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collaboration",{"_index":1527,"title":{},"body":{"components/IndexComponent.html":{}}}],["collaborative",{"_index":3269,"title":{},"body":{"components/SupportComponent.html":{}}}],["collect",{"_index":2837,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["collins",{"_index":3878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colombo",{"_index":4993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":2384,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["color:\"white",{"_index":1329,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["colorado",{"_index":3873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columbia",{"_index":4011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columbus",{"_index":3906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":1302,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["colón",{"_index":5395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["com",{"_index":5252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comes",{"_index":2485,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["comma",{"_index":2260,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["commands",{"_index":917,"title":{},"body":{"components/DownloadComponent.html":{}}}],["comment",{"_index":3514,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["comment.content",{"_index":3539,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["comment.createdat",{"_index":3540,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["comment.createdby?.name",{"_index":3537,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["commentadded",{"_index":3487,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["comments",{"_index":2031,"title":{},"body":{"components/NotificationComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["common",{"_index":2452,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["commonmodule",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["commonmodule,maticonmodule",{"_index":3368,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["commonservice",{"_index":422,"title":{"injectables/CommonService.html":{}},"body":{"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"components/FileExplorerComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/ProfileComponent.html":{},"components/SecurityComponent.html":{},"components/SideNavComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["communication",{"_index":3718,"title":{},"body":{"index.html":{}}}],["community",{"_index":896,"title":{},"body":{"components/DownloadComponent.html":{}}}],["comoros",{"_index":5250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["company",{"_index":3256,"title":{},"body":{"components/SupportComponent.html":{}}}],["compare",{"_index":2169,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["compatibility",{"_index":3687,"title":{},"body":{"index.html":{}}}],["complete",{"_index":567,"title":{},"body":{"components/CardComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["complex",{"_index":1495,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["complexity",{"_index":2503,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["compliant",{"_index":3281,"title":{},"body":{"components/SupportComponent.html":{}}}],["component",{"_index":0,"title":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["component.html",{"_index":2331,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["component_template",{"_index":37,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"overview.html":{},"components/viewCardDetailsComponent.html":{}}}],["comprehensive",{"_index":1535,"title":{},"body":{"components/IndexComponent.html":{},"injectables/PasswordService.html":{}}}],["compromised",{"_index":2700,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["compromising",{"_index":874,"title":{},"body":{"components/DownloadComponent.html":{}}}],["concerned",{"_index":2540,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["concord",{"_index":4039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["condes",{"_index":4576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cone",{"_index":3715,"title":{},"body":{"index.html":{}}}],["confidential",{"_index":2512,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["confidentiality",{"_index":2847,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["configuration",{"_index":1836,"title":{},"body":{"components/MfaSettingComponent.html":{},"index.html":{}}}],["configure",{"_index":1817,"title":{},"body":{"components/MfaSettingComponent.html":{},"index.html":{}}}],["confirm",{"_index":1659,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{}}}],["confirmation",{"_index":3668,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["confirmationcode:this.emailform.value.otp",{"_index":1647,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["confirmnewpassword",{"_index":2201,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["confirmpassword",{"_index":1626,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/PasswordChangeComponent.html":{}}}],["confirmpasswordmatchvalidator",{"_index":2120,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["confirmpasswordmatchvalidator(control",{"_index":2124,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["confirmpasswordmismatch",{"_index":2172,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["congo",{"_index":5159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":1843,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["connecticut",{"_index":3880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection",{"_index":956,"title":{},"body":{"components/DownloadComponent.html":{}}}],["consider",{"_index":2456,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["considerations",{"_index":3737,"title":{},"body":{"index.html":{}}}],["consisting",{"_index":2688,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["console",{"_index":2763,"title":{},"body":{"injectables/PlanService.html":{}}}],["console.error(\"error",{"_index":2286,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["console.error('an",{"_index":670,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/ProofIdService.html":{}}}],["console.error('err",{"_index":560,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["console.error('error",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"injectables/PasswordService.html":{},"components/SecurityComponent.html":{},"components/SideNavComponent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["console.error('mfa",{"_index":1875,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["console.error(error",{"_index":1316,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/PricingPageComponent.html":{},"components/SideNavComponent.html":{}}}],["console.error(errormessage",{"_index":2765,"title":{},"body":{"injectables/PlanService.html":{}}}],["console.log(\"pp",{"_index":3373,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(\"rrr",{"_index":2429,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["console.log('comment",{"_index":3510,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["console.log('credit",{"_index":761,"title":{},"body":{"components/CreditCardFormComponent.html":{}}}],["console.log('dd",{"_index":994,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["console.log('dd',this.password",{"_index":3504,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["console.log('delete",{"_index":3458,"title":{},"body":{"components/UsersComponent.html":{}}}],["console.log('dialog",{"_index":1377,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/OrganizationsComponent.html":{}}}],["console.log('edit",{"_index":3457,"title":{},"body":{"components/UsersComponent.html":{}}}],["console.log('email",{"_index":1793,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["console.log('ff",{"_index":1459,"title":{},"body":{"components/IndexComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["console.log('ggg",{"_index":2101,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["console.log('id",{"_index":579,"title":{},"body":{"components/CardComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["console.log('no",{"_index":3232,"title":{},"body":{"components/SideNavComponent.html":{}}}],["console.log('note",{"_index":2015,"title":{},"body":{"components/NotesFormComponent.html":{}}}],["console.log('password",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["console.log('please",{"_index":2209,"title":{},"body":{"components/PasswordChangeComponent-1.html":{},"components/SecurityComponent.html":{}}}],["console.log('pp",{"_index":2587,"title":{},"body":{"injectables/PasswordService.html":{}}}],["console.log('ppp",{"_index":3520,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["console.log('res",{"_index":3449,"title":{},"body":{"components/UsersComponent.html":{}}}],["console.log('resend",{"_index":3459,"title":{},"body":{"components/UsersComponent.html":{}}}],["console.log('response",{"_index":3462,"title":{},"body":{"components/UsersComponent.html":{}}}],["console.log('score",{"_index":2646,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["console.log('security",{"_index":3102,"title":{},"body":{"components/SecurityComponent.html":{}}}],["console.log(`filtering",{"_index":3237,"title":{},"body":{"components/SideNavComponent.html":{}}}],["console.log(`folder",{"_index":3231,"title":{},"body":{"components/SideNavComponent.html":{}}}],["console.log(buttonlink",{"_index":2808,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["console.log(planid",{"_index":2810,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["console.log(queryparams",{"_index":2809,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["console.log(res",{"_index":1643,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["console.log(response",{"_index":2057,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["console.log(triallink",{"_index":2813,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["console.log(trialqueryparams",{"_index":2814,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["const",{"_index":174,"title":{},"body":{"components/ApiDocsComponent.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["constructor",{"_index":161,"title":{},"body":{"components/ApiDocsComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"injectables/FolderService.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent-1.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/UserFormComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["constructor(dialog",{"_index":1025,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["constructor(dialogref",{"_index":703,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/ShareDialogComponent.html":{}}}],["constructor(fb",{"_index":739,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/UserFormComponent.html":{}}}],["constructor(http",{"_index":635,"title":{},"body":{"injectables/CardService.html":{},"injectables/FileService.html":{},"injectables/FolderService.html":{},"injectables/NoteService.html":{},"injectables/OrganizationService.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{}}}],["constructor(organizationsservice",{"_index":2088,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["constructor(private",{"_index":654,"title":{},"body":{"injectables/CardService.html":{},"components/CreditCardFormComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"injectables/NoteService.html":{},"injectables/OrganizationService.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{}}}],["constructor(proofidservice",{"_index":1387,"title":{},"body":{"components/IdProofComponent.html":{}}}],["constructor(public",{"_index":716,"title":{},"body":{"components/CreateFolderDialogComponent.html":{}}}],["contact",{"_index":961,"title":{},"body":{"components/DownloadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{}}}],["contain",{"_index":2188,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["container",{"_index":2702,"title":{},"body":{"components/PasswordStrengthComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["containers",{"_index":865,"title":{},"body":{"components/DownloadComponent.html":{}}}],["content",{"_index":1298,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"injectables/PasswordService.html":{},"components/ViewNoteCompoent.html":{}}}],["content_copy",{"_index":2470,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["control",{"_index":1473,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/TagFormCompoent.html":{},"index.html":{}}}],["control.parent",{"_index":2167,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["control.parent.get('password",{"_index":2168,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["control.parent?.get('password')?.value",{"_index":2171,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["control.value",{"_index":1703,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["controls",{"_index":1523,"title":{},"body":{"components/IndexComponent.html":{}}}],["convenience",{"_index":1514,"title":{},"body":{"components/IndexComponent.html":{}}}],["convenient",{"_index":2544,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["conveniently",{"_index":2483,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["convert",{"_index":2435,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["cookies",{"_index":2875,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["copied",{"_index":2431,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["copy",{"_index":1818,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["copypassphrase",{"_index":2355,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["copypassword",{"_index":2356,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["cork",{"_index":4685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["corozal",{"_index":5424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correctly",{"_index":1825,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["costa",{"_index":5384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["couldn't",{"_index":1994,"title":{},"body":{"components/NotesComponent.html":{}}}],["couldn\\'t",{"_index":1998,"title":{},"body":{"components/NotesComponent.html":{}}}],["count",{"_index":2400,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["countries",{"_index":3565,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["country",{"_index":993,"title":{},"body":{"components/EditProfileComponent.html":{},"components/SupportComponent.html":{},"components/UserProfileComponent.html":{}}}],["coverage",{"_index":3542,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covington",{"_index":3955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crack",{"_index":1503,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["cracktimes",{"_index":2348,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["cracktimes?.online_throttling_100_per_hour",{"_index":2469,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["crafting",{"_index":2506,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["crafts",{"_index":1494,"title":{},"body":{"components/IndexComponent.html":{}}}],["cranston",{"_index":4101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["create_new_folder",{"_index":3244,"title":{},"body":{"components/SideNavComponent.html":{}}}],["createcard",{"_index":629,"title":{},"body":{"injectables/CardService.html":{}}}],["createcard(card",{"_index":640,"title":{},"body":{"injectables/CardService.html":{}}}],["created",{"_index":621,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/FileUploadComponent.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{}}}],["created_by",{"_index":520,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["createdat",{"_index":519,"title":{},"body":{"components/CardComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/OrganizationsComponent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["createdby",{"_index":1357,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["createfolder",{"_index":1092,"title":{},"body":{"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"injectables/FolderService.html":{}}}],["createfolder(folder",{"_index":1246,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{}}}],["createfolder(foldername",{"_index":1156,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["createfolder(name",{"_index":1100,"title":{},"body":{"injectables/FileService.html":{}}}],["createfolderdialogcomponent",{"_index":50,"title":{"components/CreateFolderDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["createnewtag",{"_index":2228,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["createnote",{"_index":1878,"title":{},"body":{"injectables/NoteService.html":{}}}],["createnote(note",{"_index":1889,"title":{},"body":{"injectables/NoteService.html":{}}}],["createorganization",{"_index":2063,"title":{},"body":{"injectables/OrganizationService.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["createorganization(name",{"_index":2069,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["createpassword",{"_index":2974,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["createpermissionsform",{"_index":2962,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["createpermissionsform(rolepermissions",{"_index":2967,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["createplan",{"_index":2708,"title":{},"body":{"injectables/PlanService.html":{}}}],["createplan(plandetails",{"_index":2713,"title":{},"body":{"injectables/PlanService.html":{}}}],["createproofid",{"_index":2911,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["createproofid(proofid",{"_index":2917,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["createproofid(this.idproofform.value",{"_index":1439,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["createsecurityquestion",{"_index":3117,"title":{},"body":{"injectables/SecurityQuestionService.html":{}}}],["createsecurityquestion(formvalues",{"_index":3122,"title":{},"body":{"injectables/SecurityQuestionService.html":{}}}],["createtag",{"_index":2991,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["creating",{"_index":1191,"title":{},"body":{"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/SideNavComponent.html":{}}}],["creation",{"_index":717,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/NotificationComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{}}}],["credentials",{"_index":1480,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["credit",{"_index":55,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["credit_card",{"_index":3245,"title":{},"body":{"components/SideNavComponent.html":{}}}],["creditcardform",{"_index":737,"title":{},"body":{"components/CreditCardFormComponent.html":{}}}],["creditcardformcomponent",{"_index":54,"title":{"components/CreditCardFormComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["creditcardservice",{"_index":741,"title":{},"body":{"components/CreditCardFormComponent.html":{}}}],["cri",{"_index":5387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["criteria",{"_index":2677,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["croatia",{"_index":4777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cross",{"_index":856,"title":{},"body":{"components/DownloadComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["cruces",{"_index":4049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crucial",{"_index":2476,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["crypto",{"_index":2267,"title":{},"body":{"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/TagFormCompoent.html":{},"dependencies.html":{}}}],["crypto.js",{"_index":3712,"title":{},"body":{"index.html":{}}}],["cryptojs",{"_index":2583,"title":{},"body":{"injectables/PasswordService.html":{}}}],["cryptojs.aes.decrypt(res.password",{"_index":2594,"title":{},"body":{"injectables/PasswordService.html":{}}}],["cryptojs.lib.cipherparams",{"_index":2591,"title":{},"body":{"injectables/PasswordService.html":{}}}],["cryptojs.lib.wordarray",{"_index":2592,"title":{},"body":{"injectables/PasswordService.html":{}}}],["css",{"_index":3714,"title":{},"body":{"index.html":{}}}],["ct",{"_index":3881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cub",{"_index":5373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cuba",{"_index":5371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curepipe",{"_index":5197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currency",{"_index":2729,"title":{},"body":{"injectables/PlanService.html":{}}}],["current",{"_index":2210,"title":{},"body":{"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["currentpassword",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordChangeComponent-1.html":{}}}],["currentpermissions",{"_index":3057,"title":{},"body":{"injectables/RolesPermissionsService.html":{}}}],["currentpermissions[role",{"_index":3060,"title":{},"body":{"injectables/RolesPermissionsService.html":{}}}],["customer",{"_index":1340,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["customization",{"_index":3746,"title":{},"body":{"index.html":{}}}],["cuttack",{"_index":4329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cutting",{"_index":1540,"title":{},"body":{"components/IndexComponent.html":{}}}],["cvv",{"_index":517,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["cym",{"_index":5329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cze",{"_index":4691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["czech",{"_index":4688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":944,"title":{},"body":{"components/DownloadComponent.html":{}}}],["d)(?=.*[a",{"_index":2163,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["da",{"_index":4240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dailog/edit",{"_index":3364,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["daily",{"_index":2037,"title":{},"body":{"components/NotificationComponent.html":{}}}],["dakar",{"_index":5135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dakota",{"_index":4067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dallas",{"_index":4125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damascus",{"_index":4908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dammam",{"_index":4653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dar",{"_index":5034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["darbhanga",{"_index":4228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["darkhan",{"_index":4980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["darkslategray",{"_index":2703,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["darwin",{"_index":4445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashbloard",{"_index":769,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashbloard'},{'name",{"_index":59,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["dashboard",{"_index":1484,"title":{},"body":{"components/IndexComponent.html":{}}}],["dashboard.component.html",{"_index":772,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":58,"title":{"components/DashboardComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["data",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/PrivacyPolicyComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["data.itemtype",{"_index":3181,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["data.note.content",{"_index":3472,"title":{},"body":{"components/ViewNoteCompoent.html":{}}}],["data.note.createdat",{"_index":3473,"title":{},"body":{"components/ViewNoteCompoent.html":{}}}],["data.note.ownername",{"_index":3476,"title":{},"body":{"components/ViewNoteCompoent.html":{}}}],["data.note.title",{"_index":3471,"title":{},"body":{"components/ViewNoteCompoent.html":{}}}],["data.note.updatedat",{"_index":3475,"title":{},"body":{"components/ViewNoteCompoent.html":{}}}],["data[0].securityquestions",{"_index":3083,"title":{},"body":{"components/SecurityComponent.html":{}}}],["datasource",{"_index":468,"title":{},"body":{"components/CardComponent.html":{},"components/FileExplorerComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/UsersComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["date",{"_index":615,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DownloadComponent.html":{},"components/FileExplorerComponent.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["date().toisostring",{"_index":3508,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["date:\"short",{"_index":3474,"title":{},"body":{"components/ViewNoteCompoent.html":{}}}],["date:'short",{"_index":2108,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["date:\\'short",{"_index":2109,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["daugavpils",{"_index":4745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["daunting",{"_index":2479,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["davangere",{"_index":4278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["davenport",{"_index":3941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["david",{"_index":5396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["davis",{"_index":1590,"title":{},"body":{"components/IndexComponent.html":{}}}],["day",{"_index":2825,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["de",{"_index":3888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debit",{"_index":2846,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["debouncetime",{"_index":2269,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["debouncetime(300",{"_index":2278,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["debrecen",{"_index":4716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decision",{"_index":1578,"title":{},"body":{"components/IndexComponent.html":{}}}],["declare",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["decode",{"_index":2149,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["decodedtoken",{"_index":2147,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["decodedtoken.split",{"_index":2152,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["decorators",{"_index":788,"title":{},"body":{"components/DashboardComponent.html":{},"components/ShareDialogComponent.html":{},"components/UserFormComponent.html":{},"components/UsersComponent.html":{}}}],["decrypt",{"_index":2601,"title":{},"body":{"injectables/PasswordService.html":{}}}],["decryptedpassword",{"_index":2593,"title":{},"body":{"injectables/PasswordService.html":{}}}],["decryptedpassword.tostring(cryptojs.enc.utf8",{"_index":2614,"title":{},"body":{"injectables/PasswordService.html":{}}}],["decryptedpasswords",{"_index":2589,"title":{},"body":{"injectables/PasswordService.html":{}}}],["decrypting",{"_index":2598,"title":{},"body":{"injectables/PasswordService.html":{}}}],["decryption",{"_index":2602,"title":{},"body":{"injectables/PasswordService.html":{}}}],["default",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"injectables/FolderService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["define",{"_index":1241,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["defined",{"_index":162,"title":{},"body":{"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"injectables/FolderService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["dehradun",{"_index":4379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["del",{"_index":4566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delaware",{"_index":3887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delay",{"_index":2279,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["delete",{"_index":556,"title":{},"body":{"components/CardComponent.html":{},"injectables/CardService.html":{},"components/FileExplorerComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/IdProofComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/PlanService.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ProofIdService.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"components/SupportComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["deletecard",{"_index":474,"title":{},"body":{"components/CardComponent.html":{},"injectables/CardService.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["deletecard(id",{"_index":487,"title":{},"body":{"components/CardComponent.html":{},"injectables/CardService.html":{},"components/viewCardDetailsComponent.html":{}}}],["deletecard(ids",{"_index":559,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["deletecomment",{"_index":2995,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["deletefile",{"_index":2984,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["deletefolder",{"_index":1258,"title":{},"body":{"injectables/FolderService.html":{}}}],["deletefolder(folderid",{"_index":1256,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{}}}],["deletemultiplepasswords",{"_index":2550,"title":{},"body":{"injectables/PasswordService.html":{}}}],["deletemultiplepasswords(ids",{"_index":2565,"title":{},"body":{"injectables/PasswordService.html":{}}}],["deletenote",{"_index":1879,"title":{},"body":{"injectables/NoteService.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["deletenote(id",{"_index":1892,"title":{},"body":{"injectables/NoteService.html":{}}}],["deletenote(ids",{"_index":1972,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["deletenotes",{"_index":1918,"title":{},"body":{"components/NotesComponent.html":{}}}],["deletenotes(id",{"_index":1927,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["deletepassword",{"_index":2551,"title":{},"body":{"injectables/PasswordService.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["deletepassword(id",{"_index":2567,"title":{},"body":{"injectables/PasswordService.html":{}}}],["deleteplan",{"_index":2709,"title":{},"body":{"injectables/PlanService.html":{}}}],["deleteplan(planid",{"_index":2716,"title":{},"body":{"injectables/PlanService.html":{}}}],["deleteproofid",{"_index":2912,"title":{},"body":{"injectables/ProofIdService.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["deleteproofid(id",{"_index":2920,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["deletesecurityquestion",{"_index":3118,"title":{},"body":{"injectables/SecurityQuestionService.html":{}}}],["deletesecurityquestion(id",{"_index":3124,"title":{},"body":{"injectables/SecurityQuestionService.html":{}}}],["deletetag",{"_index":2992,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["deleteuser",{"_index":2978,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["deleting",{"_index":2618,"title":{},"body":{"injectables/PasswordService.html":{},"components/PrivacyPolicyComponent.html":{}}}],["deletion",{"_index":3671,"title":{},"body":{"index.html":{}}}],["democratic",{"_index":5167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["denis",{"_index":4479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["denpasar",{"_index":4597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["denver",{"_index":3875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deoghar",{"_index":4271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":957,"title":{"dependencies.html":{}},"body":{"components/DownloadComponent.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":923,"title":{},"body":{"components/DownloadComponent.html":{}}}],["depending",{"_index":3736,"title":{},"body":{"index.html":{}}}],["deps",{"_index":3778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derry",{"_index":4040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["des",{"_index":3937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":1343,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewPasswordComponent.html":{},"properties.html":{}}}],["deselect",{"_index":594,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["design",{"_index":868,"title":{},"body":{"components/DownloadComponent.html":{},"index.html":{}}}],["designated",{"_index":3673,"title":{},"body":{"index.html":{}}}],["designed",{"_index":830,"title":{},"body":{"components/DownloadComponent.html":{}}}],["desktop",{"_index":2491,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"index.html":{}}}],["despite",{"_index":2505,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["destination",{"_index":3111,"title":{},"body":{"components/SecurityComponent.html":{}}}],["detail",{"_index":3271,"title":{},"body":{"components/SupportComponent.html":{}}}],["detailed",{"_index":2754,"title":{},"body":{"injectables/PlanService.html":{},"components/SupportComponent.html":{}}}],["details",{"_index":416,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/MfaSettingComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/SupportComponent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["details'},{'name",{"_index":47,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["details.component.css",{"_index":421,"title":{},"body":{"components/BillingDetailsComponent.html":{}}}],["details.component.html",{"_index":420,"title":{},"body":{"components/BillingDetailsComponent.html":{}}}],["details.component.ts",{"_index":415,"title":{},"body":{"components/BillingDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:16",{"_index":426,"title":{},"body":{"components/BillingDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":424,"title":{},"body":{"components/BillingDetailsComponent.html":{}}}],["details.html",{"_index":602,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["details/billing",{"_index":414,"title":{},"body":{"components/BillingDetailsComponent.html":{},"coverage.html":{}}}],["detectorref",{"_index":2223,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/PricingPageComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["detroit",{"_index":3986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deu",{"_index":4459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["develop",{"_index":2448,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["developers",{"_index":3648,"title":{},"body":{"index.html":{}}}],["development",{"_index":3732,"title":{},"body":{"index.html":{}}}],["device",{"_index":1826,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{}}}],["devices",{"_index":1467,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{}}}],["devising",{"_index":2501,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["devonport",{"_index":4432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dhabi",{"_index":4660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dhaka",{"_index":4630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dhanbad",{"_index":4269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dharamshala",{"_index":4261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dharmanagar",{"_index":4369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialog",{"_index":692,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["dialog'},{'name",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["dialog.component",{"_index":3227,"title":{},"body":{"components/SideNavComponent.html":{}}}],["dialog.component.css",{"_index":697,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/ShareDialogComponent.html":{}}}],["dialog.component.html",{"_index":696,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/ShareDialogComponent.html":{}}}],["dialog.component.ts",{"_index":691,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/ShareDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:19",{"_index":705,"title":{},"body":{"components/CreateFolderDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":709,"title":{},"body":{"components/CreateFolderDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":708,"title":{},"body":{"components/CreateFolderDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":706,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/ShareDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":3149,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":3150,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":3151,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":707,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/ShareDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":3148,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["dialog.component.ts:52",{"_index":3143,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["dialog.component.ts:61",{"_index":3141,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["dialog.component.ts:66",{"_index":3145,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["dialog.component.ts:74",{"_index":3146,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["dialog.component.ts:78",{"_index":3147,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["dialog.component.ts:89",{"_index":3142,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["dialog/create",{"_index":690,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/SideNavComponent.html":{},"coverage.html":{}}}],["dialog/credit",{"_index":537,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["dialog/file",{"_index":1051,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["dialog/idproofform/idproofform.component",{"_index":1367,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["dialog/notes/notes",{"_index":1962,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["dialog/organization/organization.component",{"_index":2097,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["dialog/share",{"_index":3132,"title":{},"body":{"components/ShareDialogComponent.html":{},"coverage.html":{}}}],["dialog/user",{"_index":3443,"title":{},"body":{"components/UsersComponent.html":{}}}],["dialogref",{"_index":698,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/EditProfileComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["dialogref.afterclosed().subscribe((res",{"_index":1982,"title":{},"body":{"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":3379,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1376,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/SideNavComponent.html":{}}}],["dibrugarh",{"_index":4219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diego",{"_index":3870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["different",{"_index":2685,"title":{},"body":{"components/PasswordStrengthComponent.html":{},"index.html":{}}}],["differently",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["digest",{"_index":2038,"title":{},"body":{"components/NotificationComponent.html":{}}}],["digit",{"_index":1443,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["digital",{"_index":1475,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["dikhil",{"_index":5233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dilaogref",{"_index":1139,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["dimapur",{"_index":4323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dioulasso",{"_index":5218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":1301,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["directive",{"_index":35,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["directives",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["directly",{"_index":3270,"title":{},"body":{"components/SupportComponent.html":{}}}],["directory",{"_index":3728,"title":{},"body":{"index.html":{}}}],["disabilities",{"_index":3702,"title":{},"body":{"index.html":{}}}],["disable",{"_index":2877,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["disableallmfafields",{"_index":1740,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["disabled",{"_index":1766,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/UserProfileComponent.html":{}}}],["discover",{"_index":766,"title":{},"body":{"components/CreditCardFormComponent.html":{}}}],["dismiss",{"_index":1873,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["display",{"_index":586,"title":{},"body":{"components/CardComponent.html":{},"components/FileExplorerComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/NotesComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SideNavComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["displayedcolumns",{"_index":469,"title":{},"body":{"components/CardComponent.html":{},"components/FileExplorerComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["dispur",{"_index":4218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist",{"_index":172,"title":{},"body":{"components/ApiDocsComponent.html":{},"dependencies.html":{}}}],["distinctive",{"_index":2536,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["dji",{"_index":5230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["djibouti",{"_index":5228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dma",{"_index":5287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dmg",{"_index":936,"title":{},"body":{"components/DownloadComponent.html":{}}}],["docker",{"_index":864,"title":{},"body":{"components/DownloadComponent.html":{}}}],["docs",{"_index":153,"title":{},"body":{"components/ApiDocsComponent.html":{},"components/DownloadComponent.html":{}}}],["docs'},{'name",{"_index":42,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["docs.component.css",{"_index":156,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["docs.component.html",{"_index":154,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["docs.component.ts",{"_index":150,"title":{},"body":{"components/ApiDocsComponent.html":{},"coverage.html":{}}}],["docs.component.ts:11",{"_index":163,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["docs.component.ts:16",{"_index":167,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["docs.component.ts:21",{"_index":164,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["docs/api",{"_index":149,"title":{},"body":{"components/ApiDocsComponent.html":{},"coverage.html":{}}}],["document",{"_index":1447,"title":{},"body":{"components/IdproofformComponent.html":{},"index.html":{}}}],["document.createelement('a",{"_index":574,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["documentation",{"_index":189,"title":{},"body":{"components/ApiDocsComponent.html":{},"components/HeaderComponent-1.html":{},"coverage.html":{}}}],["documentimageurl",{"_index":1358,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{}}}],["documents",{"_index":2849,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dodoma",{"_index":5033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doe",{"_index":1569,"title":{},"body":{"components/IndexComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["doesn't",{"_index":3795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doha",{"_index":4873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dolisie",{"_index":5165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dollar",{"_index":2820,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["dom_id",{"_index":180,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["domains",{"_index":3685,"title":{},"body":{"index.html":{}}}],["domingo",{"_index":5356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dominica",{"_index":5285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dominican",{"_index":5354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["domoni",{"_index":5255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["domsanitizer",{"_index":3366,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["don't",{"_index":1728,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["don\\'t",{"_index":1731,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["douala",{"_index":5142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dover",{"_index":3890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download",{"_index":820,"title":{},"body":{"components/DownloadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent-1.html":{},"components/SupportComponent.html":{}}}],["download','password",{"_index":3789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download'},{'name",{"_index":61,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["download.component.css",{"_index":822,"title":{},"body":{"components/DownloadComponent.html":{}}}],["download.component.html",{"_index":821,"title":{},"body":{"components/DownloadComponent.html":{}}}],["downloadcomponent",{"_index":60,"title":{"components/DownloadComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["downloading",{"_index":911,"title":{},"body":{"components/DownloadComponent.html":{}}}],["dpkg",{"_index":921,"title":{},"body":{"components/DownloadComponent.html":{}}}],["drag",{"_index":937,"title":{},"body":{"components/DownloadComponent.html":{}}}],["drammen",{"_index":4556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["drawer",{"_index":775,"title":{},"body":{"components/DashboardComponent.html":{}}}],["driver's",{"_index":2851,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["driver\\'s",{"_index":2883,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["driverlicense",{"_index":1419,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["drivers",{"_index":1829,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["dss",{"_index":3283,"title":{},"body":{"components/SupportComponent.html":{}}}],["dubai",{"_index":4658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dublin",{"_index":4684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duluth",{"_index":3999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dundee",{"_index":4184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dunedin",{"_index":4545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duo",{"_index":1805,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["duration",{"_index":1002,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{}}}],["duration:3000",{"_index":2432,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["durg",{"_index":4233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["durgapur",{"_index":4389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["durham",{"_index":4064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["during",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"components/DownloadComponent.html":{},"index.html":{}}}],["durrës",{"_index":4812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dushanbe",{"_index":4859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":3596,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":3823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.g",{"_index":584,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SideNavComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["each",{"_index":2457,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["easily",{"_index":878,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{}}}],["east",{"_index":4103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["easy",{"_index":1517,"title":{},"body":{"components/IndexComponent.html":{},"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["ebebiyin",{"_index":5188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ecatepec",{"_index":4491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edge",{"_index":1541,"title":{},"body":{"components/IndexComponent.html":{}}}],["edinburgh",{"_index":4182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edison",{"_index":4045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":63,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["editcard",{"_index":2988,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["editfile",{"_index":2983,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["editnote",{"_index":2986,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["editpassword",{"_index":2981,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["editprofile",{"_index":3341,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["editprofilecomponent",{"_index":62,"title":{"components/EditProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["editproofid",{"_index":2990,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["edits",{"_index":3667,"title":{},"body":{"index.html":{}}}],["edmond",{"_index":4085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effective",{"_index":1577,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["effectively",{"_index":2542,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["effortless",{"_index":1506,"title":{},"body":{"components/IndexComponent.html":{}}}],["effortlessly",{"_index":1550,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["egy",{"_index":4640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["egypt",{"_index":4639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ekurhuleni",{"_index":4515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["el",{"_index":4645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eldoret",{"_index":5023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["electron",{"_index":3610,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":34,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["element.billingaddress",{"_index":620,"title":{},"body":{"components/CardComponent.html":{}}}],["element.cardholdername",{"_index":613,"title":{},"body":{"components/CardComponent.html":{}}}],["element.cardtype",{"_index":609,"title":{},"body":{"components/CardComponent.html":{}}}],["element.content",{"_index":1987,"title":{},"body":{"components/NotesComponent.html":{}}}],["element.createdat",{"_index":622,"title":{},"body":{"components/CardComponent.html":{},"components/IdProofComponent.html":{},"components/OrganizationsComponent.html":{}}}],["element.cvv",{"_index":618,"title":{},"body":{"components/CardComponent.html":{}}}],["element.description",{"_index":2105,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["element.expirydate",{"_index":616,"title":{},"body":{"components/CardComponent.html":{},"components/IdProofComponent.html":{}}}],["element.filename",{"_index":1065,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["element.idnumber",{"_index":1399,"title":{},"body":{"components/IdProofComponent.html":{}}}],["element.idtype",{"_index":1398,"title":{},"body":{"components/IdProofComponent.html":{}}}],["element.issuedate",{"_index":1403,"title":{},"body":{"components/IdProofComponent.html":{}}}],["element.issuedby",{"_index":1401,"title":{},"body":{"components/IdProofComponent.html":{}}}],["element.name",{"_index":2104,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["element.originalname",{"_index":1064,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["element.owner.email",{"_index":2107,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["element.owner.name",{"_index":2106,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["element.ownername",{"_index":1988,"title":{},"body":{"components/NotesComponent.html":{}}}],["element.size",{"_index":1067,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["element.title",{"_index":1986,"title":{},"body":{"components/NotesComponent.html":{}}}],["element.updatedat",{"_index":1989,"title":{},"body":{"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{}}}],["element.uploadedat",{"_index":1072,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["element.userid",{"_index":624,"title":{},"body":{"components/CardComponent.html":{}}}],["element.userid?.name",{"_index":1404,"title":{},"body":{"components/IdProofComponent.html":{}}}],["elements",{"_index":3695,"title":{},"body":{"index.html":{}}}],["eliminating",{"_index":1551,"title":{},"body":{"components/IndexComponent.html":{}}}],["elizabeth",{"_index":4044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"components/EditProfileComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotificationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordFormComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SupportComponent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["email).subscribe((res",{"_index":1642,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["emailaddress",{"_index":1769,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["emailcode",{"_index":1691,"title":{},"body":{"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["emailform",{"_index":1599,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["emailverification",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["emailverification(otpform",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["emily",{"_index":1589,"title":{},"body":{"components/IndexComponent.html":{}}}],["emirates",{"_index":4656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emit",{"_index":2298,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["employ",{"_index":3261,"title":{},"body":{"components/SupportComponent.html":{}}}],["empty",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["enable",{"_index":1803,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["enabled",{"_index":1753,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/UserProfileComponent.html":{}}}],["enablemfa",{"_index":2979,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["enables",{"_index":2496,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["enablesecurityquestions",{"_index":2886,"title":{},"body":{"components/ProfileComponent.html":{}}}],["enabling",{"_index":3665,"title":{},"body":{"index.html":{}}}],["encoded",{"_index":2151,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["encounter",{"_index":900,"title":{},"body":{"components/DownloadComponent.html":{}}}],["encrypt",{"_index":3661,"title":{},"body":{"index.html":{}}}],["encrypted",{"_index":852,"title":{},"body":{"components/DownloadComponent.html":{},"components/FileUploadComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["encryptedpassword",{"_index":2305,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["encryptedpassword.tostring",{"_index":2311,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["encryption",{"_index":836,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["end",{"_index":835,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["endpoint",{"_index":3389,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["endpoint.com/upload",{"_index":3391,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["eng",{"_index":4176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["england",{"_index":4175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enhance",{"_index":2859,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["enhanced",{"_index":3656,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":838,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/MfaSettingComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"index.html":{}}}],["ensures",{"_index":3275,"title":{},"body":{"components/SupportComponent.html":{}}}],["ensuring",{"_index":1524,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{}}}],["entebbe",{"_index":5027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enter",{"_index":854,"title":{},"body":{"components/DownloadComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{}}}],["entered",{"_index":2672,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["entering",{"_index":3658,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":2741,"title":{},"body":{"injectables/PlanService.html":{}}}],["entire",{"_index":2610,"title":{},"body":{"injectables/PasswordService.html":{},"components/PrivacyPolicyComponent.html":{}}}],["entries",{"_index":3672,"title":{},"body":{"index.html":{}}}],["environment",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/FileService.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/IndexComponent.html":{},"injectables/NoteService.html":{},"injectables/OrganizationService.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ProofIdService.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.api_url",{"_index":2078,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["environment.api_url}/auth",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.api_url}/cards",{"_index":652,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.api_url}/files",{"_index":1120,"title":{},"body":{"injectables/FileService.html":{}}}],["environment.api_url}/folders",{"_index":1244,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{}}}],["environment.api_url}/plans",{"_index":2726,"title":{},"body":{"injectables/PlanService.html":{}}}],["environment.api_url}/proofids",{"_index":2928,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["environment.api_url}/security",{"_index":3129,"title":{},"body":{"injectables/SecurityQuestionService.html":{}}}],["environment.api_url}/share/share",{"_index":3190,"title":{},"body":{"injectables/SharedItemService.html":{}}}],["environment.iselectron",{"_index":1460,"title":{},"body":{"components/IndexComponent.html":{}}}],["environment[`api_url`]}/notes",{"_index":1906,"title":{},"body":{"injectables/NoteService.html":{}}}],["environment[`api_url`]}/passwords",{"_index":2581,"title":{},"body":{"injectables/PasswordService.html":{}}}],["environments/environment",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/FileService.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/IndexComponent.html":{},"injectables/NoteService.html":{},"injectables/OrganizationService.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"injectables/SecurityQuestionService.html":{}}}],["environments/environment.development",{"_index":3191,"title":{},"body":{"injectables/SharedItemService.html":{}}}],["equatorial",{"_index":5182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erdenet",{"_index":4979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erie",{"_index":4095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eror",{"_index":1657,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["err",{"_index":2597,"title":{},"body":{"injectables/PasswordService.html":{}}}],["error",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/SecurityComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["error('failed",{"_index":2600,"title":{},"body":{"injectables/PasswordService.html":{}}}],["error('method",{"_index":1054,"title":{},"body":{"components/FileExplorerComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["error(errormessage",{"_index":2767,"title":{},"body":{"injectables/PlanService.html":{}}}],["error.error",{"_index":2758,"title":{},"body":{"injectables/PlanService.html":{}}}],["error.error.message",{"_index":1726,"title":{},"body":{"components/LoginComponent.html":{},"injectables/PlanService.html":{}}}],["error.message",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PlanService.html":{},"components/UserProfileComponent.html":{}}}],["error.status",{"_index":2762,"title":{},"body":{"injectables/PlanService.html":{}}}],["error:(res",{"_index":2059,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["errorevent",{"_index":2759,"title":{},"body":{"injectables/PlanService.html":{}}}],["errormessage",{"_index":2755,"title":{},"body":{"injectables/PlanService.html":{},"components/SupportComponent.html":{}}}],["errors",{"_index":2603,"title":{},"body":{"injectables/PasswordService.html":{},"injectables/PlanService.html":{}}}],["es",{"_index":5035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esp",{"_index":4526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["espoo",{"_index":4709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["essential",{"_index":2481,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["essex",{"_index":4138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["est",{"_index":4735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["estimated",{"_index":2666,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["estimatestrength",{"_index":2357,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["estonia",{"_index":4733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["etc",{"_index":2854,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["eu",{"_index":3302,"title":{},"body":{"components/SupportComponent.html":{}}}],["eugene",{"_index":4087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evaluate",{"_index":2665,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["evansville",{"_index":3931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["even",{"_index":862,"title":{},"body":{"components/DownloadComponent.html":{}}}],["event",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/FileUploadComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"interfaces/Window.html":{}}}],["event.option.deselect",{"_index":2295,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["event.option.value",{"_index":3169,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["event.option.value._id",{"_index":2290,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["event.option.viewvalue",{"_index":2293,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["event.stoppropagation",{"_index":1712,"title":{},"body":{"components/LoginComponent.html":{},"components/SideNavComponent.html":{}}}],["event.target",{"_index":3451,"title":{},"body":{"components/UsersComponent.html":{}}}],["event.target.files.length",{"_index":1192,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.target.files[0",{"_index":1195,"title":{},"body":{"components/FileUploadComponent.html":{},"components/UserProfileComponent.html":{}}}],["event.target.value",{"_index":1197,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.url?.includes(\"/auth",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["event.value",{"_index":1788,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["eventcoalescing",{"_index":3771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":1759,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/SecurityComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["example",{"_index":1705,"title":{},"body":{"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["exceeded",{"_index":1572,"title":{},"body":{"components/IndexComponent.html":{}}}],["execute",{"_index":941,"title":{},"body":{"components/DownloadComponent.html":{}}}],["exist",{"_index":3796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existing",{"_index":2751,"title":{},"body":{"injectables/PlanService.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["expansion",{"_index":3195,"title":{},"body":{"components/SideNavComponent.html":{}}}],["expectations",{"_index":1573,"title":{},"body":{"components/IndexComponent.html":{}}}],["experience",{"_index":951,"title":{},"body":{"components/DownloadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["expert",{"_index":2538,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["expired",{"_index":2183,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["expiry",{"_index":614,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["expirydate",{"_index":516,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["exploit",{"_index":2527,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["explorer",{"_index":1014,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer'},{'name",{"_index":66,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["explorer.component.css",{"_index":1016,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer.component.html",{"_index":1017,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer.component.ts",{"_index":1013,"title":{},"body":{"components/FileExplorerComponent.html":{},"coverage.html":{}}}],["explorer.component.ts:33",{"_index":1033,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer.component.ts:36",{"_index":1030,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer.component.ts:39",{"_index":1046,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer.component.ts:40",{"_index":1042,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer.component.ts:41",{"_index":1048,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer.component.ts:42",{"_index":1041,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer.component.ts:43",{"_index":1026,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer.component.ts:47",{"_index":1028,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer.component.ts:51",{"_index":1027,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer.component.ts:58",{"_index":1034,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer.component.ts:64",{"_index":1039,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer.component.ts:68",{"_index":1036,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer.component.ts:71",{"_index":1040,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["explorer/file",{"_index":1012,"title":{},"body":{"components/FileExplorerComponent.html":{},"coverage.html":{}}}],["export",{"_index":26,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["exportcardsascsv",{"_index":630,"title":{},"body":{"injectables/CardService.html":{}}}],["exportcardsascsv(ids",{"_index":643,"title":{},"body":{"injectables/CardService.html":{}}}],["exportnotesascsv",{"_index":1880,"title":{},"body":{"injectables/NoteService.html":{}}}],["exportnotesascsv(ids",{"_index":1894,"title":{},"body":{"injectables/NoteService.html":{}}}],["exportpassword",{"_index":475,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["exportpasswordsascsv",{"_index":2552,"title":{},"body":{"injectables/PasswordService.html":{}}}],["exportpasswordsascsv(ids",{"_index":2569,"title":{},"body":{"injectables/PasswordService.html":{}}}],["express",{"_index":765,"title":{},"body":{"components/CreditCardFormComponent.html":{}}}],["extensions",{"_index":3688,"title":{},"body":{"index.html":{}}}],["extra",{"_index":2699,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["f",{"_index":927,"title":{},"body":{"components/DownloadComponent.html":{}}}],["f9f9f9",{"_index":3042,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["face",{"_index":959,"title":{},"body":{"components/DownloadComponent.html":{},"components/MfaSettingComponent.html":{}}}],["factor",{"_index":1530,"title":{},"body":{"components/IndexComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["failed",{"_index":1725,"title":{},"body":{"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/UserProfileComponent.html":{}}}],["failures",{"_index":565,"title":{},"body":{"components/CardComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/PasswordService.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["fair",{"_index":2385,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["fairbanks",{"_index":3846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["faisalabad",{"_index":4624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["falls",{"_index":3920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FileUploadComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["familiar",{"_index":2519,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["familiarizing",{"_index":3650,"title":{},"body":{"index.html":{}}}],["fantastic",{"_index":1581,"title":{},"body":{"components/IndexComponent.html":{}}}],["faq",{"_index":2669,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["faq.answer",{"_index":3298,"title":{},"body":{"components/SupportComponent.html":{}}}],["faq.question",{"_index":3297,"title":{},"body":{"components/SupportComponent.html":{}}}],["faqs",{"_index":3250,"title":{},"body":{"components/SupportComponent.html":{}}}],["fargo",{"_index":4069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["faridabad",{"_index":4255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["farmington",{"_index":4053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["faryab",{"_index":3827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["faso",{"_index":5213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["favorite",{"_index":3105,"title":{},"body":{"components/SecurityComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["favorites",{"_index":582,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["favourite",{"_index":1952,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["favourites",{"_index":608,"title":{},"body":{"components/CardComponent.html":{},"components/FileExplorerComponent.html":{},"components/IdProofComponent.html":{},"components/NotesComponent.html":{}}}],["fayetteville",{"_index":3862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fayzabad",{"_index":3819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fb",{"_index":743,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesFormComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/ShareDialogComponent.html":{},"components/UserFormComponent.html":{}}}],["fe",{"_index":4051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feature",{"_index":1838,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["feature.text",{"_index":2822,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["features",{"_index":443,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["federation",{"_index":4788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedback",{"_index":2349,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["feel",{"_index":903,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{}}}],["fetch",{"_index":1125,"title":{},"body":{"injectables/FileService.html":{},"injectables/PlanService.html":{}}}],["fetched",{"_index":2606,"title":{},"body":{"injectables/PasswordService.html":{}}}],["fetching",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/TagFormCompoent.html":{}}}],["fido2/u2f",{"_index":1808,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["field",{"_index":711,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{}}}],["fields",{"_index":1208,"title":{},"body":{"components/FileUploadComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/SecurityComponent.html":{},"components/SupportComponent.html":{}}}],["fier",{"_index":4814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"components/viewCardDetailsComponent.html":{}}}],["file.name",{"_index":3387,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["file_copy",{"_index":1352,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["fileexplorercomponent",{"_index":65,"title":{"components/FileExplorerComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["fileid",{"_index":1037,"title":{},"body":{"components/FileExplorerComponent.html":{},"injectables/FileService.html":{}}}],["filename",{"_index":1043,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["files",{"_index":1058,"title":{},"body":{"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/IndexComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{}}}],["fileservice",{"_index":1018,"title":{"injectables/FileService.html":{}},"body":{"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"coverage.html":{}}}],["filetoupload",{"_index":1140,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["fileuploadcomponent",{"_index":67,"title":{"components/FileUploadComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["fill",{"_index":1206,"title":{},"body":{"components/FileUploadComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/SecurityComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["fill(characters",{"_index":2416,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["filter",{"_index":3285,"title":{},"body":{"components/SupportComponent.html":{}}}],["filterbyfolder",{"_index":3200,"title":{},"body":{"components/SideNavComponent.html":{}}}],["filterbyfolder(section",{"_index":3205,"title":{},"body":{"components/SideNavComponent.html":{}}}],["filteredfolders",{"_index":1141,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["filteredpasswords",{"_index":2548,"title":{},"body":{"injectables/PasswordService.html":{}}}],["filteredusers",{"_index":1142,"title":{},"body":{"components/FileUploadComponent.html":{},"components/ShareDialogComponent.html":{}}}],["filtering",{"_index":3238,"title":{},"body":{"components/SideNavComponent.html":{}}}],["filtervalue",{"_index":3165,"title":{},"body":{"components/ShareDialogComponent.html":{},"components/UsersComponent.html":{}}}],["filtervalue.trim().tolowercase",{"_index":3454,"title":{},"body":{"components/UsersComponent.html":{}}}],["fin",{"_index":4706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finally",{"_index":1472,"title":{},"body":{"components/IndexComponent.html":{}}}],["find",{"_index":2664,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["fingerprint",{"_index":1806,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["finland",{"_index":4704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":1571,"title":{},"body":{"components/IndexComponent.html":{},"components/SupportComponent.html":{},"components/UserProfileComponent.html":{}}}],["firstname",{"_index":3254,"title":{},"body":{"components/SupportComponent.html":{}}}],["fits",{"_index":2817,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["fiumicino",{"_index":4499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fixedkey",{"_index":2301,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["fl",{"_index":3895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flag",{"_index":2902,"title":{},"body":{"components/ProfileComponent.html":{}}}],["flex",{"_index":1080,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/RolesPermissionsComponent.html":{}}}],["florida",{"_index":3894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":52,"title":{"interfaces/Folder.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["folder.id",{"_index":1230,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["folder.name",{"_index":1232,"title":{},"body":{"components/FileUploadComponent.html":{},"components/SideNavComponent.html":{}}}],["folderid",{"_index":1108,"title":{},"body":{"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"injectables/FolderService.html":{},"components/SideNavComponent.html":{}}}],["foldername",{"_index":699,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/FileUploadComponent.html":{}}}],["foldernotfound",{"_index":1143,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["folders",{"_index":1126,"title":{},"body":{"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/SideNavComponent.html":{}}}],["folders.length",{"_index":1200,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["folderservice",{"_index":1243,"title":{"injectables/FolderService.html":{}},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/SideNavComponent.html":{},"coverage.html":{}}}],["follow",{"_index":913,"title":{},"body":{"components/DownloadComponent.html":{},"components/MfaSettingComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["following",{"_index":916,"title":{},"body":{"components/DownloadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["food",{"_index":3109,"title":{},"body":{"components/SecurityComponent.html":{}}}],["footer",{"_index":1270,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":70,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["footer.component.css",{"_index":1272,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1271,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":69,"title":{"components/FooterComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["forget",{"_index":3273,"title":{},"body":{"components/SupportComponent.html":{}}}],["forgot",{"_index":1730,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SupportComponent.html":{}}}],["forks",{"_index":4071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form",{"_index":730,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"index.html":{}}}],["form'},{'name",{"_index":57,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["form.component",{"_index":539,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["form.component.css",{"_index":736,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.html",{"_index":735,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts",{"_index":729,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:137",{"_index":2237,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:146",{"_index":2235,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:152",{"_index":2240,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:165",{"_index":2245,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:173",{"_index":2247,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:189",{"_index":3315,"title":{},"body":{"components/TagFormCompoent.html":{}}}],["form.component.ts:19",{"_index":3325,"title":{},"body":{"components/UserFormComponent.html":{}}}],["form.component.ts:190",{"_index":3318,"title":{},"body":{"components/TagFormCompoent.html":{}}}],["form.component.ts:194",{"_index":3316,"title":{},"body":{"components/TagFormCompoent.html":{}}}],["form.component.ts:195",{"_index":3317,"title":{},"body":{"components/TagFormCompoent.html":{}}}],["form.component.ts:197",{"_index":3314,"title":{},"body":{"components/TagFormCompoent.html":{}}}],["form.component.ts:20",{"_index":3322,"title":{},"body":{"components/UserFormComponent.html":{}}}],["form.component.ts:22",{"_index":2005,"title":{},"body":{"components/NotesFormComponent.html":{}}}],["form.component.ts:23",{"_index":2003,"title":{},"body":{"components/NotesFormComponent.html":{}}}],["form.component.ts:24",{"_index":2004,"title":{},"body":{"components/NotesFormComponent.html":{}}}],["form.component.ts:25",{"_index":2006,"title":{},"body":{"components/NotesFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:26",{"_index":2001,"title":{},"body":{"components/NotesFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:27",{"_index":742,"title":{},"body":{"components/CreditCardFormComponent.html":{}}}],["form.component.ts:28",{"_index":2253,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:29",{"_index":2257,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:35",{"_index":2002,"title":{},"body":{"components/NotesFormComponent.html":{}}}],["form.component.ts:36",{"_index":3323,"title":{},"body":{"components/UserFormComponent.html":{}}}],["form.component.ts:40",{"_index":744,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:41",{"_index":2250,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:42",{"_index":2252,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:43",{"_index":2259,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:44",{"_index":2248,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:45",{"_index":2249,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:46",{"_index":2251,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:47",{"_index":2261,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:48",{"_index":2263,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:49",{"_index":2262,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:51",{"_index":2238,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:61",{"_index":3324,"title":{},"body":{"components/UserFormComponent.html":{}}}],["form.component.ts:76",{"_index":2244,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:85",{"_index":2242,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form.component.ts:96",{"_index":2234,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["form/credit",{"_index":538,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["form/password",{"_index":2222,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"coverage.html":{}}}],["form/user",{"_index":3320,"title":{},"body":{"components/UserFormComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["formarray",{"_index":3000,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["format",{"_index":1445,"title":{},"body":{"components/IdproofformComponent.html":{},"components/PasswordFormComponent.html":{}}}],["formatting",{"_index":3660,"title":{},"body":{"index.html":{}}}],["formbuilder",{"_index":740,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{}}}],["formcontrol",{"_index":1679,"title":{},"body":{"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SecurityComponent.html":{},"components/TagFormCompoent.html":{}}}],["formcontrol(\"daily",{"_index":2028,"title":{},"body":{"components/NotificationComponent.html":{}}}],["formcontrol('all",{"_index":2024,"title":{},"body":{"components/NotificationComponent.html":{}}}],["formcontrol(true",{"_index":2026,"title":{},"body":{"components/NotificationComponent.html":{}}}],["formdata",{"_index":1118,"title":{},"body":{"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/UserProfileComponent.html":{}}}],["formdata).subscribe",{"_index":3392,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["formdata.append",{"_index":1214,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["formdata.append('encrypted",{"_index":1216,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["formdata.append('file",{"_index":1209,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["formdata.append('folderid",{"_index":1210,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["formdata.append('image",{"_index":3388,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["formdata.append('ownerid",{"_index":1212,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["formgroup",{"_index":745,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{}}}],["formgroup.get('confirmpassword')?.value",{"_index":1637,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["formgroup?.get('password')?.value",{"_index":1636,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["formgroups",{"_index":3009,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["forms",{"_index":3682,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":463,"title":{},"body":{"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["formsmodule,commonmodule",{"_index":3503,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["formvalues",{"_index":3090,"title":{},"body":{"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{}}}],["formvalues.securityanswer1",{"_index":3096,"title":{},"body":{"components/SecurityComponent.html":{}}}],["formvalues.securityanswer2",{"_index":3098,"title":{},"body":{"components/SecurityComponent.html":{}}}],["formvalues.securityquestion1",{"_index":3094,"title":{},"body":{"components/SecurityComponent.html":{}}}],["formvalues.securityquestion2",{"_index":3097,"title":{},"body":{"components/SecurityComponent.html":{}}}],["fort",{"_index":3861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fortawesome/fontawesome",{"_index":3597,"title":{},"body":{"dependencies.html":{}}}],["fortunately",{"_index":2533,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["found",{"_index":1992,"title":{},"body":{"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["foundation",{"_index":3743,"title":{},"body":{"index.html":{}}}],["fra",{"_index":4473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":3709,"title":{},"body":{"index.html":{}}}],["france",{"_index":4471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["franceville",{"_index":5180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["francisco",{"_index":3869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["francistown",{"_index":5071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frederick",{"_index":3973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":870,"title":{},"body":{"components/DownloadComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PlanService.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["freeport",{"_index":5324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["freetown",{"_index":5107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frequently",{"_index":3295,"title":{},"body":{"components/SupportComponent.html":{}}}],["fret",{"_index":2955,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["friendly",{"_index":837,"title":{},"body":{"components/DownloadComponent.html":{},"index.html":{}}}],["front",{"_index":3708,"title":{},"body":{"index.html":{}}}],["fruit",{"_index":2241,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["fruits.indexof(fruit",{"_index":2321,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["frustration",{"_index":1513,"title":{},"body":{"components/IndexComponent.html":{}}}],["full",{"_index":1006,"title":{},"body":{"components/EditProfileComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["fumbuni",{"_index":5256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":3552,"title":{},"body":{"coverage.html":{}}}],["functionalities",{"_index":3646,"title":{},"body":{"index.html":{}}}],["functionality",{"_index":1063,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["functions",{"_index":1839,"title":{"miscellaneous/functions.html":{}},"body":{"components/MfaSettingComponent.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":3745,"title":{},"body":{"index.html":{}}}],["future",{"_index":3741,"title":{},"body":{"index.html":{}}}],["fuvahmulah",{"_index":4939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ga",{"_index":3903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gab",{"_index":5177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gabon",{"_index":5175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gaborone",{"_index":5070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gah",{"_index":3832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gaithersburg",{"_index":3975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["galle",{"_index":4994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gama",{"_index":4241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gambia",{"_index":5243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gambier",{"_index":4424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["game",{"_index":1561,"title":{},"body":{"components/IndexComponent.html":{}}}],["gandhinagar",{"_index":4250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gangtok",{"_index":4348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gap",{"_index":3033,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["garoua",{"_index":5143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gauteng",{"_index":4511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gaya",{"_index":4225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gb",{"_index":446,"title":{},"body":{"components/BillingDetailsComponent.html":{}}}],["gbarnga",{"_index":5115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geelong",{"_index":4405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["general",{"_index":3744,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1476,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{},"dependencies.html":{}}}],["generate(this.passphraselength",{"_index":2434,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["generated",{"_index":2468,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["generatepassphrase",{"_index":2358,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["generatepassword",{"_index":2359,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["generatesecurekey",{"_index":2229,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["generatesecurekey(length",{"_index":2236,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["generating",{"_index":1466,"title":{},"body":{"components/IndexComponent.html":{},"injectables/NoteService.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{}}}],["generator",{"_index":1347,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"miscellaneous/variables.html":{}}}],["generatortype",{"_index":2350,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator",{"_index":2341,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator'},{'name",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["genrator.component.css",{"_index":2344,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.html",{"_index":2345,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts",{"_index":2340,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"coverage.html":{}}}],["genrator.component.ts:106",{"_index":2364,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:122",{"_index":2361,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:26",{"_index":2381,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:27",{"_index":2376,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:28",{"_index":2378,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:29",{"_index":2396,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:30",{"_index":2397,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:31",{"_index":2377,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:32",{"_index":2395,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:33",{"_index":2372,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:34",{"_index":2371,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:35",{"_index":2370,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:36",{"_index":2393,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:37",{"_index":2373,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:38",{"_index":2392,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:46",{"_index":2380,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:47",{"_index":2374,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:48",{"_index":2368,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:49",{"_index":2379,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:50",{"_index":2365,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:73",{"_index":2367,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:91",{"_index":2363,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator.component.ts:99",{"_index":2362,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["genrator/password",{"_index":2339,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"coverage.html":{}}}],["gentil",{"_index":5179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geo",{"_index":4830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["george",{"_index":5330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["george\\'s",{"_index":5311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["georgia",{"_index":3902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geraldton",{"_index":4420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["germany",{"_index":4457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(`${this.apiurl}/resend",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(`${this.apiurl}/verify",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["getafe",{"_index":4531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcardbyid",{"_index":631,"title":{},"body":{"injectables/CardService.html":{}}}],["getcardbyid(id",{"_index":645,"title":{},"body":{"injectables/CardService.html":{}}}],["getcards",{"_index":632,"title":{},"body":{"injectables/CardService.html":{}}}],["getcardslistings",{"_index":476,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["getfilepreview",{"_index":1093,"title":{},"body":{"injectables/FileService.html":{}}}],["getfilepreview(fileid",{"_index":1104,"title":{},"body":{"injectables/FileService.html":{}}}],["getfilesandfolders",{"_index":1094,"title":{},"body":{"injectables/FileService.html":{}}}],["getfilesandfolders(folderid",{"_index":1106,"title":{},"body":{"injectables/FileService.html":{}}}],["getfolderbyid",{"_index":1259,"title":{},"body":{"injectables/FolderService.html":{}}}],["getfolderbyid(folderid",{"_index":1252,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{}}}],["getfoldersbytype",{"_index":1260,"title":{},"body":{"injectables/FolderService.html":{}}}],["getfoldersbytype(type",{"_index":1250,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{}}}],["getinvitations",{"_index":2064,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["getnotebyid",{"_index":1881,"title":{},"body":{"injectables/NoteService.html":{}}}],["getnotebyid(id",{"_index":1896,"title":{},"body":{"injectables/NoteService.html":{}}}],["getnotes",{"_index":1882,"title":{},"body":{"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["getnotes(searchterm",{"_index":1898,"title":{},"body":{"injectables/NoteService.html":{}}}],["getorganizations",{"_index":2065,"title":{},"body":{"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{}}}],["getpasswords",{"_index":2553,"title":{},"body":{"injectables/PasswordService.html":{}}}],["getpasswords(_search",{"_index":2571,"title":{},"body":{"injectables/PasswordService.html":{}}}],["getpasswordstrengthlabel",{"_index":2360,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["getpasswordstrengthlabel(strength",{"_index":2366,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["getplanbyid",{"_index":2710,"title":{},"body":{"injectables/PlanService.html":{}}}],["getplanbyid(planid",{"_index":2719,"title":{},"body":{"injectables/PlanService.html":{}}}],["getplans",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PlanService.html":{}}}],["getprofile",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"components/UserProfileComponent.html":{}}}],["getproofidbyid",{"_index":2913,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["getproofidbyid(id",{"_index":2922,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["getproofids",{"_index":2914,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["getroles",{"_index":2998,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["getrolespermissions",{"_index":3049,"title":{},"body":{"injectables/RolesPermissionsService.html":{}}}],["getsecurityquestions",{"_index":3119,"title":{},"body":{"injectables/SecurityQuestionService.html":{}}}],["getstrengthmessage",{"_index":2635,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["getstrengthmessage(score",{"_index":2639,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["getting",{"_index":3375,"title":{"index.html":{}},"body":{"components/UserProfileComponent.html":{}}}],["getuserfolders",{"_index":1249,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{}}}],["getusers",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["gha",{"_index":5048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ghana",{"_index":5046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ghazni",{"_index":3825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gillette",{"_index":4171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gisenyi",{"_index":5044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["git",{"_index":3727,"title":{},"body":{"index.html":{}}}],["gitega",{"_index":5224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["github",{"_index":882,"title":{},"body":{"components/DownloadComponent.html":{}}}],["giza",{"_index":4642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gj",{"_index":4245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glasgow",{"_index":4183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["global",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["gmb",{"_index":5245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gnq",{"_index":5185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go",{"_index":1491,"title":{},"body":{"components/IndexComponent.html":{},"components/MfaSettingComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["goa",{"_index":4236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gold",{"_index":4412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gouyave",{"_index":5312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granada",{"_index":5383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grand",{"_index":3987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":1521,"title":{},"body":{"components/IndexComponent.html":{}}}],["granular",{"_index":1522,"title":{},"body":{"components/IndexComponent.html":{},"index.html":{}}}],["grc",{"_index":4698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grd",{"_index":5310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["great",{"_index":4017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["greece",{"_index":4696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["green",{"_index":2390,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"miscellaneous/variables.html":{}}}],["greensboro",{"_index":4063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grenada",{"_index":5308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grenadines",{"_index":5301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grenville",{"_index":5313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gresham",{"_index":4088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gros",{"_index":5298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ground",{"_index":5268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":188,"title":{},"body":{"components/ApiDocsComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["groups",{"_index":187,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["growing",{"_index":895,"title":{},"body":{"components/DownloadComponent.html":{}}}],["gtm",{"_index":5406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guatemala",{"_index":5404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guessable",{"_index":2453,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{}}}],["guidelines",{"_index":3704,"title":{},"body":{"index.html":{}}}],["guinea",{"_index":5183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gujarat",{"_index":4244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gulfport",{"_index":4004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gungahlin",{"_index":4441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gunjur",{"_index":5249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guntur",{"_index":4208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gurgaon",{"_index":4254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guwahati",{"_index":4217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gwalior",{"_index":4290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gweru",{"_index":5015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gyalshing",{"_index":4351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gyumri",{"_index":4826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haarlem",{"_index":4521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hackers",{"_index":2526,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["hafnarfjordur",{"_index":4724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hai",{"_index":4617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haifa",{"_index":4669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haiti",{"_index":5360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hamilton",{"_index":4543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hampshire",{"_index":4035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handle",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/NotesComponent.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"components/SideNavComponent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["handleerror",{"_index":633,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{}}}],["handleerror(error",{"_index":648,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{}}}],["handling",{"_index":669,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/PasswordService.html":{},"injectables/ProofIdService.html":{},"components/SideNavComponent.html":{},"index.html":{}}}],["hanoi",{"_index":4613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["happened",{"_index":673,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/ProofIdService.html":{}}}],["happens",{"_index":3272,"title":{},"body":{"components/SupportComponent.html":{}}}],["harare",{"_index":5013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["harbour",{"_index":4401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hargeisa",{"_index":5001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haridwar",{"_index":4380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hartford",{"_index":3882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haryana",{"_index":4251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashing",{"_index":3653,"title":{},"body":{"index.html":{}}}],["hassle",{"_index":869,"title":{},"body":{"components/DownloadComponent.html":{}}}],["hattiesburg",{"_index":4006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["havana",{"_index":5374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haven",{"_index":3884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hawaii",{"_index":3909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hawalli",{"_index":4896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haïtien",{"_index":5366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"miscellaneous/variables.html":{}}}],["header'},{'name",{"_index":72,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["header.component.html",{"_index":1304,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["header/header.component",{"_index":802,"title":{},"body":{"components/DashboardComponent.html":{}}}],["headercomponent",{"_index":71,"title":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["headers",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["heights",{"_index":3990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helmand",{"_index":3830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["help",{"_index":831,"title":{},"body":{"components/DownloadComponent.html":{}}}],["helps",{"_index":2697,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["helsinki",{"_index":4708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["henares",{"_index":4529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hence",{"_index":2530,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["henderson",{"_index":4031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herat",{"_index":3809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herceg",{"_index":4798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateFolderDialogComponent.html":{},"components/FileExplorerComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/UserFormComponent.html":{},"miscellaneous/variables.html":{}}}],["heredia",{"_index":5391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herzegovina",{"_index":4785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hi",{"_index":3910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hide",{"_index":1293,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["hideheader",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["high",{"_index":3647,"title":{},"body":{"index.html":{}}}],["highly",{"_index":883,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["hill",{"_index":4108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hillsboro",{"_index":4089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hilo",{"_index":3912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hilversum",{"_index":4522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["himachal",{"_index":4258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hisar",{"_index":4256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hnd",{"_index":5412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ho",{"_index":4614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hobart",{"_index":4430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hobby",{"_index":3112,"title":{},"body":{"components/SecurityComponent.html":{}}}],["hodeida",{"_index":4925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holder",{"_index":612,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["holguín",{"_index":5376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holland",{"_index":4519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["home",{"_index":1273,"title":{},"body":{"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["homs",{"_index":4910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["honduras",{"_index":5410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["honolulu",{"_index":3911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hostname",{"_index":1820,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["houston",{"_index":4123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["howrah",{"_index":4390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hp",{"_index":4259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hr",{"_index":4252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hrv",{"_index":4779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsstaticmethods",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["hti",{"_index":5362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["htmlinputelement).value",{"_index":3452,"title":{},"body":{"components/UsersComponent.html":{}}}],["http",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/FileService.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"injectables/NoteService.html":{},"injectables/OrganizationService.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{},"miscellaneous/functions.html":{}}}],["http(s)?:\\/\\/)?[\\w",{"_index":2327,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["http://54.224.249.251/api",{"_index":5429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:3000",{"_index":3735,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/api",{"_index":5428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/FileService.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"injectables/NoteService.html":{},"injectables/OrganizationService.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":2722,"title":{},"body":{"injectables/PlanService.html":{}}}],["httpeventtype",{"_index":1182,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["httpheaders",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"injectables/NoteService.html":{},"injectables/PasswordService.html":{},"injectables/ProofIdService.html":{},"injectables/SecurityQuestionService.html":{}}}],["httpheaders().set('authorization",{"_index":3763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpinterceptorfn",{"_index":3759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":3553,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httploaderfactory(http",{"_index":3641,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpparams",{"_index":1121,"title":{},"body":{"injectables/FileService.html":{},"injectables/PasswordService.html":{}}}],["https://github.com/pratikdevelop/password",{"_index":3729,"title":{},"body":{"index.html":{}}}],["https://github.com/pratikdevelop/safepassvaultwebui/releases/download/v0.0.0/safepassvault_0.0.0_amd64.deb",{"_index":919,"title":{},"body":{"components/DownloadComponent.html":{}}}],["https://github.com/pratikdevelop/safepassvaultwebui/releases/download/v0.0.0/safepassvault_0.0.0_amd64.debsudo",{"_index":965,"title":{},"body":{"components/DownloadComponent.html":{}}}],["huambo",{"_index":5058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hubli",{"_index":4277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["huge",{"_index":2695,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["hun",{"_index":4714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hungary",{"_index":4712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["huntington",{"_index":4155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["huntsville",{"_index":3841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hyderabad",{"_index":4205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i+1",{"_index":2103,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["ia",{"_index":3936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iauliai",{"_index":4754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iceland",{"_index":4719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":1087,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["icons",{"_index":3622,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["id.service",{"_index":1366,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{}}}],["id.service.ts",{"_index":2910,"title":{},"body":{"injectables/ProofIdService.html":{},"coverage.html":{}}}],["id.service.ts:12",{"_index":2916,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["id.service.ts:17",{"_index":2918,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["id.service.ts:23",{"_index":2924,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["id.service.ts:29",{"_index":2923,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["id.service.ts:35",{"_index":2927,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["id.service.ts:41",{"_index":2921,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["id.service.ts:49",{"_index":2925,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["idaho",{"_index":3916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifiable",{"_index":2532,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["identifier",{"_index":3543,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":1554,"title":{},"body":{"components/IndexComponent.html":{}}}],["identifying",{"_index":2845,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["identity",{"_index":1397,"title":{},"body":{"components/IdProofComponent.html":{},"components/IndexComponent.html":{},"components/SideNavComponent.html":{}}}],["idn",{"_index":4595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["idnumber",{"_index":1359,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{}}}],["idnumbercontrol",{"_index":1427,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["idnumbercontrol?.setvalidators",{"_index":1429,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["idnumbercontrol?.setvalidators([validators.required",{"_index":1435,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["idnumbercontrol?.updatevalueandvalidity",{"_index":1436,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["idproof",{"_index":1353,"title":{"interfaces/IdProof.html":{}},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"coverage.html":{}}}],["idproofcomponent",{"_index":73,"title":{"components/IdProofComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["idproofform",{"_index":1406,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["idproofform'},{'name",{"_index":77,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["idproofform.component.css",{"_index":1408,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["idproofform.component.html",{"_index":1407,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["idproofformcomponent",{"_index":76,"title":{"components/IdproofformComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["idproofservice",{"_index":1380,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["ids",{"_index":551,"title":{},"body":{"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/PasswordService.html":{},"injectables/ProofIdService.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["idtype",{"_index":1360,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{}}}],["idtypes",{"_index":1409,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["if(generatortype",{"_index":2467,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["if(isauthroutes",{"_index":3786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(organizationform.get('organization_name')?.haserror('required",{"_index":2060,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["if(organizationform.get(\\'organization_name\\')?.haserror(\\'required",{"_index":2061,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["if(passwordchangeform.get('confirmnewpassword')?.haserror('mustmatch",{"_index":2215,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["if(passwordchangeform.get('confirmnewpassword')?.haserror('required",{"_index":2214,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["if(passwordchangeform.get('currentpassword')?.haserror('required",{"_index":2211,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["if(passwordchangeform.get('newpassword')?.haserror('minlength",{"_index":2213,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["if(passwordchangeform.get('newpassword')?.haserror('required",{"_index":2212,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["if(passwordchangeform.get(\\'confirmnewpassword\\')?.haserror(\\'mustmatch",{"_index":2220,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["if(passwordchangeform.get(\\'confirmnewpassword\\')?.haserror(\\'required",{"_index":2219,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["if(passwordchangeform.get(\\'currentpassword\\')?.haserror(\\'required",{"_index":2216,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["if(passwordchangeform.get(\\'newpassword\\')?.haserror(\\'minlength",{"_index":2218,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["if(passwordchangeform.get(\\'newpassword\\')?.haserror(\\'required",{"_index":2217,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["if(result",{"_index":3380,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["if(this.isbreakpoints",{"_index":2907,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(this.profileform.invalid",{"_index":997,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["ignacio",{"_index":5421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ikebukuro",{"_index":4456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ikeja",{"_index":4637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["il",{"_index":3923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illinois",{"_index":3922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image",{"_index":1448,"title":{},"body":{"components/IdproofformComponent.html":{},"components/UserProfileComponent.html":{}}}],["images",{"_index":2848,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["immediate",{"_index":2036,"title":{},"body":{"components/NotificationComponent.html":{}}}],["imphal",{"_index":4301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":1061,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/SideNavComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["implementation",{"_index":1723,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["implemented",{"_index":1055,"title":{},"body":{"components/FileExplorerComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["implements",{"_index":151,"title":{},"body":{"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["import",{"_index":21,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["important",{"_index":1330,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{}}}],["importprovidersfrom([translatemodule.forroot",{"_index":3775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["imports:[matbuttonmodule",{"_index":1370,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["impossible",{"_index":1502,"title":{},"body":{"components/IndexComponent.html":{}}}],["improve",{"_index":1486,"title":{},"body":{"components/IndexComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["improvements",{"_index":890,"title":{},"body":{"components/DownloadComponent.html":{}}}],["inaccessible",{"_index":3276,"title":{},"body":{"components/SupportComponent.html":{}}}],["include",{"_index":2472,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["included",{"_index":444,"title":{},"body":{"components/BillingDetailsComponent.html":{}}}],["includeseparators",{"_index":2351,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["including",{"_index":2838,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ind",{"_index":4201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["independence",{"_index":4012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":157,"title":{"index.html":{}},"body":{"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["index'},{'name",{"_index":79,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["index.component.css",{"_index":1451,"title":{},"body":{"components/IndexComponent.html":{}}}],["index.component.html",{"_index":1450,"title":{},"body":{"components/IndexComponent.html":{}}}],["indexcomponent",{"_index":78,"title":{"components/IndexComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["india",{"_index":4199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indiana",{"_index":3928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indianapolis",{"_index":3929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indicators",{"_index":3696,"title":{},"body":{"index.html":{}}}],["individual",{"_index":2487,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{}}}],["individuals",{"_index":2515,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["indonesia",{"_index":4593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indore",{"_index":4289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["industry",{"_index":3262,"title":{},"body":{"components/SupportComponent.html":{},"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["information",{"_index":840,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/NotesComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{},"components/UserProfileComponent.html":{}}}],["infrastructure",{"_index":2764,"title":{},"body":{"injectables/PlanService.html":{}}}],["initialize",{"_index":2605,"title":{},"body":{"injectables/PasswordService.html":{},"components/RolesPermissionsComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["initializeroles",{"_index":2963,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["initializeroles(permissions",{"_index":2970,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["inject",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["inject(activatedroute",{"_index":1454,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SideNavComponent.html":{}}}],["inject(authservice",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"interfaces/Window.html":{}}}],["inject(breakpointobserver",{"_index":782,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["inject(cardservice",{"_index":506,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["inject(changedetectorref",{"_index":508,"title":{},"body":{"components/CardComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/LoginComponent.html":{},"components/NotesComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PricingPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["inject(clipboard",{"_index":2369,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["inject(commonservice",{"_index":425,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/DashboardComponent.html":{},"components/FileExplorerComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/ProfileComponent.html":{},"components/SecurityComponent.html":{},"components/SideNavComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["inject(domsanitizer",{"_index":3356,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["inject(fileservice",{"_index":1047,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{}}}],["inject(folderservice",{"_index":3221,"title":{},"body":{"components/SideNavComponent.html":{}}}],["inject(formbuilder",{"_index":982,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["inject(httpclient",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(mat_dialog_data",{"_index":603,"title":{},"body":{"components/CardComponent.html":{},"components/EditProfileComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["inject(matdialog",{"_index":523,"title":{},"body":{"components/CardComponent.html":{},"components/DashboardComponent.html":{},"components/FileUploadComponent.html":{},"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["inject(matdialogref",{"_index":980,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/NotesFormComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["inject(matsnackbar",{"_index":984,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{}}}],["inject(noteservice",{"_index":1957,"title":{},"body":{"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["inject(organizationservice",{"_index":1617,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/OrganizationComponent.html":{},"components/UsersComponent.html":{}}}],["inject(passwordservice",{"_index":2258,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewPasswordComponent.html":{}}}],["inject(planservice",{"_index":2799,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["inject(proofidservice",{"_index":1381,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{}}}],["inject(router",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"components/SideNavComponent.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["inject(securityquestionservice",{"_index":3077,"title":{},"body":{"components/SecurityComponent.html":{}}}],["inject(translateservice",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["injectable",{"_index":251,"title":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"injectables/FileService.html":{},"injectables/FolderService.html":{},"injectables/NoteService.html":{},"injectables/OrganizationService.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"injectables/RolesPermissionsService.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"injectables/FileService.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"injectables/NoteService.html":{},"injectables/OrganizationService.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"injectables/RolesPermissionsService.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{},"coverage.html":{}}}],["injectables",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"injectables/FileService.html":{},"injectables/FolderService.html":{},"injectables/NoteService.html":{},"injectables/OrganizationService.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"injectables/RolesPermissionsService.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{},"overview.html":{}}}],["input",{"_index":1196,"title":{},"body":{"components/FileUploadComponent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{}}}],["inputs",{"_index":3485,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["insights",{"_index":2701,"title":{},"body":{"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{}}}],["install",{"_index":907,"title":{},"body":{"components/DownloadComponent.html":{},"injectables/PasswordService.html":{},"index.html":{}}}],["installation",{"_index":950,"title":{},"body":{"components/DownloadComponent.html":{}}}],["installed",{"_index":934,"title":{},"body":{"components/DownloadComponent.html":{},"components/MfaSettingComponent.html":{},"index.html":{}}}],["installer",{"_index":910,"title":{},"body":{"components/DownloadComponent.html":{}}}],["instanceof",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"injectables/PlanService.html":{},"interfaces/Window.html":{}}}],["instantly",{"_index":2662,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["instructions",{"_index":915,"title":{},"body":{"components/DownloadComponent.html":{},"components/MfaSettingComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["integrate",{"_index":3679,"title":{},"body":{"index.html":{}}}],["integrates",{"_index":1508,"title":{},"body":{"components/IndexComponent.html":{}}}],["integrating",{"_index":3716,"title":{},"body":{"index.html":{}}}],["integration",{"_index":1819,"title":{},"body":{"components/MfaSettingComponent.html":{},"index.html":{}}}],["interactive",{"_index":2660,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["interface",{"_index":233,"title":{"interfaces/Folder.html":{},"interfaces/IdProof.html":{},"interfaces/Window.html":{}},"body":{"components/AppComponent.html":{},"components/DownloadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":1237,"title":{},"body":{"interfaces/Folder.html":{},"interfaces/IdProof.html":{},"interfaces/Window.html":{},"overview.html":{}}}],["international",{"_index":5283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internet",{"_index":955,"title":{},"body":{"components/DownloadComponent.html":{}}}],["interval",{"_index":2731,"title":{},"body":{"injectables/PlanService.html":{},"components/PricingPageComponent.html":{}}}],["intervalcount",{"_index":2733,"title":{},"body":{"injectables/PlanService.html":{}}}],["introduces",{"_index":2694,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["introduction",{"_index":2834,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["intuitive",{"_index":867,"title":{},"body":{"components/DownloadComponent.html":{},"index.html":{}}}],["invalid",{"_index":2160,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{}}}],["invalidpassword",{"_index":1710,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordChangeComponent.html":{}}}],["inverness",{"_index":4185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invitation",{"_index":81,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["invitation/${organizationid}/${recipientid",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["invitationacceptcomponent",{"_index":80,"title":{"components/InvitationAcceptComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["invitationid",{"_index":1600,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"injectables/OrganizationService.html":{}}}],["invitations",{"_index":453,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/NotificationComponent.html":{}}}],["inviteuser",{"_index":2977,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["iowa",{"_index":3935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["irbid",{"_index":4917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ireland",{"_index":4193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["irl",{"_index":4682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isallselected",{"_index":477,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["isauthroutes",{"_index":3783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isbreakpoint",{"_index":776,"title":{},"body":{"components/DashboardComponent.html":{}}}],["isbreakpoints",{"_index":2887,"title":{},"body":{"components/ProfileComponent.html":{}}}],["iselectron",{"_index":5426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isl",{"_index":4721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["islam",{"_index":3810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["island",{"_index":4025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["islands",{"_index":5327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["islet",{"_index":5299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isloading",{"_index":1916,"title":{},"body":{"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{}}}],["ispublicroute",{"_index":3790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isr",{"_index":4665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["israel",{"_index":4663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isresettingpassowrd",{"_index":2934,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["issectionopen",{"_index":3201,"title":{},"body":{"components/SideNavComponent.html":{}}}],["issectionopen(section",{"_index":3207,"title":{},"body":{"components/SideNavComponent.html":{}}}],["issidebaropen",{"_index":777,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["isspecial",{"_index":1239,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{}}}],["issue",{"_index":1402,"title":{},"body":{"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{}}}],["issued",{"_index":1400,"title":{},"body":{"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{}}}],["issuedate",{"_index":1361,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{}}}],["issuedby",{"_index":1362,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{}}}],["issues",{"_index":901,"title":{},"body":{"components/DownloadComponent.html":{}}}],["istanbul",{"_index":4535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["istaravshan",{"_index":4862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["istaticmethods",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["istokensent",{"_index":2935,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["isvalid",{"_index":1708,"title":{},"body":{"components/LoginComponent.html":{}}}],["it's",{"_index":1823,"title":{},"body":{"components/MfaSettingComponent.html":{},"injectables/PlanService.html":{},"components/ViewPasswordComponent.html":{}}}],["it\\'s",{"_index":1850,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["ita",{"_index":4496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["italy",{"_index":4494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itanagar",{"_index":4211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item",{"_index":1079,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/NotesComponent.html":{},"injectables/SharedItemService.html":{},"components/ViewNoteCompoent.html":{}}}],["item.service",{"_index":3154,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["item.service.ts",{"_index":3186,"title":{},"body":{"injectables/SharedItemService.html":{},"coverage.html":{}}}],["item.service.ts:10",{"_index":3187,"title":{},"body":{"injectables/SharedItemService.html":{}}}],["item.service.ts:14",{"_index":3189,"title":{},"body":{"injectables/SharedItemService.html":{}}}],["item?._id",{"_index":1973,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["itemid",{"_index":1116,"title":{},"body":{"injectables/FileService.html":{},"components/ShareDialogComponent.html":{}}}],["items",{"_index":1082,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ShareDialogComponent.html":{}}}],["itemtype",{"_index":3157,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["iterate",{"_index":808,"title":{},"body":{"components/DashboardComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["ivory",{"_index":5125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["işli",{"_index":4538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["j",{"_index":5281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jabalpur",{"_index":4291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jackson",{"_index":4003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jacksonville",{"_index":3896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jaipur",{"_index":4341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jalal",{"_index":4853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jalalabad",{"_index":3816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jalandhar",{"_index":4337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jam",{"_index":5342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jamaica",{"_index":5340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jamshedpur",{"_index":4268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jane",{"_index":1575,"title":{},"body":{"components/IndexComponent.html":{}}}],["japan",{"_index":4450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["javascript",{"_index":3710,"title":{},"body":{"index.html":{}}}],["jaya",{"_index":4678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jeddah",{"_index":4652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jelgava",{"_index":4747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jersey",{"_index":4041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jerusalem",{"_index":4668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jh",{"_index":4266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jharkhand",{"_index":4265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jinja",{"_index":5029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jodhpur",{"_index":4343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["johannesburg",{"_index":4512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["john",{"_index":1568,"title":{},"body":{"components/IndexComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["john's",{"_index":5272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["johnson",{"_index":1580,"title":{},"body":{"components/IndexComponent.html":{}}}],["join",{"_index":555,"title":{},"body":{"components/CardComponent.html":{},"components/DownloadComponent.html":{},"components/NotesComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["join(this.includeseparators",{"_index":2445,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["joliet",{"_index":3927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jonesboro",{"_index":3864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jor",{"_index":4914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jordan",{"_index":4912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jos",{"_index":5388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jose",{"_index":3871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jowai",{"_index":4310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jpn",{"_index":4452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":2268,"title":{},"body":{"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/TagFormCompoent.html":{},"dependencies.html":{}}}],["json",{"_index":179,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["json.stringify(this.uploadform.get('sharedwith')?.value",{"_index":1215,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["juan",{"_index":5350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["juneau",{"_index":3847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jurm",{"_index":3820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jurong",{"_index":4581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["järve",{"_index":4740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ka",{"_index":4273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kabul",{"_index":3802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kabwe",{"_index":5066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kadıköy",{"_index":4536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kailua",{"_index":3913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kakata",{"_index":5116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kakching",{"_index":4303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kalgoorlie",{"_index":4421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kallithea",{"_index":4702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kampala",{"_index":5026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kandahar",{"_index":3806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kandy",{"_index":4995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kaneohe",{"_index":3914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kanpur",{"_index":4373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kansas",{"_index":3943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karaganda",{"_index":4840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karimnagar",{"_index":4364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karnataka",{"_index":4272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kasane",{"_index":5073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["katherine",{"_index":4447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kathmandu",{"_index":4985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kaunas",{"_index":4752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kauniainen",{"_index":4711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kayes",{"_index":5203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kaz",{"_index":4836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kazakhstan",{"_index":4835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kb",{"_index":1070,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["kearney",{"_index":4026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keep",{"_index":2465,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{}}}],["ken",{"_index":5019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kenema",{"_index":5109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kenosha",{"_index":4164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kentucky",{"_index":3950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kenya",{"_index":5017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kerala",{"_index":4279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ketchikan",{"_index":3849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":851,"title":{},"body":{"components/DownloadComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{}}}],["kgz",{"_index":4850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["khammam",{"_index":4363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["khartoum",{"_index":5007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kheima",{"_index":4646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["khimki",{"_index":4507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["khm",{"_index":4960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["khobar",{"_index":4654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["khujand",{"_index":4860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["khulna",{"_index":4632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["khumri",{"_index":3824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kigali",{"_index":5042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kingdom",{"_index":4172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kingston",{"_index":4434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kingstown",{"_index":5304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kinshasa",{"_index":5170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kisangani",{"_index":5174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kismayo",{"_index":5002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kitts",{"_index":5275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kitwe",{"_index":5064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kl",{"_index":4280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["klaipeda",{"_index":4753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["klang",{"_index":4680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["klingon",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["kna",{"_index":5278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["knowing",{"_index":1584,"title":{},"body":{"components/IndexComponent.html":{}}}],["knoxville",{"_index":4118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kochi",{"_index":4282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kohima",{"_index":4322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kohtla",{"_index":4739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kolasib",{"_index":4318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kolkata",{"_index":4386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kollam",{"_index":4284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kopavogur",{"_index":4723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["korba",{"_index":4235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["koudougou",{"_index":5219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kozhikode",{"_index":4283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["košice",{"_index":4759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kpalim",{"_index":5123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kragujevac",{"_index":4776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kranj",{"_index":4768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ks",{"_index":3944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kuala",{"_index":4947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kulhudhuffushi",{"_index":4940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kullu",{"_index":4262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kulob",{"_index":4861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kumanovo",{"_index":4806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kumasi",{"_index":5050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kuta",{"_index":4599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kutaisi",{"_index":4832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kuwait",{"_index":4892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kwekwe",{"_index":5016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kwt",{"_index":4894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ky",{"_index":3951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kyrgyzstan",{"_index":4848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["la",{"_index":3958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":1924,"title":{},"body":{"components/NotesComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["lafayette",{"_index":3963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lagos",{"_index":4636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lahaina",{"_index":3915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lahore",{"_index":4623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lake",{"_index":3964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lakewood",{"_index":3879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lalitpur",{"_index":4987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landscape",{"_index":2478,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["lanka",{"_index":4990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lao",{"_index":4969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["laos",{"_index":4967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["laramie",{"_index":4170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["larger",{"_index":1300,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["las",{"_index":4029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lashkar",{"_index":3831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":3300,"title":{},"body":{"components/SupportComponent.html":{}}}],["lastname",{"_index":3255,"title":{},"body":{"components/SupportComponent.html":{}}}],["latakia",{"_index":4911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["later",{"_index":677,"title":{},"body":{"injectables/CardService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/MfaSettingComponent.html":{},"injectables/NoteService.html":{},"injectables/ProofIdService.html":{},"index.html":{}}}],["latest",{"_index":886,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{}}}],["latvia",{"_index":4741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["launceston",{"_index":4431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["launch",{"_index":3734,"title":{},"body":{"index.html":{}}}],["law",{"_index":2872,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["layer",{"_index":2458,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["layout",{"_index":3691,"title":{},"body":{"index.html":{}}}],["lazio",{"_index":4497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lbn",{"_index":4900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lbr",{"_index":5113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lca",{"_index":5294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["le",{"_index":4474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lebanon",{"_index":4898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":1089,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["legend",{"_index":32,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["leinster",{"_index":4683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length",{"_index":1706,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["leone",{"_index":5104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["les",{"_index":5367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lesotho",{"_index":5081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["less",{"_index":2667,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["let's",{"_index":3305,"title":{},"body":{"components/SupportComponent.html":{}}}],["let\\'s",{"_index":3313,"title":{},"body":{"components/SupportComponent.html":{}}}],["letter",{"_index":2190,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["letters",{"_index":2450,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{}}}],["level",{"_index":2382,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"index.html":{}}}],["lexington",{"_index":3953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lezion",{"_index":4671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["león",{"_index":5381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liberia",{"_index":5111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liberta",{"_index":5274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libertad",{"_index":5403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libraries",{"_index":3739,"title":{},"body":{"index.html":{}}}],["library",{"_index":3711,"title":{},"body":{"index.html":{}}}],["libreville",{"_index":5178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":3618,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["licenses",{"_index":2852,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["liepaja",{"_index":4746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["life",{"_index":1588,"title":{},"body":{"components/IndexComponent.html":{}}}],["lilongwe",{"_index":5099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limerick",{"_index":4686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lincoln",{"_index":4023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":1910,"title":{},"body":{"injectables/NoteService.html":{},"components/PasswordChangeComponent.html":{},"injectables/PasswordService.html":{},"components/ResetPasswordComponent.html":{},"components/SupportComponent.html":{}}}],["link?id=${id}&token=${token",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["linkverified",{"_index":2116,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["linux",{"_index":860,"title":{},"body":{"components/DownloadComponent.html":{}}}],["lisbon",{"_index":4729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lisburn",{"_index":4196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":1075,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/HeaderComponent-1.html":{},"components/MfaSettingComponent.html":{},"components/SideNavComponent.html":{}}}],["literal",{"_index":1154,"title":{},"body":{"components/FileUploadComponent.html":{},"components/LoginComponent.html":{},"components/PasswordChangeComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{}}}],["lithuania",{"_index":4748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["little",{"_index":3859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liverpool",{"_index":4178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ljubljana",{"_index":4765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lka",{"_index":4992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lloyd",{"_index":5282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loader",{"_index":3601,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loadfiles",{"_index":1019,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["loading",{"_index":1666,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordFormComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SecurityComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{}}}],["loadorganizations",{"_index":3321,"title":{},"body":{"components/UserFormComponent.html":{}}}],["loadsecurityquestions",{"_index":3065,"title":{},"body":{"components/SecurityComponent.html":{}}}],["loadswaggerui",{"_index":159,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["loadusers",{"_index":3136,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["locally",{"_index":2863,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["localstorage.getitem(\"token",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["localstorage.getitem('token",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"components/IndexComponent.html":{},"miscellaneous/variables.html":{}}}],["localstorage.getitem('token')?.tostring",{"_index":1311,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["localstorage.removeitem('token",{"_index":1319,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["localstorage.setitem('token",{"_index":1649,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["locate",{"_index":1995,"title":{},"body":{"components/NotesComponent.html":{}}}],["lock",{"_index":1350,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/SideNavComponent.html":{}}}],["lock_open",{"_index":1346,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["log",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent-1.html":{},"components/MfaSettingComponent.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"components/SupportComponent.html":{}}}],["logged",{"_index":1248,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{}}}],["logging",{"_index":1322,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/LoginComponent.html":{},"injectables/PlanService.html":{}}}],["logic",{"_index":718,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/LoginComponent.html":{},"components/SideNavComponent.html":{},"components/UserFormComponent.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SupportComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":84,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["login(loginformvalue",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":1664,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":83,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["loginform",{"_index":1667,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginformvalue",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginformvalue).pipe",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["logins",{"_index":1507,"title":{},"body":{"components/IndexComponent.html":{}}}],["logout",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["lom",{"_index":5121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["london",{"_index":4177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["long",{"_index":2187,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["longer",{"_index":1563,"title":{},"body":{"components/IndexComponent.html":{}}}],["los",{"_index":3866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["louis",{"_index":4010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["louisiana",{"_index":3957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["louisville",{"_index":3952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowell",{"_index":3983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowercase",{"_index":2191,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{}}}],["lso",{"_index":5083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ltu",{"_index":4750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["luanda",{"_index":5056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["luang",{"_index":4971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lubango",{"_index":5059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lubumbashi",{"_index":5171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lucia",{"_index":5292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lucknow",{"_index":4372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ludhiana",{"_index":4335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lunglei",{"_index":4316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lusaka",{"_index":5063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lva",{"_index":4743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ma",{"_index":3978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["macedonia",{"_index":4801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mackay",{"_index":4415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["macon",{"_index":3908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["macorís",{"_index":5359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["macos",{"_index":861,"title":{},"body":{"components/DownloadComponent.html":{}}}],["made",{"_index":1516,"title":{},"body":{"components/IndexComponent.html":{}}}],["madhya",{"_index":4286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["madison",{"_index":4162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["madrid",{"_index":4527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["madurai",{"_index":4357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maharashtra",{"_index":4293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maiden",{"_index":3104,"title":{},"body":{"components/SecurityComponent.html":{}}}],["main",{"_index":3284,"title":{},"body":{"components/SupportComponent.html":{}}}],["maine",{"_index":3966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maintain",{"_index":3686,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":2545,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["maip",{"_index":4575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":947,"title":{},"body":{"components/DownloadComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["makeni",{"_index":5110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["making",{"_index":1500,"title":{},"body":{"components/IndexComponent.html":{}}}],["mal",{"_index":4937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["malabo",{"_index":5186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["malappuram",{"_index":4285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["malawi",{"_index":5096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["malaysia",{"_index":4672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maldives",{"_index":4934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mali",{"_index":5198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mamit",{"_index":4319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manage",{"_index":833,"title":{},"body":{"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/IndexComponent.html":{},"components/NotesComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SupportComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["management",{"_index":828,"title":{},"body":{"components/DownloadComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{},"index.html":{},"properties.html":{}}}],["manager",{"_index":1463,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["managing",{"_index":898,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["managua",{"_index":5380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manali",{"_index":4263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manama",{"_index":4888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manchester",{"_index":4037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mandalay",{"_index":4955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mandurah",{"_index":4419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mangaluru",{"_index":4276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mangan",{"_index":4350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manila",{"_index":4589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manipur",{"_index":4300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manzini",{"_index":5092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PlanService.html":{}}}],["map((note",{"_index":553,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["map((pass",{"_index":569,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["map((response",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PlanService.html":{}}}],["map(x",{"_index":2417,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["mapusa",{"_index":4243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maputsoe",{"_index":5086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mar",{"_index":4565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maradi",{"_index":5210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["margao",{"_index":4238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["margin",{"_index":1076,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/RolesPermissionsComponent.html":{}}}],["maribor",{"_index":4766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["marigot",{"_index":5290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["marsh",{"_index":5325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mary",{"_index":4868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maryland",{"_index":3970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["masaya",{"_index":5382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maseru",{"_index":5084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["massachusetts",{"_index":3977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["master",{"_index":2484,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{}}}],["mastercard",{"_index":763,"title":{},"body":{"components/CreditCardFormComponent.html":{}}}],["mat",{"_index":1086,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SideNavComponent.html":{}}}],["mat_dialog_data",{"_index":535,"title":{},"body":{"components/CardComponent.html":{},"components/EditProfileComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["matautocompletemodule",{"_index":731,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{}}}],["matautocompleteselectedevent",{"_index":2243,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["matbuttonmodule",{"_index":418,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["matbuttonmodule,matformfieldmodule",{"_index":714,"title":{},"body":{"components/CreateFolderDialogComponent.html":{}}}],["matbuttonmodule,maticonmodule",{"_index":431,"title":{},"body":{"components/BillingDetailsComponent.html":{}}}],["matbuttontogglemodule",{"_index":2771,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["matcardmodule",{"_index":417,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/PasswordChangeComponent.html":{},"components/SecurityComponent.html":{}}}],["match",{"_index":1660,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{}}}],["matcheckboxmodule",{"_index":461,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["matches",{"_index":811,"title":{},"body":{"components/DashboardComponent.html":{}}}],["matching",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["matchiplistbox",{"_index":1136,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["matchipsmodule",{"_index":732,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{}}}],["matdialog",{"_index":470,"title":{},"body":{"components/CardComponent.html":{},"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordFormComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["matdialogmodule",{"_index":458,"title":{},"body":{"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordFormComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["matdialogmodule,headercomponent",{"_index":803,"title":{},"body":{"components/DashboardComponent.html":{}}}],["matdialogref",{"_index":704,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/NotesFormComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{}}}],["matdrawer",{"_index":786,"title":{},"body":{"components/DashboardComponent.html":{}}}],["matdrawermode",{"_index":792,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["material",{"_index":3621,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["matexpansionmodule",{"_index":2629,"title":{},"body":{"components/PasswordStrengthComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["matformfieldmodule",{"_index":694,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{}}}],["matformfieldmodule,matselectmodule,mattoolbarmodule",{"_index":3155,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["maticonmodule",{"_index":419,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["matinputmodule",{"_index":459,"title":{},"body":{"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["matinputmodule,commonmodule",{"_index":715,"title":{},"body":{"components/CreateFolderDialogComponent.html":{}}}],["matlistmodule",{"_index":771,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{}}}],["matmenumodule",{"_index":462,"title":{},"body":{"components/CardComponent.html":{},"components/DashboardComponent.html":{},"components/FileExplorerComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["matoptionmodule",{"_index":734,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/IdproofformComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotificationComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{}}}],["matpaginator",{"_index":3436,"title":{},"body":{"components/UsersComponent.html":{}}}],["matpaginatormodule",{"_index":460,"title":{},"body":{"components/CardComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/OrganizationsComponent.html":{},"components/UsersComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["matprogressbarmodule",{"_index":2628,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["matprogressspinnermodule",{"_index":1663,"title":{},"body":{"components/LoginComponent.html":{}}}],["matradiomodule",{"_index":2343,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PricingPageComponent.html":{}}}],["matselectmodule",{"_index":733,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotificationComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/UserFormComponent.html":{}}}],["matsidenavmodule",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{},"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["matslidermodule",{"_index":1736,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["matslidetogglemodule",{"_index":1737,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["matsnackbar",{"_index":986,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{}}}],["matsnackbarmodule",{"_index":770,"title":{},"body":{"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{}}}],["matsort",{"_index":3440,"title":{},"body":{"components/UsersComponent.html":{}}}],["matsortmodule",{"_index":457,"title":{},"body":{"components/CardComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["matstepper",{"_index":1621,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["matsteppermodule",{"_index":1596,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{}}}],["mattabledatasource",{"_index":1368,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/UsersComponent.html":{}}}],["mattabledatasource(response.proofids",{"_index":1384,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["mattablemodule",{"_index":456,"title":{},"body":{"components/CardComponent.html":{},"components/FileExplorerComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["matter",{"_index":2690,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["mattoolbarmodule",{"_index":693,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{}}}],["mattoolbarmodule,matdialogmodule",{"_index":713,"title":{},"body":{"components/CreateFolderDialogComponent.html":{}}}],["maun",{"_index":5072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mauritius",{"_index":5190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["max",{"_index":1296,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["mayi",{"_index":5173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maymana",{"_index":3828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mazar",{"_index":3813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mbabane",{"_index":5091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mbarara",{"_index":5028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mbaïki",{"_index":5158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mbeya",{"_index":5038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mbuji",{"_index":5172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["md",{"_index":3971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mda",{"_index":4817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mdv",{"_index":4936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["measures",{"_index":1544,"title":{},"body":{"components/IndexComponent.html":{}}}],["mechanism",{"_index":1519,"title":{},"body":{"components/IndexComponent.html":{}}}],["mechanisms",{"_index":3675,"title":{},"body":{"index.html":{}}}],["media",{"_index":1289,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/PasswordGenratorComponent.html":{}}}],["medium",{"_index":2657,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["meerut",{"_index":4376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meets",{"_index":952,"title":{},"body":{"components/DownloadComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["meghalaya",{"_index":4306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["melbourne",{"_index":4404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memphis",{"_index":4117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu",{"_index":433,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/FileExplorerComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/SecurityComponent.html":{},"components/SupportComponent.html":{},"components/UserProfileComponent.html":{}}}],["meridian",{"_index":3919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mesa",{"_index":3854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/SupportComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["method",{"_index":1787,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["methods",{"_index":158,"title":{},"body":{"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"injectables/FolderService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["metro",{"_index":4588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metropolitan",{"_index":4572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mex",{"_index":4490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mexico",{"_index":4046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mfa",{"_index":86,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["mfadata",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"components/MfaVerificationComponent.html":{}}}],["mfaenabled",{"_index":1765,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["mfaform",{"_index":1668,"title":{},"body":{"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["mfamethod",{"_index":1669,"title":{},"body":{"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["mfamethodcontrol",{"_index":1782,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["mfamethodcontrol?.disable",{"_index":1785,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["mfamethodcontrol?.enable",{"_index":1784,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["mfasettingcomponent",{"_index":85,"title":{"components/MfaSettingComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["mfaverificationcomponent",{"_index":88,"title":{"components/MfaVerificationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["mh",{"_index":4294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mi",{"_index":3985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miami",{"_index":3897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["michael",{"_index":1585,"title":{},"body":{"components/IndexComponent.html":{}}}],["michigan",{"_index":3984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["middletown",{"_index":3892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miguel",{"_index":5402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mildura",{"_index":4408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["millions",{"_index":1464,"title":{},"body":{"components/IndexComponent.html":{}}}],["milwaukee",{"_index":4161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":1290,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{}}}],["mind",{"_index":1526,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["minh",{"_index":4616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minneapolis",{"_index":3995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minnesota",{"_index":3993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minot",{"_index":4072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":3639,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["miskolc",{"_index":4718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mismatch",{"_index":1614,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["missing",{"_index":2157,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["mississauga",{"_index":4469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mississippi",{"_index":4001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["missoula",{"_index":4016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["missouri",{"_index":4008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mitchell",{"_index":4113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mix",{"_index":1496,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{}}}],["mixco",{"_index":5407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mizoram",{"_index":4313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mkd",{"_index":4803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ml",{"_index":4307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mli",{"_index":5200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mm/yyyy",{"_index":617,"title":{},"body":{"components/CardComponent.html":{}}}],["mmr",{"_index":4953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mn",{"_index":3994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mne",{"_index":4795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mng",{"_index":4977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mo",{"_index":4009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moanda",{"_index":5181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mobile",{"_index":1511,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":778,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["model",{"_index":1242,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["modified",{"_index":2616,"title":{},"body":{"injectables/PasswordService.html":{},"components/ViewPasswordComponent.html":{}}}],["modify",{"_index":3279,"title":{},"body":{"components/SupportComponent.html":{},"index.html":{}}}],["modules",{"_index":3747,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mogadishu",{"_index":5000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moines",{"_index":3938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mokokchung",{"_index":4324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moldova",{"_index":4815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mombasa",{"_index":5021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moment",{"_index":853,"title":{},"body":{"components/DownloadComponent.html":{}}}],["mongolia",{"_index":4975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["monitor",{"_index":1485,"title":{},"body":{"components/IndexComponent.html":{},"components/SupportComponent.html":{}}}],["monitoring",{"_index":3742,"title":{},"body":{"index.html":{}}}],["monrovia",{"_index":5114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["montana",{"_index":4013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["montego",{"_index":5343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["montenegro",{"_index":4793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["montgomery",{"_index":3840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["month",{"_index":2732,"title":{},"body":{"injectables/PlanService.html":{},"components/PricingPageComponent.html":{}}}],["monthly",{"_index":2737,"title":{},"body":{"injectables/PlanService.html":{},"components/PricingPageComponent.html":{}}}],["mopti",{"_index":5204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1471,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["more_vert",{"_index":626,"title":{},"body":{"components/CardComponent.html":{}}}],["morgantown",{"_index":4156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moroni",{"_index":5253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moscow",{"_index":4504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mostar",{"_index":4792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mother's",{"_index":3103,"title":{},"body":{"components/SecurityComponent.html":{}}}],["mother\\'s",{"_index":3113,"title":{},"body":{"components/SecurityComponent.html":{}}}],["moundou",{"_index":5149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mount",{"_index":4106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mouseevent",{"_index":1674,"title":{},"body":{"components/LoginComponent.html":{},"components/SideNavComponent.html":{}}}],["moutsamoudou",{"_index":5254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mp",{"_index":4287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ms",{"_index":4002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mt",{"_index":4014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["much",{"_index":1582,"title":{},"body":{"components/IndexComponent.html":{}}}],["muharraq",{"_index":4889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multan",{"_index":4626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multi",{"_index":3030,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"components/ShareDialogComponent.html":{}}}],["multiple",{"_index":186,"title":{},"body":{"components/ApiDocsComponent.html":{},"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{}}}],["multitude",{"_index":2541,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["mumbai",{"_index":4295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["munich",{"_index":4461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["murray",{"_index":4426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mus",{"_index":5192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["musanze",{"_index":5045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["muscat",{"_index":4881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["muzaffarpur",{"_index":4227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mwi",{"_index":5098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["myanmar",{"_index":4951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mys",{"_index":4673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysuru",{"_index":4275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mz",{"_index":4314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mzuzu",{"_index":5101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["móstoles",{"_index":4530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mörön",{"_index":4981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n'dalatando",{"_index":5057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n'djamena",{"_index":5148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nadu",{"_index":4354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nagaland",{"_index":4320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nagaon",{"_index":4221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nagpur",{"_index":4297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["naharlagun",{"_index":4212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nainital",{"_index":4381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nairobi",{"_index":5020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nakhon",{"_index":4608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nakuru",{"_index":5022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nam",{"_index":5076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["namchi",{"_index":4349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["names",{"_index":2521,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{}}}],["namibia",{"_index":5074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nampa",{"_index":3918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nang",{"_index":4619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nangarhar",{"_index":3815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["naperville",{"_index":3925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["narva",{"_index":4738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nashik",{"_index":4298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nashua",{"_index":4038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nashville",{"_index":4116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nassau",{"_index":5323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["native",{"_index":3689,"title":{},"body":{"index.html":{}}}],["nav",{"_index":3194,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav'},{'name",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["nav.component",{"_index":798,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nav.component.html",{"_index":3198,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts",{"_index":3193,"title":{},"body":{"components/SideNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:101",{"_index":3211,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:44",{"_index":3217,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:45",{"_index":3222,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:46",{"_index":3218,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:47",{"_index":3225,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:48",{"_index":3224,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:49",{"_index":3219,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:50",{"_index":3220,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:52",{"_index":3209,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:64",{"_index":3223,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:72",{"_index":3215,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:84",{"_index":3213,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:88",{"_index":3208,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:92",{"_index":3206,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:97",{"_index":3216,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav/side",{"_index":797,"title":{},"body":{"components/DashboardComponent.html":{},"components/SideNavComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1814,"title":{},"body":{"components/MfaSettingComponent.html":{},"index.html":{}}}],["navigatetoplan",{"_index":2778,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["navigatetoplan(buttonlink",{"_index":2781,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["navigatetotrial",{"_index":2779,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["navigatetotrial(triallink",{"_index":2785,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["navigation",{"_index":871,"title":{},"body":{"components/DownloadComponent.html":{}}}],["navigationend",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["naypyidaw",{"_index":4956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nc",{"_index":4060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nd",{"_index":4068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ndola",{"_index":5065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ne",{"_index":4021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nebraska",{"_index":4020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["necessary",{"_index":1828,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["need",{"_index":1552,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["needed",{"_index":880,"title":{},"body":{"components/DownloadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{}}}],["needs",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"components/DownloadComponent.html":{},"components/PricingPageComponent.html":{}}}],["needs.key",{"_index":964,"title":{},"body":{"components/DownloadComponent.html":{}}}],["negombo",{"_index":4996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nellore",{"_index":4209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nepal",{"_index":4982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ner",{"_index":5207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["netherlands",{"_index":4516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["network",{"_index":2757,"title":{},"body":{"injectables/PlanService.html":{}}}],["nevada",{"_index":4027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["never",{"_index":3264,"title":{},"body":{"components/SupportComponent.html":{}}}],["neves",{"_index":5241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nevis",{"_index":5276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/DownloadComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["newark",{"_index":3891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newcastle",{"_index":4396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newcomment",{"_index":3481,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["newpassword",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordChangeComponent-1.html":{}}}],["newpassword).subscribe",{"_index":2206,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["newpasswordobject",{"_index":2308,"title":{},"body":{"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/TagFormCompoent.html":{}}}],["newport",{"_index":4146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["news",{"_index":4147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newtag",{"_index":3482,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["newtownabbey",{"_index":4197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next",{"_index":999,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/MfaSettingComponent.html":{},"components/OrganizationComponent.html":{},"components/SideNavComponent.html":{},"miscellaneous/variables.html":{}}}],["next(authrequest",{"_index":3764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req",{"_index":3766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nezahualcóyotl",{"_index":4492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nga",{"_index":4635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngonchanges",{"_index":3483,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["ngonchanges(changes",{"_index":3493,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["ngoninit",{"_index":160,"title":{},"body":{"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["ngoptimizedimage",{"_index":3336,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["ngozi",{"_index":5226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngx",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{}}}],["nh",{"_index":4036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ni",{"_index":4775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["niamey",{"_index":5208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nic",{"_index":5379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nicaragua",{"_index":5377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nickname",{"_index":3108,"title":{},"body":{"components/SecurityComponent.html":{}}}],["niger",{"_index":5205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nigeria",{"_index":4634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nikši",{"_index":4797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nir",{"_index":4194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nitra",{"_index":4760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nizamabad",{"_index":4362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nizwa",{"_index":4884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nj",{"_index":4042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nl",{"_index":4321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nld",{"_index":4518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nm",{"_index":4047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodatatemplate",{"_index":1985,"title":{},"body":{"components/NotesComponent.html":{}}}],["node.js",{"_index":3722,"title":{},"body":{"index.html":{}}}],["noire",{"_index":5164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":1292,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/PasswordGenratorComponent.html":{}}}],["nongpoh",{"_index":4311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nonthaburi",{"_index":4605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["norfolk",{"_index":4144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["norman",{"_index":4082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["north",{"_index":4033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["northern",{"_index":4192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["norway",{"_index":4553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notch",{"_index":1574,"title":{},"body":{"components/IndexComponent.html":{}}}],["note",{"_index":1891,"title":{},"body":{"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["note'},{'name",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["note._id",{"_index":554,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["note.html",{"_index":1984,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["noteform",{"_index":2000,"title":{},"body":{"components/NotesFormComponent.html":{}}}],["noteid",{"_index":1888,"title":{},"body":{"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["notes",{"_index":93,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["notes'},{'name",{"_index":91,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["notes.component.css",{"_index":1914,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["notes.component.html",{"_index":1913,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["notescomponent",{"_index":90,"title":{"components/NotesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["noteservice",{"_index":1876,"title":{"injectables/NoteService.html":{}},"body":{"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/ViewNoteCompoent.html":{},"coverage.html":{}}}],["notesformcomponent",{"_index":92,"title":{"components/NotesFormComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["notification",{"_index":2017,"title":{},"body":{"components/NotificationComponent.html":{},"components/ProfileComponent.html":{}}}],["notification'},{'name",{"_index":95,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["notification.component.css",{"_index":2019,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notification.component.html",{"_index":2018,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notificationcomponent",{"_index":94,"title":{"components/NotificationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["notificationenable",{"_index":2025,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notificationform",{"_index":2020,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notificationfrequency",{"_index":2027,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notifications",{"_index":2030,"title":{},"body":{"components/NotificationComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["notificationtype",{"_index":2023,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notified",{"_index":2880,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["novi",{"_index":4773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["now",{"_index":1729,"title":{},"body":{"components/LoginComponent.html":{}}}],["npl",{"_index":4984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":2586,"title":{},"body":{"injectables/PasswordService.html":{},"index.html":{}}}],["nsw",{"_index":4394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nt",{"_index":4444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nueva",{"_index":5408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":1102,"title":{},"body":{"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"injectables/PlanService.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["number",{"_index":610,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/FileExplorerComponent.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["numbers",{"_index":1498,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{}}}],["numrows",{"_index":589,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["numselected",{"_index":587,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["nuremberg",{"_index":4462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nv",{"_index":4028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ny",{"_index":4055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nzl",{"_index":4541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obeid",{"_index":5009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":1974,"title":{},"body":{"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(permissions).foreach(role",{"_index":3010,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["objecturl",{"_index":3383,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["observable",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"injectables/FileService.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["observe(['(max",{"_index":805,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["occurred",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/ProofIdService.html":{}}}],["odisha",{"_index":4327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(decryptedpasswords",{"_index":2607,"title":{},"body":{"injectables/PasswordService.html":{}}}],["of(response",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PasswordService.html":{}}}],["offer",{"_index":3265,"title":{},"body":{"components/SupportComponent.html":{}}}],["offering",{"_index":2486,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["offers",{"_index":848,"title":{},"body":{"components/DownloadComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["offline",{"_index":1235,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["offlineaccess",{"_index":1185,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["oh",{"_index":4075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ohio",{"_index":4074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oistins",{"_index":5319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ok",{"_index":1001,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/MfaSettingComponent.html":{},"components/OrganizationComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["oklahoma",{"_index":4080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["olathe",{"_index":3949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["omaha",{"_index":4022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oman",{"_index":4878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["omdurman",{"_index":5008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["omn",{"_index":4880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oncancel",{"_index":700,"title":{},"body":{"components/CreateFolderDialogComponent.html":{}}}],["onchanges",{"_index":3479,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["onclose",{"_index":701,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/UserFormComponent.html":{}}}],["oncreate",{"_index":702,"title":{},"body":{"components/CreateFolderDialogComponent.html":{}}}],["ondelete",{"_index":3418,"title":{},"body":{"components/UsersComponent.html":{}}}],["ondelete(user",{"_index":3424,"title":{},"body":{"components/UsersComponent.html":{}}}],["one",{"_index":1804,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["onedit",{"_index":3419,"title":{},"body":{"components/UsersComponent.html":{}}}],["onedit(user",{"_index":3426,"title":{},"body":{"components/UsersComponent.html":{}}}],["onfilechange",{"_index":1147,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onfilechange(event",{"_index":1158,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onfileselected",{"_index":3342,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["onfileselected(event",{"_index":3347,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["onfoldersearch",{"_index":1148,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onfoldersearch(event",{"_index":1160,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onidtypechange",{"_index":1410,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["oninit",{"_index":152,"title":{},"body":{"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["online",{"_index":1468,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["onmfasubmit",{"_index":1857,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["onoptionselected",{"_index":3137,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["onoptionselected(event",{"_index":3144,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["onpreviewfile",{"_index":1020,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["onpreviewfile(arg0",{"_index":1029,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["onshareitem",{"_index":1021,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["onshareitem(arg0",{"_index":1032,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["onsubmit",{"_index":738,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesFormComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/UserFormComponent.html":{}}}],["onsubmitemail",{"_index":1604,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["onsubmitpassword",{"_index":1605,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["ontario",{"_index":4466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onupload",{"_index":3343,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["oops",{"_index":1991,"title":{},"body":{"components/NotesComponent.html":{}}}],["open",{"_index":935,"title":{},"body":{"components/DownloadComponent.html":{}}}],["opencardformdialog",{"_index":478,"title":{},"body":{"components/CardComponent.html":{}}}],["opencardformdialog(card",{"_index":493,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["opencreatefolderdialog",{"_index":3202,"title":{},"body":{"components/SideNavComponent.html":{}}}],["opencreatefolderdialog(event",{"_index":3210,"title":{},"body":{"components/SideNavComponent.html":{}}}],["openfiledialog",{"_index":1022,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["openidproofformdialog",{"_index":1386,"title":{},"body":{"components/IdProofComponent.html":{}}}],["openidproofformdialog(proof",{"_index":1374,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["opennotesdialog",{"_index":1919,"title":{},"body":{"components/NotesComponent.html":{}}}],["opennotesdialog(note",{"_index":1933,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["openorganizationdialog",{"_index":2087,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["opensections",{"_index":3199,"title":{},"body":{"components/SideNavComponent.html":{}}}],["openusersdialog",{"_index":3420,"title":{},"body":{"components/UsersComponent.html":{}}}],["operating",{"_index":954,"title":{},"body":{"components/DownloadComponent.html":{}}}],["opting",{"_index":2495,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["option",{"_index":1234,"title":{},"body":{"components/FileUploadComponent.html":{},"components/SupportComponent.html":{}}}],["optional",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/IdProofComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewPasswordComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["optionally",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"components/UserProfileComponent.html":{}}}],["options",{"_index":3678,"title":{},"body":{"index.html":{}}}],["orange",{"_index":5422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oregon",{"_index":4086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orem",{"_index":4134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["org.name",{"_index":3334,"title":{},"body":{"components/UserFormComponent.html":{}}}],["organization",{"_index":2033,"title":{},"body":{"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/SupportComponent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["organization'},{'name",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["organization.component.html",{"_index":2041,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization_description",{"_index":2048,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization_description).subscribe",{"_index":2056,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization_name",{"_index":2047,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization_name,organization_description",{"_index":2053,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizational",{"_index":3311,"title":{},"body":{"components/SupportComponent.html":{}}}],["organizationcomponent",{"_index":96,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["organizationform",{"_index":2042,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationid",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrganizationService.html":{}}}],["organizations",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{},"components/BillingDetailsComponent.html":{},"components/OrganizationsComponent.html":{},"components/UserFormComponent.html":{}}}],["organizations'},{'name",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["organizations.component.css",{"_index":2086,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["organizations.component.html",{"_index":2085,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["organizationscomponent",{"_index":98,"title":{"components/OrganizationsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["organizationservice",{"_index":1623,"title":{"injectables/OrganizationService.html":{}},"body":{"components/InvitationAcceptComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/UserFormComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["organizationservie",{"_index":1601,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["organizationsservice",{"_index":2090,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["organizatioonservice",{"_index":2043,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organize",{"_index":1483,"title":{},"body":{"components/IndexComponent.html":{}}}],["original",{"_index":3767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orlando",{"_index":3899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orleans",{"_index":3959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["os",{"_index":2853,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["osasco",{"_index":4488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osh",{"_index":4852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oshakati",{"_index":5080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osijek",{"_index":4783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oslo",{"_index":4555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ostrava",{"_index":4694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["others",{"_index":1481,"title":{},"body":{"components/IndexComponent.html":{}}}],["otherwise",{"_index":1938,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["otp",{"_index":1630,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["otpform",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["otpform).pipe",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["ottawa",{"_index":4468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ouagadougou",{"_index":5216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["out",{"_index":905,"title":{},"body":{"components/DownloadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{}}}],["outlines",{"_index":2836,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["output",{"_index":1760,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/SecurityComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["outputs",{"_index":3486,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["over",{"_index":816,"title":{},"body":{"components/DashboardComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["overland",{"_index":3946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":3644,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner",{"_index":623,"title":{},"body":{"components/CardComponent.html":{},"components/OrganizationsComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["owneremail",{"_index":2095,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["ownername",{"_index":2094,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["oyo",{"_index":5166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p",{"_index":945,"title":{},"body":{"components/DownloadComponent.html":{},"injectables/PlanService.html":{}}}],["pa",{"_index":4091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":3588,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":3034,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["page",{"_index":893,"title":{},"body":{"components/DownloadComponent.html":{},"components/PricingPageComponent.html":{},"components/SupportComponent.html":{},"miscellaneous/variables.html":{}}}],["page'},{'name",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["page.component.css",{"_index":2773,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["page.component.html",{"_index":2772,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["page.component.ts",{"_index":2770,"title":{},"body":{"components/PricingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:26",{"_index":2795,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["page.component.ts:27",{"_index":2794,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["page.component.ts:28",{"_index":2793,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["page.component.ts:29",{"_index":2796,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["page.component.ts:30",{"_index":2792,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["page.component.ts:31",{"_index":2797,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["page.component.ts:32",{"_index":2800,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["page.component.ts:33",{"_index":2798,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["page.component.ts:35",{"_index":2789,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["page.component.ts:49",{"_index":2791,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["page.component.ts:53",{"_index":2783,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["page.component.ts:63",{"_index":2787,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["page/pricing",{"_index":2769,"title":{},"body":{"components/PricingPageComponent.html":{},"coverage.html":{}}}],["pages/footer/footer.component",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["pages/header/header.component",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["paghman",{"_index":3804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paginator",{"_index":3415,"title":{},"body":{"components/UsersComponent.html":{}}}],["pak",{"_index":4622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pakistan",{"_index":4620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pakse",{"_index":4974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pakyong",{"_index":4352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["palmerston",{"_index":4449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pan",{"_index":5394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["panaji",{"_index":4237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["panama",{"_index":5392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pancard",{"_index":1417,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["panel",{"_index":1813,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/SideNavComponent.html":{}}}],["panipat",{"_index":4257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"injectables/FolderService.html":{},"components/IdProofComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewPasswordComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1122,"title":{},"body":{"injectables/FileService.html":{},"injectables/PasswordService.html":{}}}],["params.get('folderid",{"_index":3230,"title":{},"body":{"components/SideNavComponent.html":{}}}],["params.set('search",{"_index":2588,"title":{},"body":{"injectables/PasswordService.html":{}}}],["params['id",{"_index":1634,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["params['mfamethod",{"_index":1868,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["params['token",{"_index":2146,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["parentid",{"_index":1101,"title":{},"body":{"injectables/FileService.html":{}}}],["paris",{"_index":4475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["park",{"_index":3947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parkersburg",{"_index":4157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paro",{"_index":4930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parties",{"_index":2870,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pasig",{"_index":4592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pasighat",{"_index":4213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pass",{"_index":721,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["pass._id",{"_index":570,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["passed",{"_index":1926,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["passkeys",{"_index":1470,"title":{},"body":{"components/IndexComponent.html":{}}}],["passowrd",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrganizationService.html":{}}}],["passphrase",{"_index":2352,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["passphrase.touppercase",{"_index":2444,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["passphrasearray",{"_index":2438,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["passphrasearray.map((passphrase",{"_index":2442,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["passphraselength",{"_index":2353,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["passphrases",{"_index":2464,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["passphrasewords",{"_index":2433,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["passport",{"_index":1418,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["passports",{"_index":2850,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["password",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"dependencies.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["password'},{'name",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["password.component.css",{"_index":3480,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password.component.html",{"_index":2933,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["password.component.ts",{"_index":2931,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:16",{"_index":3489,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":3499,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":3500,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":3501,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password.component.ts:20",{"_index":3498,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":3502,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":3490,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password.component.ts:24",{"_index":3491,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":3495,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":2943,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["password.component.ts:34",{"_index":2941,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:37",{"_index":2942,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:38",{"_index":2944,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:39",{"_index":2945,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:42",{"_index":2949,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:45",{"_index":2948,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:46",{"_index":2947,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:47",{"_index":2946,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:48",{"_index":2940,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:49",{"_index":2938,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:51",{"_index":2939,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:60",{"_index":3492,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password.component.ts:80",{"_index":3497,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password.length",{"_index":1709,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["password/${id",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["password/reset",{"_index":2930,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password/view",{"_index":3478,"title":{},"body":{"components/ViewPasswordComponent.html":{},"coverage.html":{}}}],["password?.created_by?.name",{"_index":3532,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password?.createdat",{"_index":3527,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password?.description",{"_index":3531,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password?.isfavorite",{"_index":3535,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password?.modifiedby?.name",{"_index":3533,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password?.name",{"_index":3526,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password?.password",{"_index":3530,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password?.updatedat",{"_index":3534,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password?.username",{"_index":3529,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password?.website",{"_index":3528,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["password`,{email}).pipe",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordchangecomponent",{"_index":100,"title":{"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["passwordchangeform",{"_index":2195,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["passwordcomponent",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["passwordform",{"_index":1602,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["passwordformcomponent",{"_index":105,"title":{"components/PasswordFormComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["passwordgenratorcomponent",{"_index":106,"title":{"components/PasswordGenratorComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["passwordid",{"_index":1903,"title":{},"body":{"injectables/NoteService.html":{},"injectables/PasswordService.html":{}}}],["passwordids",{"_index":1917,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["passwordless",{"_index":1489,"title":{},"body":{"components/IndexComponent.html":{}}}],["passwordmatchvalidator",{"_index":1606,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["passwordmatchvalidator(formgroup",{"_index":1612,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["passwordreset",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordreset(currentpassword",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwords",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["passwords.csv",{"_index":577,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["passwordservice",{"_index":747,"title":{"injectables/PasswordService.html":{}},"body":{"components/CreditCardFormComponent.html":{},"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/TagFormCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{}}}],["passwordstrength",{"_index":2632,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["passwordstrength['message",{"_index":2661,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["passwordstrength[\\'message",{"_index":2704,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["passwordstrengthcomponent",{"_index":108,"title":{"components/PasswordStrengthComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["passwordstrengths",{"_index":2354,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["passwordvalidation",{"_index":2162,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["passwordvalidation.test(password",{"_index":2166,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["passwordvalidator",{"_index":1672,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordChangeComponent.html":{}}}],["passwordvalidator(control",{"_index":1678,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordChangeComponent.html":{}}}],["patch(`${this.apiurl}/change",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["patches",{"_index":891,"title":{},"body":{"components/DownloadComponent.html":{}}}],["paterson",{"_index":4043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":3626,"title":{},"body":{"dependencies.html":{}}}],["pathom",{"_index":4609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patiala",{"_index":4338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patna",{"_index":4224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pattern",{"_index":2687,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["patterns",{"_index":2678,"title":{},"body":{"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["paul",{"_index":3997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paulo",{"_index":4484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pawtucket",{"_index":4102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"components/InvitationAcceptComponent.html":{},"components/PasswordChangeComponent.html":{},"injectables/PasswordService.html":{}}}],["payment",{"_index":2839,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{}}}],["paypal",{"_index":3624,"title":{},"body":{"dependencies.html":{}}}],["pb",{"_index":4334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pci",{"_index":3282,"title":{},"body":{"components/SupportComponent.html":{}}}],["peace",{"_index":1525,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["peak",{"_index":5095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pedro",{"_index":5131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["penh",{"_index":4962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pennsylvania",{"_index":4090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["perform",{"_index":1846,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["performaction",{"_index":1023,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/IdProofComponent.html":{}}}],["performaction(arg0",{"_index":1379,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["performaction(fileid",{"_index":1035,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["performance",{"_index":889,"title":{},"body":{"components/DownloadComponent.html":{}}}],["periodically",{"_index":2878,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["peristeri",{"_index":4703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permanently",{"_index":2873,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["permission",{"_index":3184,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["permissions",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/ShareDialogComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["permissions'},{'name",{"_index":120,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["permissions.component.css",{"_index":2959,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["permissions.component.html",{"_index":2960,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["permissions.component.ts",{"_index":2958,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"coverage.html":{}}}],["permissions.component.ts:18",{"_index":2997,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["permissions.component.ts:19",{"_index":2996,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["permissions.component.ts:30",{"_index":2966,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["permissions.component.ts:41",{"_index":2972,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["permissions.component.ts:47",{"_index":2999,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["permissions.component.ts:51",{"_index":2971,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["permissions.component.ts:65",{"_index":2968,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["permissions.component.ts:73",{"_index":2973,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["permissions.service",{"_index":3002,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["permissions.service.ts",{"_index":3048,"title":{},"body":{"injectables/RolesPermissionsService.html":{},"coverage.html":{}}}],["permissions.service.ts:70",{"_index":3051,"title":{},"body":{"injectables/RolesPermissionsService.html":{}}}],["permissions.service.ts:74",{"_index":3053,"title":{},"body":{"injectables/RolesPermissionsService.html":{}}}],["permissions.service.ts:8",{"_index":3055,"title":{},"body":{"injectables/RolesPermissionsService.html":{}}}],["permissions/roles",{"_index":2957,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"coverage.html":{}}}],["permissions[role",{"_index":3011,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["person",{"_index":1326,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["person_add",{"_index":1345,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["personal",{"_index":845,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["perth",{"_index":4417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pet",{"_index":2520,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["pet's",{"_index":3106,"title":{},"body":{"components/SecurityComponent.html":{}}}],["pet\\'s",{"_index":3114,"title":{},"body":{"components/SecurityComponent.html":{}}}],["petaling",{"_index":4679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["petersburg",{"_index":3901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["philadelphia",{"_index":4092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["philippines",{"_index":4585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phishing",{"_index":2461,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["phl",{"_index":4587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phnom",{"_index":4961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phodrang",{"_index":4933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phoenix",{"_index":3852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phone",{"_index":990,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MfaSettingComponent.html":{},"components/SupportComponent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{}}}],["phonenumber",{"_index":3257,"title":{},"body":{"components/SupportComponent.html":{}}}],["phong",{"_index":4618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["photo",{"_index":3411,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["piggs",{"_index":5094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/FileExplorerComponent.html":{},"components/IdproofformComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/PasswordService.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":656,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/ProofIdService.html":{}}}],["piraeus",{"_index":4701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pittsburgh",{"_index":4093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["place",{"_index":2683,"title":{},"body":{"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{}}}],["plaine",{"_index":5291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plan",{"_index":434,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/HeaderComponent-1.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["plan.amount",{"_index":2819,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["plan.buttontext",{"_index":2823,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["plan.interval",{"_index":2821,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["plan.title",{"_index":2818,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["plan?.plan",{"_index":3406,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["plan?.plan.amount",{"_index":3407,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["plan?.plan.currency",{"_index":3408,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["plandetails",{"_index":2715,"title":{},"body":{"injectables/PlanService.html":{}}}],["plandetails).pipe",{"_index":2750,"title":{},"body":{"injectables/PlanService.html":{}}}],["planid",{"_index":2718,"title":{},"body":{"injectables/PlanService.html":{},"components/PricingPageComponent.html":{}}}],["planloading",{"_index":2774,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["plans",{"_index":2489,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{}}}],["plans.plans",{"_index":2805,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["planservice",{"_index":2706,"title":{"injectables/PlanService.html":{}},"body":{"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"coverage.html":{}}}],["plantype",{"_index":2775,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["plantypes",{"_index":2776,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["plata",{"_index":4564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["platform",{"_index":857,"title":{},"body":{"components/DownloadComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["platforms",{"_index":1558,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["pleasant",{"_index":4107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":674,"title":{},"body":{"injectables/CardService.html":{},"components/DownloadComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"injectables/NoteService.html":{},"components/PasswordChangeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ProofIdService.html":{},"components/SupportComponent.html":{}}}],["plug",{"_index":1840,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["plugins",{"_index":184,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["plze",{"_index":4695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pocatello",{"_index":3921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["podgorica",{"_index":4796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["podolsk",{"_index":4506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":5267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pointe",{"_index":5163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pokhara",{"_index":4986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["policies",{"_index":3303,"title":{},"body":{"components/SupportComponent.html":{}}}],["policy",{"_index":1274,"title":{},"body":{"components/FooterComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{},"miscellaneous/variables.html":{}}}],["policy'},{'name",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["policy.component.css",{"_index":2831,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.html",{"_index":2830,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.ts",{"_index":2829,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["policy/privacy",{"_index":2828,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["polje",{"_index":4800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ponce",{"_index":5352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ponda",{"_index":4242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["populateformwithuserprofile",{"_index":1741,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["populateformwithuserprofile(profile",{"_index":1747,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["port",{"_index":1842,"title":{},"body":{"components/MfaSettingComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["portland",{"_index":3967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portmore",{"_index":5344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["porto",{"_index":4730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portsmouth",{"_index":5289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portugal",{"_index":4726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["poses",{"_index":2523,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["post",{"_index":3541,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["post(`${this.apiurl}/logout",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["postal",{"_index":1007,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["postalcode",{"_index":991,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["postcomment",{"_index":2554,"title":{},"body":{"injectables/PasswordService.html":{}}}],["postcomment(passwordid",{"_index":2574,"title":{},"body":{"injectables/PasswordService.html":{}}}],["posted",{"_index":2879,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["power_settings_new",{"_index":1327,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["ppa:yourapp/ppa",{"_index":929,"title":{},"body":{"components/DownloadComponent.html":{}}}],["prabang",{"_index":4972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["practice",{"_index":2522,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["practices",{"_index":2684,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["pradesh",{"_index":4203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prague",{"_index":4692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prakan",{"_index":4607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["praslin",{"_index":5263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pratikdevelop/password",{"_index":942,"title":{},"body":{"components/DownloadComponent.html":{}}}],["preferences",{"_index":3684,"title":{},"body":{"index.html":{}}}],["preline",{"_index":3629,"title":{},"body":{"dependencies.html":{}}}],["preline/preline",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["preline/strong",{"_index":3603,"title":{},"body":{"dependencies.html":{}}}],["premium",{"_index":437,"title":{},"body":{"components/BillingDetailsComponent.html":{},"injectables/PlanService.html":{}}}],["prepare",{"_index":3092,"title":{},"body":{"components/SecurityComponent.html":{}}}],["prerequisites",{"_index":933,"title":{},"body":{"components/DownloadComponent.html":{},"index.html":{}}}],["presets",{"_index":181,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["pressing",{"_index":1847,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["pretoria",{"_index":4513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prevent",{"_index":563,"title":{},"body":{"components/CardComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/PasswordService.html":{},"components/SideNavComponent.html":{},"components/ViewNoteCompoent.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["preview",{"_index":1062,"title":{},"body":{"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/UserProfileComponent.html":{}}}],["prešov",{"_index":4761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pri",{"_index":5349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["price",{"_index":441,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/PricingPageComponent.html":{}}}],["pricing",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["pricingpagecomponent",{"_index":110,"title":{"components/PricingPageComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["prince",{"_index":5364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["principe",{"_index":5237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["principles",{"_index":3645,"title":{},"body":{"index.html":{}}}],["prioritize",{"_index":2498,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"index.html":{}}}],["priority",{"_index":2673,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["privacy",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["privacypolicycomponent",{"_index":113,"title":{"components/PrivacyPolicyComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["private",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"components/CreditCardFormComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"injectables/NoteService.html":{},"components/NotesFormComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/UserFormComponent.html":{}}}],["process",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"components/InvitationAcceptComponent.html":{}}}],["production",{"_index":5425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["products",{"_index":1339,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{}}}],["professional",{"_index":846,"title":{},"body":{"components/DownloadComponent.html":{}}}],["profile",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/MfaSettingComponent.html":{},"components/ProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile'},{'name",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["profile).pipe",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["profile.component",{"_index":3365,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.css",{"_index":972,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.html",{"_index":971,"title":{},"body":{"components/EditProfileComponent.html":{},"components/ProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":970,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:19",{"_index":978,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:20",{"_index":981,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:21",{"_index":979,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:22",{"_index":983,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:23",{"_index":985,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:24",{"_index":975,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:25",{"_index":3359,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:26",{"_index":3351,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:27",{"_index":3360,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:28",{"_index":3353,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":3354,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:30",{"_index":3357,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:31",{"_index":3352,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":3358,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:35",{"_index":3361,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:36",{"_index":3355,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:37",{"_index":3346,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:41",{"_index":3350,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:42",{"_index":976,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:44",{"_index":3345,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:45",{"_index":977,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:60",{"_index":3344,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:73",{"_index":3348,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:87",{"_index":3349,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.emailaddress",{"_index":1779,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["profile.mfaenabled",{"_index":1773,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["profile.mfamethod",{"_index":1774,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["profile.smsphonenumber",{"_index":1778,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["profile.totpsecret",{"_index":1776,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["profile/dailog/edit",{"_index":968,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["profile/edit",{"_index":969,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile/user",{"_index":3335,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profilecomponent",{"_index":116,"title":{"components/ProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["profiledata",{"_index":3374,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profiledata.plandetails",{"_index":3372,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profiledata.user",{"_index":3370,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profileform",{"_index":973,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profilesidebaropen",{"_index":679,"title":{},"body":{"injectables/CommonService.html":{}}}],["project",{"_index":3643,"title":{},"body":{"index.html":{}}}],["prompts",{"_index":3669,"title":{},"body":{"index.html":{}}}],["proof",{"_index":1369,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"injectables/ProofIdService.html":{}}}],["proof'},{'name",{"_index":75,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["proof.component.css",{"_index":1372,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["proof.component.html",{"_index":1371,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["proof.component.ts",{"_index":1356,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"coverage.html":{}}}],["proof.component.ts:35",{"_index":1395,"title":{},"body":{"components/IdProofComponent.html":{}}}],["proof.component.ts:45",{"_index":1394,"title":{},"body":{"components/IdProofComponent.html":{}}}],["proof.component.ts:46",{"_index":1388,"title":{},"body":{"components/IdProofComponent.html":{}}}],["proof.component.ts:51",{"_index":1390,"title":{},"body":{"components/IdProofComponent.html":{}}}],["proof.component.ts:60",{"_index":1391,"title":{},"body":{"components/IdProofComponent.html":{}}}],["proof.component.ts:63",{"_index":1396,"title":{},"body":{"components/IdProofComponent.html":{}}}],["proof.component.ts:64",{"_index":1393,"title":{},"body":{"components/IdProofComponent.html":{}}}],["proof.component.ts:66",{"_index":1389,"title":{},"body":{"components/IdProofComponent.html":{}}}],["proof.component.ts:73",{"_index":1392,"title":{},"body":{"components/IdProofComponent.html":{}}}],["proof/id",{"_index":1355,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"coverage.html":{}}}],["proofid",{"_index":2919,"title":{},"body":{"injectables/ProofIdService.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["proofidservice",{"_index":1364,"title":{"injectables/ProofIdService.html":{}},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"injectables/ProofIdService.html":{},"coverage.html":{}}}],["proofs",{"_index":450,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["proper",{"_index":2608,"title":{},"body":{"injectables/PasswordService.html":{},"index.html":{}}}],["properties",{"_index":197,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"properties.html":{},"components/viewCardDetailsComponent.html":{}}}],["property",{"_index":1975,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["protect",{"_index":1474,"title":{},"body":{"components/IndexComponent.html":{},"components/MfaSettingComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{}}}],["protected",{"_index":841,"title":{},"body":{"components/DownloadComponent.html":{}}}],["protection",{"_index":1536,"title":{},"body":{"components/IndexComponent.html":{}}}],["protocols",{"_index":1542,"title":{},"body":{"components/IndexComponent.html":{},"components/SupportComponent.html":{}}}],["provide",{"_index":3657,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":3773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1821,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SideNavComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["providedin",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"injectables/FileService.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"injectables/NoteService.html":{},"injectables/OrganizationService.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"injectables/RolesPermissionsService.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{}}}],["providehttpclient(withinterceptors([apiinterceptor",{"_index":3774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providence",{"_index":4099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":3772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":3769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":2510,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"index.html":{}}}],["providezonechangedetection",{"_index":3770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provo",{"_index":4132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prt",{"_index":4728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateFolderDialogComponent.html":{},"components/HeaderComponent.html":{},"components/ShareDialogComponent.html":{},"components/UserFormComponent.html":{}}}],["publicroutes",{"_index":3788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publicroutes.find(route",{"_index":3791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["puente",{"_index":4573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["puerto",{"_index":5346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pul",{"_index":3822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pull",{"_index":940,"title":{},"body":{"components/DownloadComponent.html":{}}}],["punakha",{"_index":4931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pune",{"_index":4296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["punjab",{"_index":4333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purposes",{"_index":847,"title":{},"body":{"components/DownloadComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["pétion",{"_index":5369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qala",{"_index":3811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qarabagh",{"_index":3826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qat",{"_index":4872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qatar",{"_index":4870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qld",{"_index":4410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queanbeyan",{"_index":4440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queensland",{"_index":4409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query",{"_index":2807,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["queryparams",{"_index":2782,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["question",{"_index":1653,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/SupportComponent.html":{}}}],["question.service",{"_index":3080,"title":{},"body":{"components/SecurityComponent.html":{}}}],["question.service.ts",{"_index":3116,"title":{},"body":{"injectables/SecurityQuestionService.html":{},"coverage.html":{}}}],["question.service.ts:11",{"_index":3121,"title":{},"body":{"injectables/SecurityQuestionService.html":{}}}],["question.service.ts:16",{"_index":3123,"title":{},"body":{"injectables/SecurityQuestionService.html":{}}}],["question.service.ts:21",{"_index":3126,"title":{},"body":{"injectables/SecurityQuestionService.html":{}}}],["question.service.ts:26",{"_index":3128,"title":{},"body":{"injectables/SecurityQuestionService.html":{}}}],["question.service.ts:31",{"_index":3125,"title":{},"body":{"injectables/SecurityQuestionService.html":{}}}],["questions",{"_index":902,"title":{},"body":{"components/DownloadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/SupportComponent.html":{}}}],["questions[0]?.answer",{"_index":3086,"title":{},"body":{"components/SecurityComponent.html":{}}}],["questions[0]?.question",{"_index":3085,"title":{},"body":{"components/SecurityComponent.html":{}}}],["questions[1]?.answer",{"_index":3088,"title":{},"body":{"components/SecurityComponent.html":{}}}],["questions[1]?.question",{"_index":3087,"title":{},"body":{"components/SecurityComponent.html":{}}}],["quetzaltenango",{"_index":5409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quezon",{"_index":4590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quthing",{"_index":5087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["racine",{"_index":4165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radius",{"_index":3039,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"components/SideNavComponent.html":{}}}],["raipur",{"_index":4231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rajasthan",{"_index":4339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rajkot",{"_index":4249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rajshahi",{"_index":4633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["raleigh",{"_index":4062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ranchi",{"_index":4267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["random",{"_index":2401,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"dependencies.html":{}}}],["rapid",{"_index":4110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rapids",{"_index":3940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rawalpindi",{"_index":4625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rayyan",{"_index":4874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["re",{"_index":562,"title":{},"body":{"components/CardComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/PasswordService.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["reach",{"_index":904,"title":{},"body":{"components/DownloadComponent.html":{}}}],["reactiveformsmodule",{"_index":695,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PricingPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{}}}],["reactiveformsmodule,commonmodule",{"_index":3156,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["reactiveformsmodule,matdialogmodule",{"_index":2052,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["read",{"_index":1505,"title":{},"body":{"components/IndexComponent.html":{}}}],["reading",{"_index":4096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readme",{"_index":3642,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/ProfileComponent.html":{},"components/SecurityComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["real",{"_index":2670,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["reap",{"_index":4964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reapply",{"_index":3666,"title":{},"body":{"index.html":{}}}],["recall",{"_index":2517,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["receive",{"_index":2035,"title":{},"body":{"components/NotificationComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{}}}],["recipient.name",{"_index":3182,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["recipientid",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["recognition",{"_index":1807,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["recognizable",{"_index":2686,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["recognizes",{"_index":1832,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["recommendations",{"_index":2679,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["recommended",{"_index":884,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["redirect",{"_index":2159,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["reduce",{"_index":1548,"title":{},"body":{"components/IndexComponent.html":{}}}],["refer",{"_index":960,"title":{},"body":{"components/DownloadComponent.html":{}}}],["refresh",{"_index":3243,"title":{},"body":{"components/SideNavComponent.html":{}}}],["regarding",{"_index":2494,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["regensburg",{"_index":4464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regex",{"_index":2322,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["regex.test(password",{"_index":2324,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["region",{"_index":4580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["register",{"_index":1830,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["regularly",{"_index":2459,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["related",{"_index":3308,"title":{},"body":{"components/SupportComponent.html":{}}}],["releases",{"_index":881,"title":{},"body":{"components/DownloadComponent.html":{}}}],["reliable",{"_index":849,"title":{},"body":{"components/DownloadComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["remains",{"_index":2508,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{}}}],["remember",{"_index":1553,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"index.html":{}}}],["remembering",{"_index":1565,"title":{},"body":{"components/IndexComponent.html":{}}}],["remove",{"_index":2230,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["remove(fruit",{"_index":2239,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["remove_red_eye",{"_index":625,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{}}}],["removetag",{"_index":3484,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["removetag(tag",{"_index":3496,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["removeuser",{"_index":1149,"title":{},"body":{"components/FileUploadComponent.html":{},"components/ShareDialogComponent.html":{}}}],["removeuser(user",{"_index":1163,"title":{},"body":{"components/FileUploadComponent.html":{},"components/ShareDialogComponent.html":{}}}],["removeuserorfolder",{"_index":1150,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["removeuserorfolder(name",{"_index":1165,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["reno",{"_index":4032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repeatedly",{"_index":2692,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["replace",{"_index":178,"title":{},"body":{"components/ApiDocsComponent.html":{},"injectables/CardService.html":{},"injectables/FileService.html":{},"injectables/ProofIdService.html":{},"components/ShareDialogComponent.html":{}}}],["replace(/(\\d{4})/g",{"_index":599,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["report",{"_index":3619,"title":{},"body":{"dependencies.html":{}}}],["reporting",{"_index":3309,"title":{},"body":{"components/SupportComponent.html":{}}}],["reports",{"_index":3267,"title":{},"body":{"components/SupportComponent.html":{}}}],["repository",{"_index":928,"title":{},"body":{"components/DownloadComponent.html":{},"index.html":{}}}],["republic",{"_index":4689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req",{"_index":3760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":3762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":667,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"components/PasswordChangeComponent.html":{},"injectables/PasswordService.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":1996,"title":{},"body":{"components/NotesComponent.html":{}}}],["require",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["required",{"_index":1207,"title":{},"body":{"components/FileUploadComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SecurityComponent.html":{},"components/SupportComponent.html":{},"components/UserFormComponent.html":{},"index.html":{}}}],["requirements",{"_index":953,"title":{},"body":{"components/DownloadComponent.html":{},"components/PasswordGenratorComponent.html":{},"index.html":{}}}],["res",{"_index":818,"title":{},"body":{"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/TagFormCompoent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["res.key).tostring(cryptojs.enc.utf8",{"_index":2595,"title":{},"body":{"injectables/PasswordService.html":{}}}],["res.verified",{"_index":2181,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["resendcode",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["resendcode(email",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["resendinvitation",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"components/UsersComponent.html":{}}}],["resendinvitation(organizationid",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["resendinvitation(user",{"_index":3429,"title":{},"body":{"components/UsersComponent.html":{}}}],["resent",{"_index":3464,"title":{},"body":{"components/UsersComponent.html":{}}}],["reserved",{"_index":1286,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["resetpassword",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordChangeComponent.html":{}}}],["resetpassword(email",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":117,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["resettoken",{"_index":2117,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["resolve",{"_index":924,"title":{},"body":{"components/DownloadComponent.html":{}}}],["resort",{"_index":2518,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["respects",{"_index":3683,"title":{},"body":{"index.html":{}}}],["response",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/OrganizationComponent.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["response.data",{"_index":1969,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["response.key",{"_index":2613,"title":{},"body":{"injectables/PasswordService.html":{}}}],["response.mfamethod",{"_index":1718,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.mfarequired",{"_index":1716,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.password",{"_index":2612,"title":{},"body":{"injectables/PasswordService.html":{}}}],["response.passwords.map((res",{"_index":2590,"title":{},"body":{"injectables/PasswordService.html":{}}}],["response.success",{"_index":1872,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["response.token",{"_index":1650,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["responsetype",{"_index":663,"title":{},"body":{"injectables/CardService.html":{},"injectables/FileService.html":{},"injectables/NoteService.html":{},"injectables/PasswordService.html":{}}}],["responsiveness",{"_index":3697,"title":{},"body":{"index.html":{}}}],["restore",{"_index":877,"title":{},"body":{"components/DownloadComponent.html":{}}}],["result",{"_index":2423,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/SideNavComponent.html":{}}}],["result.breakpoints['(max",{"_index":812,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["result.crack_times_display",{"_index":2428,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["result.feedback.suggestions.join",{"_index":2426,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["result.score",{"_index":2425,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["results",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["retain",{"_index":3664,"title":{},"body":{"index.html":{}}}],["retrieve",{"_index":1635,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":3376,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["retry",{"_index":1997,"title":{},"body":{"components/NotesComponent.html":{}}}],["return",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/EditProfileComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/OrganizationService.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["returned",{"_index":2761,"title":{},"body":{"injectables/PlanService.html":{}}}],["returns",{"_index":165,"title":{},"body":{"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"injectables/FolderService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["reykjavík",{"_index":4722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rhode",{"_index":4097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ri",{"_index":4098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rica",{"_index":5385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["richmond",{"_index":3956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rico",{"_index":5347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["riffa",{"_index":4890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["riga",{"_index":4744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["right",{"_index":1088,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["rights",{"_index":1285,"title":{},"body":{"components/FooterComponent.html":{}}}],["rijeka",{"_index":4782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rishon",{"_index":4670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["risk",{"_index":2525,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["riyadh",{"_index":4651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rj",{"_index":4340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["robust",{"_index":2449,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"index.html":{}}}],["rochester",{"_index":3998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rock",{"_index":3860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rockford",{"_index":3926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rockville",{"_index":3974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":3014,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/UserProfileComponent.html":{}}}],["role.value.rolename",{"_index":3031,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["rolename",{"_index":3013,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["roleobj",{"_index":3023,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["roleobj.permissions",{"_index":3025,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["rolepermissions",{"_index":2969,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["rolepermissions[feature",{"_index":3018,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["roles",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["rolesform",{"_index":2961,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["rolespermissions",{"_index":3021,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["rolespermissions['admin",{"_index":3027,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["rolespermissions['user",{"_index":3029,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["rolespermissionscomponent",{"_index":119,"title":{"components/RolesPermissionsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["rolespermissionsservice",{"_index":2965,"title":{"injectables/RolesPermissionsService.html":{}},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"coverage.html":{}}}],["romana",{"_index":5358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rome",{"_index":4498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roorkee",{"_index":4383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"injectables/FileService.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"injectables/NoteService.html":{},"injectables/OrganizationService.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"injectables/RolesPermissionsService.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{},"interfaces/Window.html":{}}}],["root'},{'name",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["rosario",{"_index":4567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rose",{"_index":5195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roseau",{"_index":5288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roswell",{"_index":4052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rouge",{"_index":3961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rourkela",{"_index":4330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route",{"_index":1607,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SideNavComponent.html":{},"miscellaneous/variables.html":{}}}],["route.queryparams['password",{"_index":3781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route.queryparams['username",{"_index":3780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"components/SideNavComponent.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["router.navigate",{"_index":3787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigate((email",{"_index":3792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":2932,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["routermodule",{"_index":18,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SideNavComponent.html":{},"interfaces/Window.html":{}}}],["routermodule,headercomponent",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["routeroutlet",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/IndexComponent.html":{},"interfaces/Window.html":{}}}],["routine",{"_index":2500,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["row",{"_index":485,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["row._id",{"_index":596,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["rows",{"_index":1937,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["royale",{"_index":5262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rtl",{"_index":2953,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["rudrapur",{"_index":4382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":912,"title":{},"body":{"components/DownloadComponent.html":{},"index.html":{}}}],["running",{"_index":925,"title":{},"body":{"components/DownloadComponent.html":{},"index.html":{}}}],["rus",{"_index":4503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["russia",{"_index":4502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rutland",{"_index":4139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rwa",{"_index":5041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rwanda",{"_index":5039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"injectables/FileService.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{},"injectables/RolesPermissionsService.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"dependencies.html":{},"components/viewCardDetailsComponent.html":{}}}],["rxjs/operators",{"_index":653,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"injectables/ProofIdService.html":{},"components/TagFormCompoent.html":{}}}],["rîbnița",{"_index":4821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["s",{"_index":2161,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["sa",{"_index":4422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sabieh",{"_index":5232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sacramento",{"_index":3872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sad",{"_index":4774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["safe",{"_index":2466,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{},"components/UserProfileComponent.html":{}}}],["safeguard",{"_index":1547,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["safely",{"_index":834,"title":{},"body":{"components/DownloadComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["safepassvault",{"_index":826,"title":{},"body":{"components/DownloadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{}}}],["safepassvault&#64;gmail.com",{"_index":1280,"title":{},"body":{"components/FooterComponent.html":{}}}],["safepassvault's",{"_index":1518,"title":{},"body":{"components/IndexComponent.html":{}}}],["safepassvault@gmail.com",{"_index":1287,"title":{},"body":{"components/FooterComponent.html":{}}}],["safepassvault\\'s",{"_index":1591,"title":{},"body":{"components/IndexComponent.html":{}}}],["safepassvault_0.0.0_amd64.deb",{"_index":922,"title":{},"body":{"components/DownloadComponent.html":{}}}],["safepassvaults",{"_index":1546,"title":{},"body":{"components/IndexComponent.html":{}}}],["safer",{"_index":1583,"title":{},"body":{"components/IndexComponent.html":{}}}],["saiha",{"_index":4317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saint",{"_index":3996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saints",{"_index":5273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["salaam",{"_index":5036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["salal",{"_index":4877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["salalah",{"_index":4882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["salem",{"_index":4066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["salmiya",{"_index":4897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["salt",{"_index":4130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["salvador",{"_index":5398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["samarkand",{"_index":4845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sambalpur",{"_index":4332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["same",{"_index":2691,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["samut",{"_index":4606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["san",{"_index":3868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sana\\'a",{"_index":4922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sandy",{"_index":4133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sangin",{"_index":3833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sanitizer",{"_index":3338,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["santa",{"_index":4050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["santiago",{"_index":4571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["santo",{"_index":4486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sao",{"_index":5235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sarah",{"_index":1579,"title":{},"body":{"components/IndexComponent.html":{}}}],["sarajevo",{"_index":4789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sarh",{"_index":5150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sau",{"_index":4650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saudi",{"_index":4647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["savannah",{"_index":3907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["savannakhet",{"_index":4973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["save",{"_index":767,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/EditProfileComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordStrengthComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{}}}],["saveas",{"_index":2584,"title":{},"body":{"injectables/PasswordService.html":{}}}],["saved",{"_index":2336,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["saver",{"_index":2585,"title":{},"body":{"injectables/PasswordService.html":{},"dependencies.html":{}}}],["sc",{"_index":4104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scanned",{"_index":2856,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["scanner",{"_index":1827,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["score",{"_index":2641,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["scotland",{"_index":4180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scottsdale",{"_index":3856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":914,"title":{},"body":{"components/DownloadComponent.html":{},"index.html":{}}}],["screens",{"_index":1295,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["sct",{"_index":4181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sd",{"_index":4109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sdn",{"_index":5006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seamless",{"_index":1559,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["seamlessly",{"_index":1509,"title":{},"body":{"components/IndexComponent.html":{},"index.html":{}}}],["search",{"_index":2299,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{}}}],["searchfolders",{"_index":1095,"title":{},"body":{"injectables/FileService.html":{}}}],["searchfolders(searchterm",{"_index":1109,"title":{},"body":{"injectables/FileService.html":{}}}],["searching",{"_index":1201,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["searchtags",{"_index":2231,"title":{},"body":{"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/TagFormCompoent.html":{}}}],["searchtags(name",{"_index":2576,"title":{},"body":{"injectables/PasswordService.html":{}}}],["searchterm",{"_index":471,"title":{},"body":{"components/CardComponent.html":{},"injectables/FileService.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["searchtermsubject",{"_index":2224,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["searchusers",{"_index":1096,"title":{},"body":{"injectables/FileService.html":{},"components/FileUploadComponent.html":{}}}],["searchusers(event",{"_index":1167,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["searchusers(name",{"_index":1111,"title":{},"body":{"injectables/FileService.html":{}}}],["seattle",{"_index":4150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second",{"_index":2668,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["secret",{"_index":1809,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["section",{"_index":1815,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{}}}],["sectionclosed",{"_index":3203,"title":{},"body":{"components/SideNavComponent.html":{}}}],["sectionclosed(section",{"_index":3212,"title":{},"body":{"components/SideNavComponent.html":{}}}],["sectionopened",{"_index":3204,"title":{},"body":{"components/SideNavComponent.html":{}}}],["sectionopened(section",{"_index":3214,"title":{},"body":{"components/SideNavComponent.html":{}}}],["secure",{"_index":827,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/NotesComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["secured",{"_index":1278,"title":{},"body":{"components/FooterComponent.html":{}}}],["securely",{"_index":899,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["securing",{"_index":2475,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["security",{"_index":875,"title":{},"body":{"components/DownloadComponent.html":{},"components/FooterComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["security'},{'name",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["security.component.html",{"_index":3062,"title":{},"body":{"components/SecurityComponent.html":{}}}],["securityanswer1",{"_index":3073,"title":{},"body":{"components/SecurityComponent.html":{}}}],["securityanswer2",{"_index":3075,"title":{},"body":{"components/SecurityComponent.html":{}}}],["securitycomponent",{"_index":121,"title":{"components/SecurityComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["securityform",{"_index":3063,"title":{},"body":{"components/SecurityComponent.html":{}}}],["securityquestion1",{"_index":3072,"title":{},"body":{"components/SecurityComponent.html":{}}}],["securityquestion2",{"_index":3074,"title":{},"body":{"components/SecurityComponent.html":{}}}],["securityquestions",{"_index":3093,"title":{},"body":{"components/SecurityComponent.html":{}}}],["securityquestionservice",{"_index":3064,"title":{"injectables/SecurityQuestionService.html":{}},"body":{"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"coverage.html":{}}}],["seems",{"_index":1993,"title":{},"body":{"components/NotesComponent.html":{}}}],["selangor",{"_index":4674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":512,"title":{},"body":{"components/CardComponent.html":{},"components/DownloadComponent.html":{},"components/FileUploadComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/ShareDialogComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["selected",{"_index":1151,"title":{},"body":{"components/FileUploadComponent.html":{},"components/NotesComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["selected(event",{"_index":1169,"title":{},"body":{"components/FileUploadComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["selectedfile",{"_index":3339,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["selectedimageurl",{"_index":3340,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["selectedinterval",{"_index":2777,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["selectedplatform",{"_index":823,"title":{},"body":{"components/DownloadComponent.html":{}}}],["selectedusers",{"_index":1144,"title":{},"body":{"components/FileUploadComponent.html":{},"components/ShareDialogComponent.html":{}}}],["selecting",{"_index":3304,"title":{},"body":{"components/SupportComponent.html":{}}}],["selection",{"_index":472,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["selectionmodel",{"_index":540,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["selectionmodel(true",{"_index":526,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["selectmfamethod",{"_index":1742,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["selectmfamethod(event",{"_index":1749,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["selects",{"_index":1936,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["sell",{"_index":2867,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["seminyak",{"_index":4600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sen",{"_index":5134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["send",{"_index":2318,"title":{},"body":{"components/PasswordFormComponent.html":{},"injectables/PlanService.html":{},"components/ResetPasswordComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UsersComponent.html":{}}}],["sendinvitation",{"_index":2066,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["sendinvitation(organizationid",{"_index":2073,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["sendresettoken",{"_index":2937,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["senegal",{"_index":5132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sensitive",{"_index":839,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["sent",{"_index":666,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"components/NotificationComponent.html":{},"injectables/PasswordService.html":{},"components/SupportComponent.html":{}}}],["separator",{"_index":2440,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["separatorkeyscodes",{"_index":2225,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["separators",{"_index":2473,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["september",{"_index":2832,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sequences",{"_index":2455,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["serbia",{"_index":4769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seri",{"_index":4945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seria",{"_index":4949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serrekunda",{"_index":5247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":2760,"title":{},"body":{"injectables/PlanService.html":{},"index.html":{}}}],["servers",{"_index":2874,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["service",{"_index":1050,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormCompoent.html":{}}}],["services",{"_index":1482,"title":{},"body":{"components/IndexComponent.html":{}}}],["services/auth.service",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/ResetPasswordComponent.html":{},"components/ShareDialogComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"interfaces/Window.html":{}}}],["services/card.service",{"_index":529,"title":{},"body":{"components/CardComponent.html":{},"components/CreditCardFormComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["services/common.service",{"_index":430,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/DashboardComponent.html":{},"components/FileExplorerComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/ProfileComponent.html":{},"components/SecurityComponent.html":{},"components/SideNavComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["services/file.service",{"_index":1049,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{}}}],["services/folder.service",{"_index":3226,"title":{},"body":{"components/SideNavComponent.html":{}}}],["services/note.service",{"_index":1961,"title":{},"body":{"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["services/organization.service",{"_index":1624,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/UserFormComponent.html":{},"components/UsersComponent.html":{}}}],["services/password.service",{"_index":748,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewPasswordComponent.html":{}}}],["services/plan.service",{"_index":2801,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["services/proof",{"_index":1365,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{}}}],["services/roles",{"_index":3001,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["services/security",{"_index":3079,"title":{},"body":{"components/SecurityComponent.html":{}}}],["services/shared",{"_index":3153,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["set",{"_index":1661,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["set('searchterm",{"_index":1123,"title":{},"body":{"injectables/FileService.html":{}}}],["setfilter",{"_index":1024,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["setfilter(fileid",{"_index":1038,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["settab",{"_index":2889,"title":{},"body":{"components/ProfileComponent.html":{}}}],["settab(url",{"_index":2891,"title":{},"body":{"components/ProfileComponent.html":{}}}],["settimeout",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["setting",{"_index":1735,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["setting'},{'name",{"_index":87,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["setting.component.css",{"_index":1738,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["setting.component.html",{"_index":1739,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["setting.component.ts",{"_index":1734,"title":{},"body":{"components/MfaSettingComponent.html":{},"coverage.html":{}}}],["setting.component.ts:105",{"_index":1745,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["setting.component.ts:111",{"_index":1746,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["setting.component.ts:134",{"_index":1754,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["setting.component.ts:43",{"_index":1756,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["setting.component.ts:44",{"_index":1758,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["setting.component.ts:45",{"_index":1757,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["setting.component.ts:46",{"_index":1755,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["setting.component.ts:47",{"_index":1744,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["setting.component.ts:64",{"_index":1748,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["setting.component.ts:79",{"_index":1752,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["setting.component.ts:89",{"_index":1750,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["setting/mfa",{"_index":1733,"title":{},"body":{"components/MfaSettingComponent.html":{},"coverage.html":{}}}],["settings",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FooterComponent.html":{},"components/IdProofComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["settings).pipe",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["setup",{"_index":1810,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["seychelles",{"_index":5257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sgp",{"_index":4579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadow:none",{"_index":3197,"title":{},"body":{"components/SideNavComponent.html":{}}}],["shah",{"_index":4675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["share",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["shared",{"_index":3676,"title":{},"body":{"index.html":{}}}],["sharedialogcomponent",{"_index":123,"title":{"components/ShareDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["shareditemservice",{"_index":3139,"title":{"injectables/SharedItemService.html":{}},"body":{"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"coverage.html":{}}}],["sharedwith",{"_index":1184,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["shareform",{"_index":3134,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["shareitem",{"_index":1097,"title":{},"body":{"injectables/FileService.html":{},"injectables/SharedItemService.html":{}}}],["shareitem(data",{"_index":3188,"title":{},"body":{"injectables/SharedItemService.html":{}}}],["shareitem(itemid",{"_index":1113,"title":{},"body":{"injectables/FileService.html":{}}}],["sharepassword",{"_index":1883,"title":{},"body":{"injectables/NoteService.html":{},"injectables/PasswordService.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["sharepassword(passwordid",{"_index":1901,"title":{},"body":{"injectables/NoteService.html":{},"injectables/PasswordService.html":{}}}],["shares",{"_index":454,"title":{},"body":{"components/BillingDetailsComponent.html":{}}}],["sharewith",{"_index":1114,"title":{},"body":{"injectables/FileService.html":{}}}],["sharif",{"_index":3814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sharing",{"_index":872,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["sharjah",{"_index":4661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shibuya",{"_index":4455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shillong",{"_index":4308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shimla",{"_index":4260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shinjuku",{"_index":4454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["short",{"_index":1073,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/NotesComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["shortname",{"_index":3798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["show",{"_index":1299,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["showconfirmpassword",{"_index":2118,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["showing",{"_index":3233,"title":{},"body":{"components/SideNavComponent.html":{}}}],["showmfastep",{"_index":1670,"title":{},"body":{"components/LoginComponent.html":{}}}],["showpassword",{"_index":2119,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["shreveport",{"_index":3962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shubra",{"_index":4644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shymkent",{"_index":4839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":126,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["sidebaropen",{"_index":680,"title":{},"body":{"injectables/CommonService.html":{}}}],["sidenavcomponent",{"_index":125,"title":{"components/SideNavComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["sidon",{"_index":4903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["siem",{"_index":4963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sierra",{"_index":5103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signal",{"_index":1698,"title":{},"body":{"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["signal(true",{"_index":1683,"title":{},"body":{"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["significant",{"_index":2524,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["signup",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["signup'},{'name",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["signup(signupform",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupcomponent",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["signupform",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupform).pipe",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["sihanoukville",{"_index":4966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sikasso",{"_index":5202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sikkim",{"_index":4346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["silchar",{"_index":4220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["silent",{"_index":564,"title":{},"body":{"components/CardComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/PasswordService.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["siliguri",{"_index":4387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":866,"title":{},"body":{"components/DownloadComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["simplechanges",{"_index":3494,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["simplifies",{"_index":1587,"title":{},"body":{"components/IndexComponent.html":{}}}],["simply",{"_index":3278,"title":{},"body":{"components/SupportComponent.html":{}}}],["singapore",{"_index":4577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sioux",{"_index":3942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["siteki",{"_index":5093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sites",{"_index":2693,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["sitka",{"_index":3848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sitra",{"_index":4891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["size",{"_index":1066,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["size','uploadedat",{"_index":1044,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["sizes",{"_index":3699,"title":{},"body":{"index.html":{}}}],["sk",{"_index":4347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skeptical",{"_index":1570,"title":{},"body":{"components/IndexComponent.html":{}}}],["skip",{"_index":1654,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["skopje",{"_index":4804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sle",{"_index":5106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slide",{"_index":3043,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["slovakia",{"_index":4755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slovenia",{"_index":4762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slv",{"_index":5400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smaller",{"_index":1294,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["smith",{"_index":1576,"title":{},"body":{"components/IndexComponent.html":{},"miscellaneous/variables.html":{}}}],["sms",{"_index":1777,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["smscode",{"_index":1690,"title":{},"body":{"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["smsphonenumber",{"_index":1768,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["smyrna",{"_index":3893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snacbar",{"_index":1603,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["snackbar",{"_index":974,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{}}}],["social",{"_index":2529,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["socialsecurity",{"_index":1420,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["sohar",{"_index":4883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sokod",{"_index":5122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solan",{"_index":4264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solid",{"_index":3037,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["solution",{"_index":850,"title":{},"body":{"components/DownloadComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["som",{"_index":4999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["somalia",{"_index":4997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sometimes",{"_index":1323,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["sort",{"_index":3416,"title":{},"body":{"components/UsersComponent.html":{}}}],["soufrière",{"_index":5297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["south",{"_index":3932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["southaven",{"_index":4005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["soweto",{"_index":4514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spain",{"_index":4524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spanish",{"_index":5345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sparks",{"_index":4034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":2192,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{}}}],["specific",{"_index":658,"title":{},"body":{"injectables/CardService.html":{},"injectables/PlanService.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ProofIdService.html":{},"components/SideNavComponent.html":{},"index.html":{}}}],["speightstown",{"_index":5318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spin",{"_index":3807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":1700,"title":{},"body":{"components/LoginComponent.html":{}}}],["split",{"_index":4781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spokane",{"_index":4151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["springdale",{"_index":3863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["springfield",{"_index":3981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["springs",{"_index":3876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["squirrel",{"_index":3613,"title":{},"body":{"dependencies.html":{}}}],["srb",{"_index":4771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.interceptor.ts",{"_index":3753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":3640,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":3754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../country.ts",{"_index":3755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":3756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.electron.ts",{"_index":3757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":3758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/api.interceptor.ts",{"_index":3545,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["src/app/app.component.ts:27",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":3551,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth.guard.ts",{"_index":3555,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/invitation",{"_index":1592,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":1662,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:21",{"_index":1697,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:22",{"_index":1695,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:23",{"_index":1694,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:24",{"_index":1682,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:25",{"_index":1681,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:26",{"_index":1684,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:27",{"_index":1685,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:28",{"_index":1688,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:32",{"_index":1692,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:37",{"_index":1693,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:38",{"_index":1696,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:40",{"_index":1676,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:47",{"_index":1680,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:59",{"_index":1675,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:63",{"_index":1677,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/mfa",{"_index":1851,"title":{},"body":{"components/MfaVerificationComponent.html":{},"coverage.html":{}}}],["src/app/auth/password",{"_index":2110,"title":{},"body":{"components/PasswordChangeComponent.html":{},"coverage.html":{}}}],["src/app/auth/reset",{"_index":2929,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/auth/signup/signup.component.ts",{"_index":3562,"title":{},"body":{"coverage.html":{}}}],["src/app/country.ts",{"_index":3564,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/dashboard/admin/admin.component.ts",{"_index":9,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/admin/organizations/organizations.component.ts",{"_index":2084,"title":{},"body":{"components/OrganizationsComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/admin/organizations/organizations.component.ts:19",{"_index":2096,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["src/app/dashboard/admin/organizations/organizations.component.ts:20",{"_index":2089,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["src/app/dashboard/admin/organizations/organizations.component.ts:29",{"_index":2092,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["src/app/dashboard/admin/organizations/organizations.component.ts:33",{"_index":2091,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["src/app/dashboard/admin/organizations/organizations.component.ts:40",{"_index":2093,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["src/app/dashboard/admin/roles",{"_index":2956,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/admin/users/users.component.ts",{"_index":3412,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/admin/users/users.component.ts:23",{"_index":3434,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/admin/users/users.component.ts:24",{"_index":3432,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/admin/users/users.component.ts:25",{"_index":3433,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/admin/users/users.component.ts:27",{"_index":3438,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/admin/users/users.component.ts:28",{"_index":3442,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/admin/users/users.component.ts:29",{"_index":3435,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/admin/users/users.component.ts:30",{"_index":3431,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/admin/users/users.component.ts:31",{"_index":3439,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/admin/users/users.component.ts:33",{"_index":3423,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/admin/users/users.component.ts:44",{"_index":3422,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/admin/users/users.component.ts:53",{"_index":3428,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/admin/users/users.component.ts:56",{"_index":3427,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/admin/users/users.component.ts:61",{"_index":3425,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/admin/users/users.component.ts:66",{"_index":3430,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/card/card.component.ts",{"_index":455,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:109",{"_index":504,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:115",{"_index":489,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:130",{"_index":501,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:152",{"_index":491,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:158",{"_index":495,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:167",{"_index":484,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:176",{"_index":498,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:179",{"_index":496,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:191",{"_index":5432,"title":{},"body":{"components/viewCardDetailsComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:192",{"_index":5431,"title":{},"body":{"components/viewCardDetailsComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:193",{"_index":5430,"title":{},"body":{"components/viewCardDetailsComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:45",{"_index":524,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:46",{"_index":509,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:47",{"_index":507,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:48",{"_index":510,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:49",{"_index":527,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:50",{"_index":511,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:51",{"_index":525,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:52",{"_index":522,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:66",{"_index":492,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:70",{"_index":490,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:76",{"_index":494,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/card/card.component.ts:83",{"_index":488,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":768,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:46",{"_index":790,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:47",{"_index":785,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:48",{"_index":783,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:49",{"_index":784,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:50",{"_index":781,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:51",{"_index":793,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:52",{"_index":791,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:53",{"_index":779,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:55",{"_index":780,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/file",{"_index":1011,"title":{},"body":{"components/FileExplorerComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/header/header.component.ts",{"_index":1288,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/header/header.component.ts:55",{"_index":1312,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/dashboard/header/header.component.ts:56",{"_index":1307,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/dashboard/header/header.component.ts:57",{"_index":1310,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/dashboard/header/header.component.ts:58",{"_index":1309,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/dashboard/header/header.component.ts:59",{"_index":1308,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/dashboard/header/header.component.ts:60",{"_index":1313,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/dashboard/header/header.component.ts:61",{"_index":1306,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/dashboard/header/header.component.ts:73",{"_index":1305,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/dashboard/id",{"_index":1354,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/notes/notes.component.ts",{"_index":1912,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"coverage.html":{}}}],["src/app/dashboard/notes/notes.component.ts:115",{"_index":1942,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:119",{"_index":1944,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:142",{"_index":1931,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:149",{"_index":1935,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:159",{"_index":1923,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:168",{"_index":1946,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:173",{"_index":1934,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:185",{"_index":1929,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:200",{"_index":1940,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:211",{"_index":3470,"title":{},"body":{"components/ViewNoteCompoent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:46",{"_index":1956,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:47",{"_index":1959,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:48",{"_index":1947,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:49",{"_index":1958,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:50",{"_index":1948,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:51",{"_index":1954,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:62",{"_index":1949,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:63",{"_index":1955,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:64",{"_index":1960,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:65",{"_index":1922,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:67",{"_index":1932,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:70",{"_index":1930,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/notes/notes.component.ts:88",{"_index":1928,"title":{},"body":{"components/NotesComponent.html":{}}}],["src/app/dashboard/password/password.component.ts",{"_index":3573,"title":{},"body":{"coverage.html":{}}}],["src/app/dashboard/profile/billing",{"_index":413,"title":{},"body":{"components/BillingDetailsComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/profile/mfa",{"_index":1732,"title":{},"body":{"components/MfaSettingComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/profile/notification/notification.component.ts",{"_index":2016,"title":{},"body":{"components/NotificationComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/profile/notification/notification.component.ts:21",{"_index":2022,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/dashboard/profile/notification/notification.component.ts:22",{"_index":2029,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/dashboard/profile/notification/notification.component.ts:28",{"_index":2021,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/dashboard/profile/password",{"_index":2194,"title":{},"body":{"components/PasswordChangeComponent-1.html":{},"coverage.html":{}}}],["src/app/dashboard/profile/profile.component.ts",{"_index":2885,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/profile/profile.component.ts:16",{"_index":2896,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/dashboard/profile/profile.component.ts:17",{"_index":2901,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/dashboard/profile/profile.component.ts:18",{"_index":2899,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/dashboard/profile/profile.component.ts:19",{"_index":2898,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/dashboard/profile/profile.component.ts:20",{"_index":2894,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/dashboard/profile/profile.component.ts:21",{"_index":2900,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/dashboard/profile/profile.component.ts:22",{"_index":2895,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/dashboard/profile/profile.component.ts:23",{"_index":2897,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/dashboard/profile/profile.component.ts:24",{"_index":2890,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/dashboard/profile/profile.component.ts:43",{"_index":2892,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/dashboard/profile/profile.component.ts:50",{"_index":2893,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/dashboard/profile/security/security.component.ts",{"_index":3061,"title":{},"body":{"components/SecurityComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/profile/security/security.component.ts:20",{"_index":3071,"title":{},"body":{"components/SecurityComponent.html":{}}}],["src/app/dashboard/profile/security/security.component.ts:21",{"_index":3078,"title":{},"body":{"components/SecurityComponent.html":{}}}],["src/app/dashboard/profile/security/security.component.ts:22",{"_index":3076,"title":{},"body":{"components/SecurityComponent.html":{}}}],["src/app/dashboard/profile/security/security.component.ts:27",{"_index":3066,"title":{},"body":{"components/SecurityComponent.html":{}}}],["src/app/dashboard/profile/security/security.component.ts:30",{"_index":3068,"title":{},"body":{"components/SecurityComponent.html":{}}}],["src/app/dashboard/profile/security/security.component.ts:34",{"_index":3067,"title":{},"body":{"components/SecurityComponent.html":{}}}],["src/app/dashboard/profile/security/security.component.ts:49",{"_index":3069,"title":{},"body":{"components/SecurityComponent.html":{}}}],["src/app/dashboard/profile/security/security.component.ts:76",{"_index":3070,"title":{},"body":{"components/SecurityComponent.html":{}}}],["src/app/dashboard/profile/user",{"_index":967,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/side",{"_index":3192,"title":{},"body":{"components/SideNavComponent.html":{},"coverage.html":{}}}],["src/app/dialog/create",{"_index":689,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialog/credit",{"_index":728,"title":{},"body":{"components/CreditCardFormComponent.html":{},"coverage.html":{}}}],["src/app/dialog/file",{"_index":1134,"title":{},"body":{"components/FileUploadComponent.html":{},"coverage.html":{}}}],["src/app/dialog/idproofform/idproofform.component.ts",{"_index":1405,"title":{},"body":{"components/IdproofformComponent.html":{},"coverage.html":{}}}],["src/app/dialog/idproofform/idproofform.component.ts:48",{"_index":1415,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["src/app/dialog/idproofform/idproofform.component.ts:49",{"_index":1414,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["src/app/dialog/idproofform/idproofform.component.ts:50",{"_index":1423,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["src/app/dialog/idproofform/idproofform.component.ts:51",{"_index":1422,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["src/app/dialog/idproofform/idproofform.component.ts:52",{"_index":1421,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["src/app/dialog/idproofform/idproofform.component.ts:59",{"_index":1411,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["src/app/dialog/idproofform/idproofform.component.ts:73",{"_index":1412,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["src/app/dialog/idproofform/idproofform.component.ts:95",{"_index":1413,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["src/app/dialog/notes/notes",{"_index":1999,"title":{},"body":{"components/NotesFormComponent.html":{},"coverage.html":{}}}],["src/app/dialog/organization/organization.component.ts",{"_index":2040,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["src/app/dialog/organization/organization.component.ts:19",{"_index":2049,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/dialog/organization/organization.component.ts:23",{"_index":2050,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/dialog/organization/organization.component.ts:24",{"_index":2046,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/dialog/organization/organization.component.ts:25",{"_index":2051,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/dialog/organization/organization.component.ts:27",{"_index":2045,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/dialog/password",{"_index":2221,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"coverage.html":{}}}],["src/app/dialog/share",{"_index":3131,"title":{},"body":{"components/ShareDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialog/user",{"_index":3319,"title":{},"body":{"components/UserFormComponent.html":{},"coverage.html":{}}}],["src/app/dialog/view",{"_index":3477,"title":{},"body":{"components/ViewPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/api",{"_index":148,"title":{},"body":{"components/ApiDocsComponent.html":{},"coverage.html":{}}}],["src/app/pages/download/download.component.ts",{"_index":819,"title":{},"body":{"components/DownloadComponent.html":{},"coverage.html":{}}}],["src/app/pages/download/download.component.ts:14",{"_index":825,"title":{},"body":{"components/DownloadComponent.html":{}}}],["src/app/pages/footer/footer.component.ts",{"_index":1269,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/pages/header/header.component.ts",{"_index":1328,"title":{},"body":{"components/HeaderComponent-1.html":{},"coverage.html":{}}}],["src/app/pages/header/header.component.ts:56",{"_index":1337,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/pages/header/header.component.ts:57",{"_index":1333,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/pages/header/header.component.ts:58",{"_index":1336,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/pages/header/header.component.ts:59",{"_index":1335,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/pages/header/header.component.ts:60",{"_index":1334,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/pages/header/header.component.ts:61",{"_index":1338,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/pages/header/header.component.ts:62",{"_index":1332,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/pages/header/header.component.ts:74",{"_index":1331,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/pages/index/index.component.ts",{"_index":1449,"title":{},"body":{"components/IndexComponent.html":{},"coverage.html":{}}}],["src/app/pages/index/index.component.ts:19",{"_index":1456,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/pages/index/index.component.ts:20",{"_index":1455,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/pages/index/index.component.ts:21",{"_index":1457,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/pages/index/index.component.ts:23",{"_index":1453,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/pages/password",{"_index":2338,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"coverage.html":{}}}],["src/app/pages/pricing",{"_index":2768,"title":{},"body":{"components/PricingPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/privacy",{"_index":2827,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:107",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:119",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:137",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:144",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:148",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:161",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:171",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:175",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:186",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:19",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:198",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:20",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:22",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:37",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:50",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:63",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:78",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:96",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/card.service.ts",{"_index":627,"title":{},"body":{"injectables/CardService.html":{},"coverage.html":{}}}],["src/app/services/card.service.ts:12",{"_index":636,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:17",{"_index":641,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:23",{"_index":647,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:29",{"_index":646,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:35",{"_index":651,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:41",{"_index":642,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:46",{"_index":644,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:49",{"_index":638,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:54",{"_index":649,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/common.service.ts",{"_index":678,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/app/services/common.service.ts:13",{"_index":684,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:16",{"_index":683,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:8",{"_index":686,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:9",{"_index":682,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/file.service.ts",{"_index":1091,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{}}}],["src/app/services/file.service.ts:10",{"_index":1099,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:14",{"_index":1110,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:22",{"_index":1107,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:27",{"_index":1103,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:32",{"_index":1112,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:37",{"_index":1119,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:42",{"_index":1115,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:47",{"_index":1105,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/folder.service.ts",{"_index":1238,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{},"coverage.html":{}}}],["src/app/services/folder.service.ts:22",{"_index":1262,"title":{},"body":{"injectables/FolderService.html":{}}}],["src/app/services/folder.service.ts:27",{"_index":1263,"title":{},"body":{"injectables/FolderService.html":{}}}],["src/app/services/folder.service.ts:32",{"_index":1267,"title":{},"body":{"injectables/FolderService.html":{}}}],["src/app/services/folder.service.ts:37",{"_index":1266,"title":{},"body":{"injectables/FolderService.html":{}}}],["src/app/services/folder.service.ts:42",{"_index":1265,"title":{},"body":{"injectables/FolderService.html":{}}}],["src/app/services/folder.service.ts:47",{"_index":1268,"title":{},"body":{"injectables/FolderService.html":{}}}],["src/app/services/folder.service.ts:52",{"_index":1264,"title":{},"body":{"injectables/FolderService.html":{}}}],["src/app/services/note.service.ts",{"_index":1877,"title":{},"body":{"injectables/NoteService.html":{},"coverage.html":{}}}],["src/app/services/note.service.ts:12",{"_index":1885,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/services/note.service.ts:17",{"_index":1890,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/services/note.service.ts:23",{"_index":1899,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/services/note.service.ts:29",{"_index":1897,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/services/note.service.ts:35",{"_index":1905,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/services/note.service.ts:41",{"_index":1893,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/services/note.service.ts:47",{"_index":1900,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/services/note.service.ts:52",{"_index":1902,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/services/note.service.ts:62",{"_index":1895,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/services/note.service.ts:65",{"_index":1887,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/services/organization.service.ts",{"_index":2062,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["src/app/services/organization.service.ts:10",{"_index":2068,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/services/organization.service.ts:14",{"_index":2070,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/services/organization.service.ts:18",{"_index":2072,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/services/organization.service.ts:22",{"_index":2075,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/services/organization.service.ts:26",{"_index":2071,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/services/organization.service.ts:30",{"_index":2077,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/services/password.service.ts",{"_index":2547,"title":{},"body":{"injectables/PasswordService.html":{},"coverage.html":{}}}],["src/app/services/password.service.ts:113",{"_index":2578,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/app/services/password.service.ts:123",{"_index":2577,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/app/services/password.service.ts:127",{"_index":2560,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/app/services/password.service.ts:131",{"_index":2570,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/app/services/password.service.ts:134",{"_index":2562,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/app/services/password.service.ts:138",{"_index":2575,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/app/services/password.service.ts:15",{"_index":2582,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/app/services/password.service.ts:16",{"_index":2556,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/app/services/password.service.ts:20",{"_index":2572,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/app/services/password.service.ts:50",{"_index":2558,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/app/services/password.service.ts:70",{"_index":2568,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/app/services/password.service.ts:80",{"_index":2566,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/app/services/password.service.ts:89",{"_index":2564,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/app/services/password.service.ts:93",{"_index":2580,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/app/services/plan.service.ts",{"_index":2707,"title":{},"body":{"injectables/PlanService.html":{},"coverage.html":{}}}],["src/app/services/plan.service.ts:10",{"_index":2727,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/app/services/plan.service.ts:107",{"_index":2717,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/app/services/plan.service.ts:11",{"_index":2743,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/app/services/plan.service.ts:115",{"_index":2723,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/app/services/plan.service.ts:71",{"_index":2712,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/app/services/plan.service.ts:75",{"_index":2721,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/app/services/plan.service.ts:83",{"_index":2720,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/app/services/plan.service.ts:91",{"_index":2714,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/app/services/plan.service.ts:99",{"_index":2725,"title":{},"body":{"injectables/PlanService.html":{}}}],["src/app/services/proof",{"_index":2909,"title":{},"body":{"injectables/ProofIdService.html":{},"coverage.html":{}}}],["src/app/services/roles",{"_index":3047,"title":{},"body":{"injectables/RolesPermissionsService.html":{},"coverage.html":{}}}],["src/app/services/security",{"_index":3115,"title":{},"body":{"injectables/SecurityQuestionService.html":{},"coverage.html":{}}}],["src/app/services/shared",{"_index":3185,"title":{},"body":{"injectables/SharedItemService.html":{},"coverage.html":{}}}],["src/app/support/support.component.ts",{"_index":3247,"title":{},"body":{"components/SupportComponent.html":{},"coverage.html":{}}}],["src/app/support/support.component.ts:24",{"_index":3287,"title":{},"body":{"components/SupportComponent.html":{}}}],["src/app/support/support.component.ts:82",{"_index":3259,"title":{},"body":{"components/SupportComponent.html":{}}}],["src/app/support/support.component.ts:92",{"_index":3288,"title":{},"body":{"components/SupportComponent.html":{}}}],["src/app/support/support.component.ts:93",{"_index":3260,"title":{},"body":{"components/SupportComponent.html":{}}}],["src/app/support/support.component.ts:95",{"_index":3253,"title":{},"body":{"components/SupportComponent.html":{}}}],["src/environments/environment.development.ts",{"_index":3583,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.electron.ts",{"_index":3584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":3585,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sri",{"_index":4989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["st",{"_index":3900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stack",{"_index":3706,"title":{},"body":{"index.html":{}}}],["stamford",{"_index":3885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["standard",{"_index":3263,"title":{},"body":{"components/SupportComponent.html":{},"index.html":{}}}],["standards",{"_index":2861,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{}}}],["star",{"_index":436,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/NotesComponent.html":{}}}],["start",{"_index":2824,"title":{},"body":{"components/PricingPageComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["started",{"_index":1341,"title":{"index.html":{}},"body":{"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["starting",{"_index":3721,"title":{},"body":{"index.html":{}}}],["startup",{"_index":3614,"title":{},"body":{"dependencies.html":{}}}],["startwith",{"_index":3152,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["startwith('')).subscribe(value",{"_index":3163,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["state",{"_index":989,"title":{},"body":{"components/EditProfileComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["state.url.includes(route",{"_index":3785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":3544,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":3801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["status",{"_index":1276,"title":{},"body":{"components/FooterComponent.html":{},"components/UserProfileComponent.html":{}}}],["stavanger",{"_index":4558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stays",{"_index":2698,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["steal",{"_index":2463,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["step",{"_index":1655,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["steps",{"_index":1811,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["sterling",{"_index":3989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stockholm",{"_index":4549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":447,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["store",{"_index":832,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ShareDialogComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["stored",{"_index":2493,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["storefiles",{"_index":2975,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["storing",{"_index":1465,"title":{},"body":{"components/IndexComponent.html":{},"index.html":{}}}],["stp",{"_index":5239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strength",{"_index":1488,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["strength'},{'name",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["strength.component.css",{"_index":2630,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["strength.component.html",{"_index":2631,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["strength.component.ts",{"_index":2627,"title":{},"body":{"components/PasswordStrengthComponent.html":{},"coverage.html":{}}}],["strength.component.ts:27",{"_index":2642,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["strength.component.ts:28",{"_index":2643,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["strength.component.ts:30",{"_index":2638,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["strength.component.ts:37",{"_index":2637,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["strength.component.ts:57",{"_index":2640,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["strength/password",{"_index":2626,"title":{},"body":{"components/PasswordStrengthComponent.html":{},"coverage.html":{}}}],["strengthen",{"_index":1555,"title":{},"body":{"components/IndexComponent.html":{}}}],["stress",{"_index":1549,"title":{},"body":{"components/IndexComponent.html":{}}}],["string",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CreateFolderDialogComponent.html":{},"components/DownloadComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"injectables/RolesPermissionsService.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["stringent",{"_index":1543,"title":{},"body":{"components/IndexComponent.html":{}}}],["strings",{"_index":2437,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["strong",{"_index":1477,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"index.html":{}}}],["stronger",{"_index":2680,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["strongpassword",{"_index":2325,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["strongpasswordvalidator",{"_index":2232,"title":{},"body":{"components/PasswordFormComponent.html":{}}}],["styles",{"_index":1010,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{}}}],["styleurl",{"_index":155,"title":{},"body":{"components/ApiDocsComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ShareDialogComponent.html":{},"components/UserFormComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["styleurls",{"_index":1015,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SupportComponent.html":{}}}],["subang",{"_index":4677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":1963,"title":{},"body":{"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{}}}],["submission",{"_index":3330,"title":{},"body":{"components/UserFormComponent.html":{}}}],["submit",{"_index":3045,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"components/UserFormComponent.html":{}}}],["submitcontactform",{"_index":3252,"title":{},"body":{"components/SupportComponent.html":{}}}],["subscribe",{"_index":566,"title":{},"body":{"components/CardComponent.html":{},"components/IdproofformComponent.html":{},"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["subscribe((result",{"_index":807,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["subscription",{"_index":2747,"title":{},"body":{"injectables/PlanService.html":{}}}],["subscriptions",{"_index":2749,"title":{},"body":{"injectables/PlanService.html":{}}}],["success",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["successful",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/SideNavComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["successfully",{"_index":583,"title":{},"body":{"components/CardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/SecurityComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["successmessage",{"_index":3251,"title":{},"body":{"components/SupportComponent.html":{}}}],["such",{"_index":1469,"title":{},"body":{"components/IndexComponent.html":{},"components/MfaSettingComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["sudan",{"_index":5004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sudo",{"_index":920,"title":{},"body":{"components/DownloadComponent.html":{}}}],["suggestions",{"_index":3707,"title":{},"body":{"index.html":{}}}],["sula",{"_index":5414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sundbyberg",{"_index":4551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":858,"title":{},"body":{"components/DownloadComponent.html":{},"components/HeaderComponent-1.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["support&#64;safepassvault.com",{"_index":2882,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["support'},{'name",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["support.component.css",{"_index":3248,"title":{},"body":{"components/SupportComponent.html":{}}}],["support.component.html",{"_index":3249,"title":{},"body":{"components/SupportComponent.html":{}}}],["support@safepassvault.com",{"_index":2884,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["support_agent",{"_index":1344,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["supportcomponent",{"_index":130,"title":{"components/SupportComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["supports",{"_index":1835,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/SupportComponent.html":{}}}],["surat",{"_index":4247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sure",{"_index":948,"title":{},"body":{"components/DownloadComponent.html":{}}}],["svk",{"_index":4757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svn",{"_index":4764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swagger",{"_index":170,"title":{},"body":{"components/ApiDocsComponent.html":{},"dependencies.html":{}}}],["swagger.json",{"_index":177,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["swaggerui",{"_index":168,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["swaggerui.swaggeruibundle",{"_index":175,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["swaggerui.swaggeruibundle['plugins'].downloadurl",{"_index":185,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["swaggerui.swaggeruibundle['presets'].apis",{"_index":182,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["swaggerui.swaggeruibundle['swaggeruistandalonepreset",{"_index":183,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["swaggeruibundle",{"_index":169,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["swakopmund",{"_index":5078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swansea",{"_index":4189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaziland",{"_index":5088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swe",{"_index":4548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sweden",{"_index":4546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":2421,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["switchmap",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/TagFormCompoent.html":{}}}],["switchmap((response",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PasswordService.html":{}}}],["switchmap(term",{"_index":2281,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["swz",{"_index":5090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["syc",{"_index":5259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sydney",{"_index":4395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbols",{"_index":1499,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["sync",{"_index":1275,"title":{},"body":{"components/FooterComponent.html":{},"components/IndexComponent.html":{},"components/SupportComponent.html":{}}}],["synced",{"_index":1277,"title":{},"body":{"components/FooterComponent.html":{}}}],["synchronization",{"_index":3720,"title":{},"body":{"index.html":{}}}],["syr",{"_index":4907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["syracuse",{"_index":4058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["syria",{"_index":4905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":931,"title":{},"body":{"components/DownloadComponent.html":{},"index.html":{}}}],["szeged",{"_index":4717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["são",{"_index":4483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["södertälje",{"_index":4552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":3525,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["tab",{"_index":2888,"title":{},"body":{"components/ProfileComponent.html":{}}}],["table",{"_index":3587,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3586,"title":{},"body":{"coverage.html":{}}}],["tablets",{"_index":3700,"title":{},"body":{"index.html":{}}}],["tacoma",{"_index":4152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tadjourah",{"_index":5234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tag",{"_index":2032,"title":{},"body":{"components/NotificationComponent.html":{},"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/TagFormCompoent.html":{},"components/ViewPasswordComponent.html":{}}}],["tag'},{'name",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["tag.name",{"_index":1990,"title":{},"body":{"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewPasswordComponent.html":{}}}],["tagadded",{"_index":3488,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["tagform",{"_index":2332,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["tagformcompoent",{"_index":132,"title":{"components/TagFormCompoent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["tagids",{"_index":2272,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["tagids.push(tag._id",{"_index":2276,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["tagnam",{"_index":2275,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["tagname",{"_index":2292,"title":{},"body":{"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/TagFormCompoent.html":{}}}],["tags",{"_index":1951,"title":{},"body":{"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{}}}],["tagsname",{"_index":2226,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["tailwind",{"_index":3713,"title":{},"body":{"index.html":{}}}],["taiz",{"_index":4924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tajikistan",{"_index":4856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["take",{"_index":810,"title":{},"body":{"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/IndexComponent.html":{}}}],["taking",{"_index":3307,"title":{},"body":{"components/SupportComponent.html":{}}}],["takoradi",{"_index":5052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["talk",{"_index":3306,"title":{},"body":{"components/SupportComponent.html":{}}}],["tallinn",{"_index":4736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tamale",{"_index":5051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tamenglong",{"_index":4305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tamil",{"_index":4353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tampa",{"_index":3898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tanzania",{"_index":5030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tap",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["tap((response",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["tartu",{"_index":4737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tas",{"_index":4429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tashkent",{"_index":4844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tasmania",{"_index":4428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tauranga",{"_index":4544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tbilisi",{"_index":4831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tca",{"_index":5336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tcd",{"_index":5147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["team",{"_index":962,"title":{},"body":{"components/DownloadComponent.html":{}}}],["technology",{"_index":3705,"title":{},"body":{"index.html":{}}}],["tegucigalpa",{"_index":5413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tel",{"_index":4666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["telangana",{"_index":4359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["temporary",{"_index":3677,"title":{},"body":{"index.html":{}}}],["tennessee",{"_index":4114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["term",{"_index":2300,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["terms",{"_index":2841,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["territory",{"_index":4437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":1822,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["tester",{"_index":2659,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["testimonials",{"_index":1560,"title":{},"body":{"components/IndexComponent.html":{}}}],["testing",{"_index":1849,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["tetovo",{"_index":4807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["texas",{"_index":4121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":3046,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["teyateyaneng",{"_index":5085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tezpur",{"_index":4214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tg",{"_index":4360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tgo",{"_index":5120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tha",{"_index":4603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thailand",{"_index":4601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["themselves",{"_index":3651,"title":{},"body":{"index.html":{}}}],["there's",{"_index":3765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thimphu",{"_index":4929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["think",{"_index":2663,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["third",{"_index":2869,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["thiruvananthapuram",{"_index":4281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this._filter(value",{"_index":3164,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this._userprofilesubject.asobservable",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._userprofilesubject.next(null",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._userprofilesubject.next(response",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.activateroute.queryparams.subscribe(params",{"_index":1867,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["this.activeroute.queryparams.subscribe((params",{"_index":2145,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.auth.getprofile().subscribe((res",{"_index":1874,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["this.auth.getprofile().subscribe((response",{"_index":1721,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.auth.login(this.loginform.value).subscribe((response",{"_index":1715,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.auth.verifymfa(mfadata).subscribe(response",{"_index":1871,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["this.authservice._userprofilesubject.next(null",{"_index":1318,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["this.authservice.emailverification(payload).subscribe",{"_index":1648,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["this.authservice.getprofile().subscribe((res",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["this.authservice.logout().subscribe",{"_index":1317,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["this.authservice.passwordreset(currentpassword",{"_index":2205,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["this.authservice.resendinvitation(user.organization",{"_index":3460,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.authservice.updatemfasettings(this.mfaform.value).subscribe",{"_index":1800,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.authservice.updateprofile(this.profileform.value).subscribe",{"_index":998,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.authservice.userprofile$.subscribe",{"_index":1314,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["this.authservice.userprofile$.subscribe((userprofile",{"_index":1770,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.breakpointobserver",{"_index":804,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["this.calculatepasswordstrength(this.password",{"_index":2645,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["this.capitalizewords",{"_index":2443,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["this.card",{"_index":604,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.cardserrvice",{"_index":558,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.cardserrvice.addtofavorites(ids).subscribe",{"_index":580,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.cardserrvice.exportcardsascsv(ids).subscribe((blob",{"_index":571,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.cardserrvice.getcards().subscribe((response",{"_index":545,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.changedetect.detectchanges",{"_index":1970,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["this.changedetectorref.detectchanges",{"_index":547,"title":{},"body":{"components/CardComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/LoginComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.changedetetorref.detectchanges",{"_index":1385,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["this.clipboard.copy(this.passphrase",{"_index":2446,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["this.clipboard.copy(this.password",{"_index":2430,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["this.commentadded.emit(newcomment",{"_index":3513,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["this.commonservice.profilesidebaropen.next(this.issidebaropen",{"_index":2905,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.commonservice.profilesidebaropen.subscribe((response",{"_index":2903,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.commonservice.sidebaropen.subscribe((res",{"_index":817,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.commonservice.toggleprofilesidebar",{"_index":432,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/SecurityComponent.html":{}}}],["this.commonservice.togglesidebar",{"_index":601,"title":{},"body":{"components/CardComponent.html":{},"components/FileExplorerComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/NotesComponent.html":{},"components/SideNavComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.confirmpasswordmatchvalidator",{"_index":2136,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.contact",{"_index":3294,"title":{},"body":{"components/SupportComponent.html":{}}}],["this.contact.email",{"_index":3290,"title":{},"body":{"components/SupportComponent.html":{}}}],["this.contact.firstname",{"_index":3289,"title":{},"body":{"components/SupportComponent.html":{}}}],["this.contact.message",{"_index":3291,"title":{},"body":{"components/SupportComponent.html":{}}}],["this.cracktimes",{"_index":2427,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["this.createpermissionsform(rolepermissions",{"_index":3015,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["this.creditcardform",{"_index":753,"title":{},"body":{"components/CreditCardFormComponent.html":{}}}],["this.creditcardform.valid",{"_index":759,"title":{},"body":{"components/CreditCardFormComponent.html":{}}}],["this.creditcardservice.createcard(this.creditcardform.value).subscribe(response",{"_index":760,"title":{},"body":{"components/CreditCardFormComponent.html":{}}}],["this.data",{"_index":995,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.data.carddetails",{"_index":605,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.data.items",{"_index":3177,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this.data.itemtype",{"_index":3178,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this.data.note?._id",{"_index":2011,"title":{},"body":{"components/NotesFormComponent.html":{}}}],["this.data.note?.content",{"_index":2009,"title":{},"body":{"components/NotesFormComponent.html":{}}}],["this.data.note?.title",{"_index":2008,"title":{},"body":{"components/NotesFormComponent.html":{}}}],["this.data?.password.key",{"_index":2303,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.data?.password?.tags.foreach((tag",{"_index":2273,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.datasource",{"_index":546,"title":{},"body":{"components/CardComponent.html":{},"components/FileExplorerComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.datasource.data",{"_index":3450,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.datasource.filter",{"_index":3453,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.datasource.length",{"_index":590,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.datasource.paginator",{"_index":3444,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.datasource.paginator.firstpage",{"_index":3455,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.datasource.sort",{"_index":3446,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.detectorref.detectchanges",{"_index":2284,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/PricingPageComponent.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["this.dialog.open(createfolderdialogcomponent",{"_index":3241,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.dialog.open(fileuploadcomponent",{"_index":1059,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["this.dialog.open(idproofformcomponent",{"_index":1375,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["this.dialog.open(notesformcomponent",{"_index":1980,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["this.dialog.open(organizationcomponent",{"_index":2102,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["this.dialog.open(userformcomponent",{"_index":3456,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.dialog.open(viewnotecompoent",{"_index":1979,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["this.dialogref.close",{"_index":723,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/OrganizationComponent.html":{},"components/ShareDialogComponent.html":{},"components/UserFormComponent.html":{}}}],["this.dialogref.close(res",{"_index":2337,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.dialogref.close(this.foldername",{"_index":719,"title":{},"body":{"components/CreateFolderDialogComponent.html":{}}}],["this.dialogref.close(this.userform.value",{"_index":3333,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.dialogref.close(true",{"_index":1004,"title":{},"body":{"components/EditProfileComponent.html":{},"components/NotesFormComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordFormComponent.html":{},"components/ShareDialogComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.dilaogref.close",{"_index":1223,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.disableallmfafields",{"_index":1786,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.emailform",{"_index":1629,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["this.emailform.invalid",{"_index":2950,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.errormessage",{"_index":3293,"title":{},"body":{"components/SupportComponent.html":{}}}],["this.estimatestrength",{"_index":2420,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["this.fb.array",{"_index":3004,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["this.fb.group",{"_index":754,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/FileUploadComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesFormComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/ShareDialogComponent.html":{},"components/UserFormComponent.html":{}}}],["this.fb.group(permissions",{"_index":3019,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["this.features.reduce((acc",{"_index":3016,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["this.feedback",{"_index":2414,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["this.fileservice.createfolder(foldername).subscribe",{"_index":1186,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.fileservice.getfilesandfolders('').subscribe(files",{"_index":1057,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["this.fileservice.searchfolders(input).subscribe",{"_index":1198,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.fileservice.searchusers(input).subscribe((response",{"_index":1202,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.fileservice.uploadfile(formdata).subscribe",{"_index":1219,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.filetoupload",{"_index":1194,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.filteredfolders",{"_index":1199,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.filteredfolders.push(res.folder",{"_index":1188,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.filteredpasswords$.next(decryptedpasswords",{"_index":2604,"title":{},"body":{"injectables/PasswordService.html":{}}}],["this.filteredusers",{"_index":1203,"title":{},"body":{"components/FileUploadComponent.html":{},"components/ShareDialogComponent.html":{}}}],["this.folderid",{"_index":3229,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.foldernotfound",{"_index":1189,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.folders",{"_index":3236,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.folderservice.createfolder",{"_index":3242,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.folderservice.getfoldersbytype(section).subscribe",{"_index":3235,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.formbuilder.group",{"_index":988,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.generatesecurekey(32",{"_index":2304,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.getcardslistings",{"_index":544,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.getnotes",{"_index":1965,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["this.getorganizations",{"_index":2098,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["this.getpasswords",{"_index":2615,"title":{},"body":{"injectables/PasswordService.html":{}}}],["this.getprofile",{"_index":3381,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.getstrengthmessage(score",{"_index":2648,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["this.hide.set(!this.hide",{"_index":1711,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hideheader",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["this.http",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete(`${this.apiurl}/${folderid",{"_index":1257,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{}}}],["this.http.delete(`${this.apiurl}/${id",{"_index":661,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/ProofIdService.html":{},"injectables/SecurityQuestionService.html":{}}}],["this.http.delete(`${this.apiurl}/${planid}`).pipe",{"_index":2753,"title":{},"body":{"injectables/PlanService.html":{}}}],["this.http.delete(`${this.apiurl}/password/${id",{"_index":2617,"title":{},"body":{"injectables/PasswordService.html":{}}}],["this.http.delete(`${this.apiurl}/password/${ids",{"_index":2619,"title":{},"body":{"injectables/PasswordService.html":{}}}],["this.http.get(`${environment.api_url}/tags/search/${name",{"_index":2622,"title":{},"body":{"injectables/PasswordService.html":{}}}],["this.http.get(`${this.apiurl",{"_index":1127,"title":{},"body":{"injectables/FileService.html":{},"injectables/PasswordService.html":{},"injectables/SecurityQuestionService.html":{}}}],["this.http.get(`${this.apiurl}/${folderid",{"_index":1253,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{}}}],["this.http.get(`${this.apiurl}/${id",{"_index":659,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/ProofIdService.html":{}}}],["this.http.get(`${this.apiurl}/${planid}`).pipe",{"_index":2746,"title":{},"body":{"injectables/PlanService.html":{}}}],["this.http.get(`${this.apiurl}/auth/organizations",{"_index":2080,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.http.get(`${this.apiurl}/auth/users",{"_index":2082,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.http.get(`${this.apiurl}/export?ids=${ids",{"_index":662,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/PasswordService.html":{}}}],["this.http.get(`${this.apiurl}/folders/search",{"_index":1124,"title":{},"body":{"injectables/FileService.html":{}}}],["this.http.get(`${this.apiurl}/plans`).pipe",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${this.apiurl}/preview/${fileid",{"_index":1133,"title":{},"body":{"injectables/FileService.html":{}}}],["this.http.get(`${this.apiurl}/profile`).pipe",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${this.apiurl}/searchusers/${name",{"_index":1129,"title":{},"body":{"injectables/FileService.html":{}}}],["this.http.get(`${this.apiurl}/type/${type",{"_index":1251,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{}}}],["this.http.get(`${this.apiurl}/users",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${this.apiurl}?search=${searchterm",{"_index":1908,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.http.get(`${this.apiurl}`).pipe",{"_index":2744,"title":{},"body":{"injectables/PlanService.html":{}}}],["this.http.get(this.apiurl",{"_index":657,"title":{},"body":{"injectables/CardService.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"injectables/ProofIdService.html":{}}}],["this.http.patch(`${this.apiurl}/${id",{"_index":660,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/ProofIdService.html":{}}}],["this.http.patch(`${this.apiurl}/profile",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('https://your",{"_index":3390,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.http.post(`${environment.api_url}/tags/tag",{"_index":2623,"title":{},"body":{"injectables/PasswordService.html":{}}}],["this.http.post(`${this.apiurl",{"_index":655,"title":{},"body":{"injectables/CardService.html":{},"injectables/ProofIdService.html":{}}}],["this.http.post(`${this.apiurl}/${passwordid}/comments",{"_index":2625,"title":{},"body":{"injectables/PasswordService.html":{}}}],["this.http.post(`${this.apiurl}/add",{"_index":2624,"title":{},"body":{"injectables/PasswordService.html":{}}}],["this.http.post(`${this.apiurl}/auth/accept",{"_index":2083,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.http.post(`${this.apiurl}/auth/organization",{"_index":2079,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.http.post(`${this.apiurl}/auth/organizations/${organizationid}/invitations",{"_index":2081,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.http.post(`${this.apiurl}/card/${cardids}/favorite",{"_index":664,"title":{},"body":{"injectables/CardService.html":{}}}],["this.http.post(`${this.apiurl}/change",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.apiurl}/confirm",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.apiurl}/create",{"_index":2748,"title":{},"body":{"injectables/PlanService.html":{}}}],["this.http.post(`${this.apiurl}/folder",{"_index":1128,"title":{},"body":{"injectables/FileService.html":{}}}],["this.http.post(`${this.apiurl}/login",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.apiurl}/mfa",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.apiurl}/note",{"_index":1907,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.http.post(`${this.apiurl}/note/${noteid}/favorite",{"_index":1911,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.http.post(`${this.apiurl}/password",{"_index":2609,"title":{},"body":{"injectables/PasswordService.html":{}}}],["this.http.post(`${this.apiurl}/password/${passwordid}/favorite",{"_index":2620,"title":{},"body":{"injectables/PasswordService.html":{}}}],["this.http.post(`${this.apiurl}/register",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.apiurl}/resend",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.apiurl}/reset",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.apiurl}/share/${itemid",{"_index":1132,"title":{},"body":{"injectables/FileService.html":{}}}],["this.http.post(`${this.apiurl}/share/${passwordid",{"_index":1909,"title":{},"body":{"injectables/NoteService.html":{},"injectables/PasswordService.html":{}}}],["this.http.post(`${this.apiurl}/upload",{"_index":1131,"title":{},"body":{"injectables/FileService.html":{}}}],["this.http.post(`${this.apiurl}/verify",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(this.apiurl",{"_index":1247,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{}}}],["this.http.put(`${this.apiurl}/${folderid",{"_index":1255,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{}}}],["this.http.put(`${this.apiurl}/${id",{"_index":3130,"title":{},"body":{"injectables/SecurityQuestionService.html":{}}}],["this.http.put(`${this.apiurl}/${planid",{"_index":2752,"title":{},"body":{"injectables/PlanService.html":{}}}],["this.http.put(`${this.apiurl}/password/${_id",{"_index":2621,"title":{},"body":{"injectables/PasswordService.html":{}}}],["this.idproofform",{"_index":1424,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["this.idproofform.get('idnumber",{"_index":1428,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["this.idproofform.get('idtype')?.valuechanges.subscribe((idtype",{"_index":1426,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["this.idproofform.valid",{"_index":1437,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["this.idproofservice.getproofids().subscribe((response",{"_index":1383,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{}}}],["this.initializeroles(permissions",{"_index":3006,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["this.invitationid",{"_index":1633,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["this.isallselected",{"_index":591,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.isbreakpoint",{"_index":813,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.isbreakpoints",{"_index":2904,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.isloading",{"_index":1966,"title":{},"body":{"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{}}}],["this.issidebaropen",{"_index":814,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["this.linkverified",{"_index":2182,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.loadfiles",{"_index":1056,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["this.loading",{"_index":1714,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loadorganizations",{"_index":3327,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.loadsecurityquestions",{"_index":3081,"title":{},"body":{"components/SecurityComponent.html":{}}}],["this.loadswaggerui",{"_index":173,"title":{},"body":{"components/ApiDocsComponent.html":{}}}],["this.loadusers",{"_index":3159,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this.loginform.patchvalue(res",{"_index":1702,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":1713,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.lowercase",{"_index":2409,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["this.matdialog.open(creditcardformcomponent",{"_index":548,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.matdialog.open(editprofilecomponent",{"_index":3377,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.matdialog.open(viewcarddetailscomponent",{"_index":568,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.matsnackbar.open('error",{"_index":1441,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["this.matsnackbar.open('id",{"_index":1440,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["this.mfaform",{"_index":1764,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.mfaform.controls.email.setvalue(params[`email",{"_index":1869,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["this.mfaform.get('emailaddress')?.disable",{"_index":1798,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.mfaform.get('emailaddress')?.enable",{"_index":1792,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.mfaform.get('emailaddress')?.setvalue(this.userprofile.email",{"_index":1795,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.mfaform.get('mfamethod",{"_index":1783,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.mfaform.get('smsphonenumber')?.disable",{"_index":1797,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.mfaform.get('smsphonenumber')?.enable",{"_index":1790,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.mfaform.get('smsphonenumber')?.setvalue(this.userprofile.phone",{"_index":1791,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.mfaform.get('totpsecret')?.disable",{"_index":1796,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.mfaform.get('totpsecret')?.enable",{"_index":1789,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.mfaform.patchvalue",{"_index":1772,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.mfaform.valid",{"_index":1799,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["this.mfaform.value",{"_index":1870,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["this.mfamethod",{"_index":1717,"title":{},"body":{"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["this.mode",{"_index":815,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["this.newcomment",{"_index":3507,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["this.newcomment.trim",{"_index":3506,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["this.newtag",{"_index":3522,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["this.newtag).subscribe((res",{"_index":3518,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["this.newtag.trim",{"_index":3515,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["this.noteform",{"_index":2007,"title":{},"body":{"components/NotesFormComponent.html":{}}}],["this.noteform.valid",{"_index":2010,"title":{},"body":{"components/NotesFormComponent.html":{}}}],["this.noteform.value).subscribe((response:any",{"_index":2013,"title":{},"body":{"components/NotesFormComponent.html":{}}}],["this.notes",{"_index":1968,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["this.notes.length",{"_index":1977,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["this.noteservice",{"_index":1971,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["this.noteservice.addtofavorites(ids).subscribe",{"_index":1976,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["this.noteservice.createnote(this.noteform.value).subscribe((response",{"_index":2014,"title":{},"body":{"components/NotesFormComponent.html":{}}}],["this.noteservice.exportnotesascsv(ids).subscribe((blob",{"_index":1983,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["this.noteservice.getnotes(this.searchterm).subscribe",{"_index":1967,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["this.noteservice.updatenote(this.data.note._id",{"_index":2012,"title":{},"body":{"components/NotesFormComponent.html":{}}}],["this.numbers",{"_index":2405,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["this.onidtypechange",{"_index":1425,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["this.opensections[section",{"_index":3234,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.organizationform.value",{"_index":2054,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.organizations",{"_index":2100,"title":{},"body":{"components/OrganizationsComponent.html":{},"components/UserFormComponent.html":{}}}],["this.organizationservice.getinvitations().subscribe((res",{"_index":3448,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.organizationservice.getorganizations().subscribe",{"_index":3328,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.organizationservice.sendinvitation(this.userform.value.organization",{"_index":3331,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.organizationservie.updateinvitationstatus(this.invitationid",{"_index":1641,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["this.organizationsservice.getorganizations().subscribe((organizations",{"_index":2099,"title":{},"body":{"components/OrganizationsComponent.html":{}}}],["this.organizatioonservice.createorganization(organization_name",{"_index":2055,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.paginator",{"_index":3445,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.passphrase",{"_index":2441,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["this.password",{"_index":2412,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["this.password.comments",{"_index":3511,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["this.password.comments.push(newcomment",{"_index":3512,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["this.password.tags",{"_index":3516,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["this.password.tags.filter((t",{"_index":3524,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["this.password.tags.push(this.newtag.trim",{"_index":3519,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["this.password?.tags",{"_index":3523,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["this.passwordchangeform.valid",{"_index":2203,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["this.passwordchangeform.value",{"_index":2204,"title":{},"body":{"components/PasswordChangeComponent-1.html":{}}}],["this.passwordform",{"_index":1625,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["this.passwordform.controls.searchterm.setvalue",{"_index":2294,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordform.controls.tags.setvalue([...tags",{"_index":2289,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordform.get('confirmpassword')?.value",{"_index":2174,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.passwordform.get('email')?.value",{"_index":1640,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["this.passwordform.get('password')?.value",{"_index":1639,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/PasswordChangeComponent.html":{}}}],["this.passwordform.get('tags')?.setvalue(tagids",{"_index":2287,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordform.invalid",{"_index":2173,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordform.patchvalue(this.data.password",{"_index":2271,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordform.valid",{"_index":1638,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["this.passwordform.value.description",{"_index":2313,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordform.value.name",{"_index":2312,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordform.value.searchterm?.trim().tolowercase",{"_index":2296,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordform.value.tags",{"_index":2288,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordform?.get('username')?.value",{"_index":2310,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordform?.get('website')?.value",{"_index":2309,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordform?.reset",{"_index":2316,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordform?.value._id",{"_index":2302,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordform?.value?.password",{"_index":2307,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordmatchvalidator",{"_index":1628,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["this.passwordservice",{"_index":2314,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordservice.addtagtopassword(this.password._id",{"_index":3517,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["this.passwordservice.postcomment(this.password._id",{"_index":3509,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["this.passwordservice.searchtags(term",{"_index":2282,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.passwordstrength",{"_index":2647,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["this.passwordvalidator",{"_index":1687,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordChangeComponent.html":{}}}],["this.plan",{"_index":3371,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.planloading",{"_index":2802,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["this.plantypes",{"_index":2804,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["this.populateformwithuserprofile(userprofile",{"_index":1771,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.profileform",{"_index":987,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.profileform.patchvalue(this.data",{"_index":996,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.profilesidebaropen.next(!this.profilesidebaropen.value",{"_index":688,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.proofidservice",{"_index":1438,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["this.resettoken",{"_index":2154,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.resettoken).subscribe",{"_index":2180,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.roles.clear",{"_index":3008,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["this.roles.push(this.fb.group",{"_index":3012,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["this.rolesform",{"_index":3003,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["this.rolesform.get('roles",{"_index":3007,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["this.rolesform.valid",{"_index":3020,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["this.rolesform.value.roles.reduce((acc",{"_index":3022,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["this.rolespermissions.asobservable",{"_index":3056,"title":{},"body":{"injectables/RolesPermissionsService.html":{}}}],["this.rolespermissions.getvalue",{"_index":3058,"title":{},"body":{"injectables/RolesPermissionsService.html":{}}}],["this.rolespermissions.next",{"_index":3059,"title":{},"body":{"injectables/RolesPermissionsService.html":{}}}],["this.rolespermissionsservice.getrolespermissions().subscribe((permissions",{"_index":3005,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["this.rolespermissionsservice.updaterolepermissions('admin",{"_index":3026,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["this.rolespermissionsservice.updaterolepermissions('user",{"_index":3028,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["this.route.parammap.subscribe((params",{"_index":3228,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.route.queryparams.subscribe((res",{"_index":1701,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":1632,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["this.router.events.subscribe((event",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["this.router.navigate(['/dashboard/passwords",{"_index":1724,"title":{},"body":{"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["this.router.navigate(['/login",{"_index":2158,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.router.navigate([buttonlink",{"_index":2812,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["this.router.navigate([triallink",{"_index":2815,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["this.router.navigatebyurl",{"_index":1321,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["this.router.navigatebyurl('/auth/login",{"_index":1461,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.router.navigatebyurl('/dashboard/passwords",{"_index":1462,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.router.navigatebyurl(`/auth/mfa",{"_index":1719,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl(`/dashboard/${section}/${folderid",{"_index":3239,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.router.navigatebyurl(`/dashboard/profile/${url",{"_index":2906,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusturl(objecturl",{"_index":3386,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.searchtermsubject.next(searchterm",{"_index":2297,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.searchtermsubject.pipe",{"_index":2277,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.securityform.setvalue",{"_index":3084,"title":{},"body":{"components/SecurityComponent.html":{}}}],["this.securityform.valid",{"_index":3089,"title":{},"body":{"components/SecurityComponent.html":{}}}],["this.securityform.value",{"_index":3091,"title":{},"body":{"components/SecurityComponent.html":{}}}],["this.securityquestionservice.createsecurityquestion(securityquestions).subscribe",{"_index":3101,"title":{},"body":{"components/SecurityComponent.html":{}}}],["this.securityquestionservice.getsecurityquestions().subscribe",{"_index":3082,"title":{},"body":{"components/SecurityComponent.html":{}}}],["this.selectedfile",{"_index":3382,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.selectedimageurl",{"_index":3385,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.selectedinterval",{"_index":2806,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["this.selectedusers",{"_index":3172,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this.selectedusers.filter(u",{"_index":3173,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this.selectedusers.indexof(user",{"_index":1227,"title":{},"body":{"components/FileUploadComponent.html":{},"components/ShareDialogComponent.html":{}}}],["this.selectedusers.map(user",{"_index":3179,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this.selectedusers.push(event.option.viewvalue",{"_index":1226,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.selectedusers.push(user",{"_index":3170,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this.selectedusers.splice(index",{"_index":1228,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.selection.clear",{"_index":592,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.selection.isselected(row",{"_index":595,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.selection.select(...this.datasource",{"_index":593,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.selection.select(...this.notes",{"_index":1978,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["this.selection.selected",{"_index":552,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.selection.selected.length",{"_index":588,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["this.selectmfamethod",{"_index":1781,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.service.addtag(this.tagform.value).pipe(tap()).subscribe((res",{"_index":2334,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.service.changepassword(payload",{"_index":2175,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.service.getplans().subscribe",{"_index":2803,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["this.service.resetpassword(this.emailform.value.email).subscribe",{"_index":2951,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.service.verifyresetrequest(this.userid",{"_index":2179,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.shareditemservice.shareitem",{"_index":3176,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this.shareform",{"_index":3158,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this.shareform.controls['users'].setvalue",{"_index":3171,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this.shareform.get('users')?.valuechanges.pipe",{"_index":3162,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this.shareform.value.permissions",{"_index":3175,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this.showconfirmpassword",{"_index":2186,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.showpassword",{"_index":2185,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.sidebaropen.next(!this.sidebaropen.value",{"_index":687,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.snacbar.open('email",{"_index":1651,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["this.snacbar.open('invitation",{"_index":1644,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["this.snackbar.open",{"_index":1205,"title":{},"body":{"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/MfaSettingComponent.html":{}}}],["this.snackbar.open('error",{"_index":1190,"title":{},"body":{"components/FileUploadComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.snackbar.open('file",{"_index":1220,"title":{},"body":{"components/FileUploadComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.snackbar.open('image",{"_index":3393,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.snackbar.open('invalid",{"_index":2156,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.snackbar.open('invitation",{"_index":3463,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.snackbar.open('login",{"_index":1722,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.snackbar.open('logout",{"_index":1320,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["this.snackbar.open('mfa",{"_index":1801,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["this.snackbar.open('organization",{"_index":2058,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.snackbar.open('passphrase",{"_index":2447,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["this.snackbar.open('password",{"_index":2177,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.snackbar.open('please",{"_index":3394,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.snackbar.open('profile",{"_index":1000,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.snackbar.open('tag",{"_index":2335,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.snackbar.open('your",{"_index":2954,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.snackbar.open(`folder",{"_index":1187,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.snackbar.open(error.message",{"_index":2178,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.sort",{"_index":3447,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.strength",{"_index":2413,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["this.strongpasswordvalidator",{"_index":2256,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.successmessage",{"_index":3292,"title":{},"body":{"components/SupportComponent.html":{}}}],["this.symbols",{"_index":2410,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["this.tagadded.emit(this.newtag.trim",{"_index":3521,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["this.tags",{"_index":2283,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.tagsname.update(tagnam",{"_index":2274,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.tagsname.update(tagname",{"_index":2291,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.togglemfa(profile.mfaenabled",{"_index":1780,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.togglesidebar",{"_index":2908,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.token",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/IndexComponent.html":{},"interfaces/Window.html":{}}}],["this.translate.addlangs(['en",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["this.translate.setdefaultlang('en",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["this.translate.use('en",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["this.uploadform",{"_index":1183,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uploadform.get('encrypted')?.value",{"_index":1217,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uploadform.get('folderid')?.value",{"_index":1211,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uploadform.get('offlineaccess')?.value",{"_index":1218,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uploadform.get('ownerid')?.value",{"_index":1213,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uploadform.invalid",{"_index":1204,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uploadform.patchvalue",{"_index":1229,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uploadform.reset",{"_index":1221,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uploadform.value.sharedwith.indexof(name",{"_index":1224,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uploadform.value.sharedwith.splice(index",{"_index":1225,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.uppercase",{"_index":2407,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["this.urlvalidator",{"_index":2255,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["this.user",{"_index":3369,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userform",{"_index":3326,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.userform.valid",{"_index":3329,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.userform.value).subscribe((res",{"_index":3332,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.userid",{"_index":2153,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.userid).subscribe",{"_index":2176,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.userprofile",{"_index":1315,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/MfaSettingComponent.html":{}}}],["this.userprofile.email",{"_index":1794,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["this.users",{"_index":3161,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this.users.filter(user",{"_index":3167,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this.userservice.getusers().subscribe((users",{"_index":3160,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["this.validatetoken",{"_index":2155,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["this.viewpassword",{"_index":3505,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["thiès",{"_index":5137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thoubal",{"_index":4302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["through",{"_index":809,"title":{},"body":{"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{},"miscellaneous/variables.html":{}}}],["throw",{"_index":561,"title":{},"body":{"components/CardComponent.html":{},"components/FileExplorerComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["throwerror",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/PasswordService.html":{},"injectables/PlanService.html":{},"injectables/ProofIdService.html":{}}}],["throwerror('something",{"_index":671,"title":{},"body":{"injectables/CardService.html":{},"injectables/NoteService.html":{},"injectables/ProofIdService.html":{}}}],["throwerror(error",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PasswordService.html":{}}}],["throwerror(new",{"_index":2599,"title":{},"body":{"injectables/PasswordService.html":{}}}],["time",{"_index":1512,"title":{},"body":{"components/IndexComponent.html":{},"components/MfaSettingComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["times",{"_index":842,"title":{},"body":{"components/DownloadComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["tip",{"_index":2539,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["tips",{"_index":3312,"title":{},"body":{"components/SupportComponent.html":{}}}],["tirana",{"_index":4811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tiruchirappalli",{"_index":4358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":1950,"title":{},"body":{"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"injectables/PlanService.html":{},"components/ViewNoteCompoent.html":{}}}],["titlecase",{"_index":3032,"title":{},"body":{"components/RolesPermissionsComponent.html":{}}}],["tivoli",{"_index":4500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tjk",{"_index":4858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tkm",{"_index":4865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tlalnepantla",{"_index":4493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tn",{"_index":4115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["today's",{"_index":2477,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["today\\'s",{"_index":2546,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["toggle",{"_index":1763,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/PricingPageComponent.html":{},"components/RolesPermissionsComponent.html":{}}}],["toggleallrows",{"_index":479,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["toggleconfirmpasswordvisibility",{"_index":2121,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["toggleinterval",{"_index":2780,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["toggleinterval(interval",{"_index":2790,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["togglemfa",{"_index":1743,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["togglemfa(enabled",{"_index":1751,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["togglepasswordvisibility",{"_index":2122,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["toggleprofilesidebar",{"_index":681,"title":{},"body":{"injectables/CommonService.html":{}}}],["togglesidebar",{"_index":423,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/FileExplorerComponent.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/MfaSettingComponent.html":{},"components/NotesComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/ProfileComponent.html":{},"components/SecurityComponent.html":{},"components/SideNavComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["togo",{"_index":5118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{},"components/PasswordChangeComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["tokenform",{"_index":2936,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["tokmok",{"_index":4855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tokyo",{"_index":4453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toledo",{"_index":4078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tom",{"_index":5240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tome",{"_index":5236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool",{"_index":829,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["top",{"_index":1077,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/IndexComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["topeka",{"_index":3948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toronto",{"_index":4467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totp",{"_index":1775,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["totpcode",{"_index":1689,"title":{},"body":{"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["totpsecret",{"_index":1767,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["touba",{"_index":5136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touching",{"_index":1848,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["town",{"_index":5331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["townsville",{"_index":4414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tr",{"_index":4366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trackbyid",{"_index":1920,"title":{},"body":{"components/NotesComponent.html":{}}}],["trackbyid(index",{"_index":1941,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["tracking",{"_index":2876,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["trade",{"_index":2868,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["transform",{"_index":480,"title":{},"body":{"components/CardComponent.html":{},"injectables/PasswordService.html":{}}}],["transform(cardnumber",{"_index":497,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["transform(element.cardnumber",{"_index":611,"title":{},"body":{"components/CardComponent.html":{}}}],["translate",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["translate/core",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{}}}],["translate/http",{"_index":3600,"title":{},"body":{"dependencies.html":{}}}],["translateloader",{"_index":3776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateservice",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["travel",{"_index":3110,"title":{},"body":{"components/SecurityComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["trial",{"_index":2826,"title":{},"body":{"components/PricingPageComponent.html":{},"components/UserProfileComponent.html":{}}}],["triallink",{"_index":2788,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["trialqueryparams",{"_index":2786,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["trim",{"_index":600,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["tripoli",{"_index":4902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tripura",{"_index":4365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["truly",{"_index":2509,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["trust",{"_index":897,"title":{},"body":{"components/DownloadComponent.html":{}}}],["trusted",{"_index":873,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["try",{"_index":675,"title":{},"body":{"injectables/CardService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{},"components/MfaSettingComponent.html":{},"injectables/NoteService.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"injectables/ProofIdService.html":{}}}],["tucson",{"_index":3853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tuensang",{"_index":4325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tuggeranong",{"_index":4442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tulsa",{"_index":4081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tur",{"_index":4534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tura",{"_index":4309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["turk",{"_index":5337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["turkey",{"_index":4532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["turkmenbashi",{"_index":4867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["turkmenistan",{"_index":4863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["turks",{"_index":5333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tuscaloosa",{"_index":3842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tutong",{"_index":4950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tuzla",{"_index":4791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":1529,"title":{},"body":{"components/IndexComponent.html":{},"components/NotificationComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{},"index.html":{}}}],["tx",{"_index":4122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["typeof",{"_index":2439,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["types",{"_index":2842,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["typically",{"_index":3733,"title":{},"body":{"index.html":{}}}],["tyre",{"_index":4904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tza",{"_index":5032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["u",{"_index":3174,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["ubud",{"_index":4598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ubuntu",{"_index":906,"title":{},"body":{"components/DownloadComponent.html":{}}}],["udaipur",{"_index":4342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uga",{"_index":5025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uganda",{"_index":5024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui",{"_index":171,"title":{},"body":{"components/ApiDocsComponent.html":{},"components/CardComponent.html":{},"components/DownloadComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"dependencies.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["ui.git",{"_index":3730,"title":{},"body":{"index.html":{}}}],["ui:latest",{"_index":943,"title":{},"body":{"components/DownloadComponent.html":{}}}],["ui:latestdocker",{"_index":966,"title":{},"body":{"components/DownloadComponent.html":{}}}],["ujjain",{"_index":4292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uk",{"_index":4378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uk',states",{"_index":4174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ulaanbaatar",{"_index":4978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["umm",{"_index":4876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unbreakable",{"_index":1493,"title":{},"body":{"components/IndexComponent.html":{}}}],["undefined",{"_index":787,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/PasswordService.html":{}}}],["understand",{"_index":3692,"title":{},"body":{"index.html":{}}}],["unfortunately",{"_index":3274,"title":{},"body":{"components/SupportComponent.html":{}}}],["unique",{"_index":1478,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["united",{"_index":3834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unknown",{"_index":3538,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["unless",{"_index":2871,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unlicensed",{"_index":3751,"title":{},"body":{"properties.html":{}}}],["unlimited",{"_index":2497,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["unparalleled",{"_index":1538,"title":{},"body":{"components/IndexComponent.html":{}}}],["until",{"_index":855,"title":{},"body":{"components/DownloadComponent.html":{}}}],["up",{"_index":894,"title":{},"body":{"components/DownloadComponent.html":{},"components/MfaSettingComponent.html":{},"components/SideNavComponent.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":435,"title":{},"body":{"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/DownloadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/MfaSettingComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PlanService.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ProofIdService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"dependencies.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["update_at",{"_index":1953,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["updatecard",{"_index":634,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecard(id",{"_index":650,"title":{},"body":{"injectables/CardService.html":{}}}],["updated",{"_index":932,"title":{},"body":{"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/MfaSettingComponent.html":{},"components/OrganizationsComponent.html":{},"components/SecurityComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{}}}],["updatedat",{"_index":1240,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/OrganizationsComponent.html":{}}}],["updatedqueryparams",{"_index":2811,"title":{},"body":{"components/PricingPageComponent.html":{}}}],["updatefavourites",{"_index":481,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{}}}],["updatefavourites(cardid",{"_index":500,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["updatefavourites(noteid",{"_index":1943,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["updatefolder",{"_index":1261,"title":{},"body":{"injectables/FolderService.html":{}}}],["updatefolder(folderid",{"_index":1254,"title":{},"body":{"interfaces/Folder.html":{},"injectables/FolderService.html":{}}}],["updateinvitationstatus",{"_index":2067,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["updateinvitationstatus(invitationid",{"_index":2076,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["updatemfasettings",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatemfasettings(settings",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatenote",{"_index":1884,"title":{},"body":{"injectables/NoteService.html":{}}}],["updatenote(id",{"_index":1904,"title":{},"body":{"injectables/NoteService.html":{}}}],["updatepassword",{"_index":2555,"title":{},"body":{"injectables/PasswordService.html":{}}}],["updatepassword(_id",{"_index":2579,"title":{},"body":{"injectables/PasswordService.html":{}}}],["updatepassword(this.passwordform?.value._id",{"_index":2317,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["updateplan",{"_index":2711,"title":{},"body":{"injectables/PlanService.html":{}}}],["updateplan(planid",{"_index":2724,"title":{},"body":{"injectables/PlanService.html":{}}}],["updateprofile",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"components/EditProfileComponent.html":{}}}],["updateprofile(profile",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateproofid",{"_index":2915,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["updateproofid(id",{"_index":2926,"title":{},"body":{"injectables/ProofIdService.html":{}}}],["updaterolepermissions",{"_index":3050,"title":{},"body":{"injectables/RolesPermissionsService.html":{}}}],["updaterolepermissions(role",{"_index":3052,"title":{},"body":{"injectables/RolesPermissionsService.html":{}}}],["updates",{"_index":1964,"title":{},"body":{"components/NotesComponent.html":{},"components/NotificationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ViewNoteCompoent.html":{},"index.html":{}}}],["updatesecurityquestion",{"_index":3120,"title":{},"body":{"injectables/SecurityQuestionService.html":{}}}],["updatesecurityquestion(id",{"_index":3127,"title":{},"body":{"injectables/SecurityQuestionService.html":{}}}],["updating",{"_index":1802,"title":{},"body":{"components/MfaSettingComponent.html":{},"injectables/PasswordService.html":{},"components/SecurityComponent.html":{}}}],["upload",{"_index":1130,"title":{},"body":{"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/SupportComponent.html":{},"components/UserProfileComponent.html":{}}}],["upload'},{'name",{"_index":68,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["upload.component",{"_index":1053,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["upload.component.css",{"_index":1137,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.html",{"_index":1138,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts",{"_index":1135,"title":{},"body":{"components/FileUploadComponent.html":{},"coverage.html":{}}}],["upload.component.ts:108",{"_index":1168,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:115",{"_index":1162,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:157",{"_index":1166,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:164",{"_index":1170,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:167",{"_index":1164,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:174",{"_index":1155,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:46",{"_index":1181,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:47",{"_index":1177,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:48",{"_index":1176,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:49",{"_index":1179,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:50",{"_index":1175,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:51",{"_index":1178,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:52",{"_index":1173,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:53",{"_index":1174,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:54",{"_index":1180,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:55",{"_index":1171,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:56",{"_index":1172,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:57",{"_index":1152,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:72",{"_index":1157,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:85",{"_index":1159,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:90",{"_index":1161,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload/file",{"_index":1052,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"coverage.html":{}}}],["uploaded",{"_index":1071,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfileComponent.html":{}}}],["uploader",{"_index":3363,"title":{},"body":{"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["uploadermodule",{"_index":3337,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["uploadfile",{"_index":1098,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadfile(formdata",{"_index":1117,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadform",{"_index":1145,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["uploadform.get('foldername')!.value",{"_index":1233,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["uploadform.get(\\'foldername\\')!.value",{"_index":1236,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["uploading",{"_index":1222,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["uploads",{"_index":2034,"title":{},"body":{"components/NotificationComponent.html":{}}}],["upper",{"_index":2504,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["uppercase",{"_index":2189,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/SupportComponent.html":{}}}],["uppsala",{"_index":4550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":176,"title":{},"body":{"components/ApiDocsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/FileService.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"injectables/SecurityQuestionService.html":{},"injectables/SharedItemService.html":{},"components/TagFormCompoent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["url.createobjecturl(blob",{"_index":573,"title":{},"body":{"components/CardComponent.html":{},"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["url.createobjecturl(file",{"_index":3384,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["urlregex",{"_index":2326,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["urlregex.test(control.value",{"_index":2330,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["urlvalidator",{"_index":2233,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["usa",{"_index":3835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usage",{"_index":2858,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{}}}],["usb",{"_index":1841,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["usd",{"_index":2730,"title":{},"body":{"injectables/PlanService.html":{},"components/UserProfileComponent.html":{}}}],["use",{"_index":859,"title":{},"body":{"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/NotesComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{},"components/ViewNoteCompoent.html":{},"index.html":{}}}],["usefactory",{"_index":3777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/Folder.html":{},"injectables/FolderService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["user's",{"_index":3663,"title":{},"body":{"index.html":{}}}],["user._id",{"_index":3180,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["user.name",{"_index":3183,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["user.recipient._id).subscribe((response",{"_index":3461,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.recipient.createdat",{"_index":3469,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.recipient.email",{"_index":3466,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.recipient.name",{"_index":3465,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.recipient.name.tolowercase().includes(filtervalue",{"_index":3168,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["user.recipient.phone",{"_index":3467,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.status",{"_index":3468,"title":{},"body":{"components/UsersComponent.html":{}}}],["user?.billingaddress",{"_index":3400,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user?.city",{"_index":3401,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user?.country",{"_index":3404,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user?.createdat",{"_index":3399,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user?.email",{"_index":3397,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user?.mfaenabled",{"_index":3410,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user?.name",{"_index":3395,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user?.organization[0].name",{"_index":3405,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user?.phone",{"_index":3398,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user?.postalcode",{"_index":3403,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user?.role",{"_index":3396,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user?.state",{"_index":3402,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user?.trialenddate",{"_index":3409,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["userform",{"_index":2074,"title":{},"body":{"injectables/OrganizationService.html":{},"components/UserFormComponent.html":{}}}],["userformcomponent",{"_index":134,"title":{"components/UserFormComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["userid",{"_index":1363,"title":{},"body":{"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/PasswordChangeComponent.html":{},"components/ShareDialogComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["username",{"_index":1686,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/TagFormCompoent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{}}}],["username/email",{"_index":3652,"title":{},"body":{"index.html":{}}}],["usernames",{"_index":2844,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["userprofile",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/MfaSettingComponent.html":{}}}],["userprofilecomponent",{"_index":136,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["users",{"_index":28,"title":{},"body":{"components/AdminComponent.html":{},"components/BillingDetailsComponent.html":{},"components/DownloadComponent.html":{},"components/ShareDialogComponent.html":{},"components/SupportComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["users'},{'name",{"_index":138,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["users.component.css",{"_index":3414,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.html",{"_index":3413,"title":{},"body":{"components/UsersComponent.html":{}}}],["userscomponent",{"_index":137,"title":{"components/UsersComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["userservice",{"_index":3138,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["uses",{"_index":1539,"title":{},"body":{"components/IndexComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["using",{"_index":557,"title":{},"body":{"components/CardComponent.html":{},"components/DownloadComponent.html":{},"components/IndexComponent.html":{},"components/NotesComponent.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PrivacyPolicyComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewNoteCompoent.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["ut",{"_index":4129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utah",{"_index":4128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utilize",{"_index":3280,"title":{},"body":{"components/SupportComponent.html":{}}}],["utilizing",{"_index":2482,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"index.html":{}}}],["uttar",{"_index":4371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uttarakhand",{"_index":4377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uuid",{"_index":3634,"title":{},"body":{"dependencies.html":{}}}],["uusimaa",{"_index":4707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uzb",{"_index":4843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uzbekistan",{"_index":4841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1.0.0",{"_index":1279,"title":{},"body":{"components/FooterComponent.html":{}}}],["va",{"_index":4142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vacoas",{"_index":5196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vadodara",{"_index":4248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vagharshapat",{"_index":4827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":1658,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/UserFormComponent.html":{}}}],["validate",{"_index":3659,"title":{},"body":{"index.html":{}}}],["validatetoken",{"_index":2123,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["validation",{"_index":1704,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{},"index.html":{}}}],["validationerrors",{"_index":2265,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["validator",{"_index":1627,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["validatorfn",{"_index":2246,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["validators",{"_index":746,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/EditProfileComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesFormComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SecurityComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{}}}],["validators.email",{"_index":1631,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserFormComponent.html":{}}}],["validators.minlength(8",{"_index":2135,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{}}}],["validators.pattern('^[0",{"_index":756,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/IdproofformComponent.html":{}}}],["validators.pattern('^[a",{"_index":1431,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["validators.required",{"_index":755,"title":{},"body":{"components/CreditCardFormComponent.html":{},"components/EditProfileComponent.html":{},"components/IdproofformComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesFormComponent.html":{},"components/OrganizationComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SecurityComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{}}}],["valley",{"_index":4131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vallon",{"_index":5260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"injectables/FolderService.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"injectables/PasswordService.html":{},"components/PasswordStrengthComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProofIdService.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"injectables/SecurityQuestionService.html":{},"components/ShareDialogComponent.html":{},"injectables/SharedItemService.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"miscellaneous/variables.html":{},"components/viewCardDetailsComponent.html":{}}}],["value?.tolowercase",{"_index":3166,"title":{},"body":{"components/ShareDialogComponent.html":{}}}],["values",{"_index":2170,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/SecurityComponent.html":{}}}],["vanadzor",{"_index":4828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vancouver",{"_index":4153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vantaa",{"_index":4710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":36,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["varanasi",{"_index":4375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":3546,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3752,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":2502,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"index.html":{}}}],["vasco",{"_index":4239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vault",{"_index":1351,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"index.html":{}}}],["vct",{"_index":5303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vegas",{"_index":4030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":1831,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["verification'},{'name",{"_index":89,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["verification.component.css",{"_index":1855,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["verification.component.html",{"_index":1854,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["verification.component.ts",{"_index":1853,"title":{},"body":{"components/MfaVerificationComponent.html":{},"coverage.html":{}}}],["verification.component.ts:23",{"_index":1861,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["verification.component.ts:24",{"_index":1860,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["verification.component.ts:25",{"_index":1865,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["verification.component.ts:26",{"_index":1866,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["verification.component.ts:27",{"_index":1864,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["verification.component.ts:28",{"_index":1862,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["verification.component.ts:29",{"_index":1863,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["verification.component.ts:34",{"_index":1858,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["verification.component.ts:42",{"_index":1859,"title":{},"body":{"components/MfaVerificationComponent.html":{}}}],["verification/mfa",{"_index":1852,"title":{},"body":{"components/MfaVerificationComponent.html":{},"coverage.html":{}}}],["verification?mfamethod=${response.mfamethod}&email=${this.loginform.value.username",{"_index":1720,"title":{},"body":{"components/LoginComponent.html":{}}}],["verified",{"_index":1652,"title":{},"body":{"components/InvitationAcceptComponent.html":{}}}],["verify",{"_index":1646,"title":{},"body":{"components/InvitationAcceptComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{}}}],["verifying",{"_index":2184,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["verifymfa",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifymfa(mfadata",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyresetrequest",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyresetrequest(id",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["vermont",{"_index":4135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["versailles",{"_index":4476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":887,"title":{},"body":{"components/DownloadComponent.html":{},"components/FooterComponent.html":{},"components/PrivacyPolicyComponent.html":{},"index.html":{},"properties.html":{}}}],["very",{"_index":2383,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["via",{"_index":1844,"title":{},"body":{"components/MfaSettingComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["vic",{"_index":4403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["victoria",{"_index":4402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vientiane",{"_index":4970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vietnam",{"_index":4610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vieux",{"_index":5296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{},"components/viewCardDetailsComponent.html":{}}}],["viewcard",{"_index":2987,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["viewcarddetails",{"_index":482,"title":{},"body":{"components/CardComponent.html":{}}}],["viewcarddetails(carddetails",{"_index":503,"title":{},"body":{"components/CardComponent.html":{},"components/viewCardDetailsComponent.html":{}}}],["viewcarddetailscomponent",{"_index":139,"title":{"components/viewCardDetailsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["viewchild",{"_index":796,"title":{},"body":{"components/DashboardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UsersComponent.html":{}}}],["viewchild('drawer",{"_index":789,"title":{},"body":{"components/DashboardComponent.html":{}}}],["viewchild(matpaginator",{"_index":3437,"title":{},"body":{"components/UsersComponent.html":{}}}],["viewchild(matsort",{"_index":3441,"title":{},"body":{"components/UsersComponent.html":{}}}],["viewcomment",{"_index":2993,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["viewfile",{"_index":2982,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["viewnote",{"_index":2985,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["viewnotecompoent",{"_index":141,"title":{"components/ViewNoteCompoent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["viewnotee",{"_index":1921,"title":{},"body":{"components/NotesComponent.html":{}}}],["viewnotee(note",{"_index":1945,"title":{},"body":{"components/NotesComponent.html":{},"components/ViewNoteCompoent.html":{}}}],["vieworganization",{"_index":3054,"title":{},"body":{"injectables/RolesPermissionsService.html":{}}}],["viewpassword",{"_index":2980,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/ViewPasswordComponent.html":{}}}],["viewpasswordcomponent",{"_index":143,"title":{"components/ViewPasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/DownloadComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"coverage.html":{},"components/viewCardDetailsComponent.html":{}}}],["viewproofid",{"_index":2989,"title":{},"body":{"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{}}}],["vijayawada",{"_index":4207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["villa",{"_index":5305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ville",{"_index":5370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vilnius",{"_index":4751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vincent",{"_index":5300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["virginia",{"_index":4141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["virtually",{"_index":1501,"title":{},"body":{"components/IndexComponent.html":{}}}],["visa",{"_index":762,"title":{},"body":{"components/CreditCardFormComponent.html":{}}}],["visakhapatnam",{"_index":4206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visibility",{"_index":1074,"title":{},"body":{"components/FileExplorerComponent.html":{},"components/LoginComponent.html":{},"components/PasswordChangeComponent.html":{}}}],["visibility_off",{"_index":1727,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordChangeComponent.html":{}}}],["visit",{"_index":949,"title":{},"body":{"components/DownloadComponent.html":{}}}],["visual",{"_index":3694,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":3693,"title":{},"body":{"index.html":{}}}],["vital",{"_index":2531,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["vlor",{"_index":4813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vnm",{"_index":4612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":166,"title":{},"body":{"components/ApiDocsComponent.html":{},"components/AppComponent.html":{},"components/BillingDetailsComponent.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/CreateFolderDialogComponent.html":{},"components/CreditCardFormComponent.html":{},"components/DashboardComponent.html":{},"components/EditProfileComponent.html":{},"components/FileExplorerComponent.html":{},"components/FileUploadComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/IdproofformComponent.html":{},"components/IndexComponent.html":{},"components/InvitationAcceptComponent.html":{},"components/LoginComponent.html":{},"components/MfaSettingComponent.html":{},"components/MfaVerificationComponent.html":{},"components/NotesComponent.html":{},"components/NotesFormComponent.html":{},"components/NotificationComponent.html":{},"components/OrganizationComponent.html":{},"components/OrganizationsComponent.html":{},"components/PasswordChangeComponent.html":{},"components/PasswordChangeComponent-1.html":{},"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{},"components/PricingPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesPermissionsComponent.html":{},"injectables/RolesPermissionsService.html":{},"components/SecurityComponent.html":{},"components/ShareDialogComponent.html":{},"components/SideNavComponent.html":{},"components/SupportComponent.html":{},"components/TagFormCompoent.html":{},"components/UserFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersComponent.html":{},"components/ViewNoteCompoent.html":{},"components/ViewPasswordComponent.html":{},"interfaces/Window.html":{},"components/viewCardDetailsComponent.html":{}}}],["vt",{"_index":4136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vulnerabilities",{"_index":3740,"title":{},"body":{"index.html":{}}}],["w",{"_index":2328,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["w]/.test(password",{"_index":2653,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["wa",{"_index":4149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wakrah",{"_index":4875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wales",{"_index":4186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["walk",{"_index":5423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["walvis",{"_index":5079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wangdue",{"_index":4932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["want",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["warangal",{"_index":4361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warren",{"_index":3988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warwick",{"_index":4100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["washington",{"_index":4148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["waterbury",{"_index":3886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["waterford",{"_index":4687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["way",{"_index":2682,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["wayne",{"_index":3930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wb",{"_index":4385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wcag",{"_index":3703,"title":{},"body":{"index.html":{}}}],["weak",{"_index":1556,"title":{},"body":{"components/IndexComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/PasswordStrengthComponent.html":{}}}],["web",{"_index":3680,"title":{},"body":{"index.html":{}}}],["website",{"_index":2254,"title":{},"body":{"components/PasswordFormComponent.html":{},"injectables/PasswordService.html":{},"components/PrivacyPolicyComponent.html":{},"components/TagFormCompoent.html":{},"components/ViewPasswordComponent.html":{},"index.html":{}}}],["websites",{"_index":2499,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["weekly",{"_index":2039,"title":{},"body":{"components/NotificationComponent.html":{}}}],["weirton",{"_index":4158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["welcome",{"_index":2835,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["well",{"_index":2285,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/PasswordGenratorComponent.html":{},"components/TagFormCompoent.html":{}}}],["west",{"_index":4073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["western",{"_index":4416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wget",{"_index":918,"title":{},"body":{"components/DownloadComponent.html":{}}}],["what's",{"_index":2681,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["what\\'s",{"_index":2705,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["whenever",{"_index":879,"title":{},"body":{"components/DownloadComponent.html":{}}}],["whether",{"_index":843,"title":{},"body":{"components/DownloadComponent.html":{},"components/PasswordGenratorComponent.html":{}}}],["whyalla",{"_index":4425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wi",{"_index":4160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wichita",{"_index":3945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["width",{"_index":549,"title":{},"body":{"components/CardComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdProof.html":{},"components/IdProofComponent.html":{},"components/NotesComponent.html":{},"components/OrganizationsComponent.html":{},"components/ProfileComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewNoteCompoent.html":{},"components/viewCardDetailsComponent.html":{}}}],["width:'600px",{"_index":1060,"title":{},"body":{"components/FileExplorerComponent.html":{}}}],["wilmington",{"_index":3889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["windhoek",{"_index":5077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window",{"_index":234,"title":{"interfaces/Window.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["window.hsstaticmethods.autoinit",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Window.html":{}}}],["windows",{"_index":824,"title":{},"body":{"components/DownloadComponent.html":{}}}],["winston",{"_index":4065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisconsin",{"_index":4159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":863,"title":{},"body":{"components/DownloadComponent.html":{},"components/SupportComponent.html":{}}}],["without",{"_index":724,"title":{},"body":{"components/CreateFolderDialogComponent.html":{},"components/DownloadComponent.html":{},"components/IndexComponent.html":{}}}],["wls",{"_index":4187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wokha",{"_index":4326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wollongong",{"_index":4397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["worcester",{"_index":3980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["words",{"_index":2402,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"dependencies.html":{}}}],["working",{"_index":1824,"title":{},"body":{"components/MfaSettingComponent.html":{}}}],["worry",{"_index":1564,"title":{},"body":{"components/IndexComponent.html":{}}}],["worth",{"_index":4127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrexham",{"_index":4190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wv",{"_index":4154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wy",{"_index":4167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wyoming",{"_index":4166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":3536,"title":{},"body":{"components/ViewPasswordComponent.html":{}}}],["x.length",{"_index":2419,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["x.x.x",{"_index":3723,"title":{},"body":{"index.html":{}}}],["x[math.floor(math.random",{"_index":2418,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["yamoussoukro",{"_index":5128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yangon",{"_index":4954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yaound",{"_index":5141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yarn",{"_index":3724,"title":{},"body":{"index.html":{}}}],["year",{"_index":2735,"title":{},"body":{"injectables/PlanService.html":{}}}],["yearly",{"_index":438,"title":{},"body":{"components/BillingDetailsComponent.html":{},"injectables/PlanService.html":{},"components/PricingPageComponent.html":{}}}],["yellow",{"_index":2387,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}],["yem",{"_index":4921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yemen",{"_index":4919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yerevan",{"_index":4825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":486,"title":{},"body":{"components/CardComponent.html":{},"injectables/NoteService.html":{},"components/NotesComponent.html":{},"injectables/PasswordService.html":{},"components/SupportComponent.html":{},"components/ViewPasswordComponent.html":{}}}],["yishun",{"_index":4582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yonkers",{"_index":4057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["york",{"_index":4054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["you're",{"_index":844,"title":{},"body":{"components/DownloadComponent.html":{}}}],["you\\'re",{"_index":963,"title":{},"body":{"components/DownloadComponent.html":{}}}],["yourapp",{"_index":930,"title":{},"body":{"components/DownloadComponent.html":{}}}],["z])(?=.*[^\\w\\s]).{8",{"_index":2165,"title":{},"body":{"components/PasswordChangeComponent.html":{}}}],["z])(?=.*[a",{"_index":2164,"title":{},"body":{"components/PasswordChangeComponent.html":{},"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*?&])[^\\s]{8",{"_index":2323,"title":{},"body":{"components/PasswordFormComponent.html":{},"components/TagFormCompoent.html":{}}}],["z]/.test(password",{"_index":2651,"title":{},"body":{"components/PasswordStrengthComponent.html":{}}}],["z]{1",{"_index":1434,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["z]{5}[0",{"_index":1432,"title":{},"body":{"components/IdproofformComponent.html":{}}}],["zaf",{"_index":4510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zagreb",{"_index":4780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zambia",{"_index":5060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zarqa",{"_index":4916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zealand",{"_index":4539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zelenograd",{"_index":4505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zenica",{"_index":4790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zimbabwe",{"_index":5010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zinder",{"_index":5209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zmb",{"_index":5062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zomba",{"_index":5102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":3636,"title":{},"body":{"dependencies.html":{}}}],["zugdidi",{"_index":4833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zwe",{"_index":5012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zxcvbn",{"_index":2399,"title":{},"body":{"components/PasswordGenratorComponent.html":{},"dependencies.html":{}}}],["zxcvbn(this.password",{"_index":2424,"title":{},"body":{"components/PasswordGenratorComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/admin/admin.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admiiin\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatSidenavModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-admiiin',\n  standalone: true,\n  imports: [MatSidenavModule, RouterModule],\n  templateUrl: './admin.component.html',\n})\nexport class AdminComponent {\n  \n}\n\n    \n\n    \n        \n    \n    \n      \n        users\n        Organizations\n        Roles and Permissions\n      \n    \n  \n    \n    \n     \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      users        Organizations        Roles and Permissions                                 '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApiDocsComponent.html":{"url":"components/ApiDocsComponent.html","title":"component - ApiDocsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ApiDocsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/api-docs/api-docs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-docs\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./api-docs.component.html\n            \n\n\n\n            \n                styleUrl\n                ./api-docs.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadSwaggerUI\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/api-docs/api-docs.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadSwaggerUI\n                        \n                    \n                \n            \n            \n                \nloadSwaggerUI()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/api-docs/api-docs.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/api-docs/api-docs.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport SwaggerUI, { SwaggerUIBundle } from 'swagger-ui-dist';\n\n@Component({\n  selector: 'app-api-docs',\n  standalone: true,\n  imports: [],\n  templateUrl: './api-docs.component.html',\n  styleUrl: './api-docs.component.css'\n})\nexport class ApiDocsComponent implements OnInit {\n\n  constructor() { \n  }\n\n  ngOnInit(): void {\n    this.loadSwaggerUI(); \n    \n  }\n  \n  loadSwaggerUI() {\n    const ui = SwaggerUI.SwaggerUIBundle({\n      url: 'swagger.json', // Replace with your Swagger JSON URL\n      dom_id: '#swagger-ui',\n      presets: [\n        SwaggerUI.SwaggerUIBundle['presets'].apis,\n        SwaggerUI.SwaggerUIBundle['SwaggerUIStandalonePreset']\n      ],\n     \n      plugins: [\n        SwaggerUI.SwaggerUIBundle['plugins'].DownloadUrl\n      ],\n    });\n\n  }\n}\n\n    \n\n    \n        \n\n     \n     \n        \n          \n            Get multiple groups\n          \n          \n            Create a group\n          \n          \n            Get a group\n          \n          \n        \n      \n    \n    \n      API Documentation\n        \n          \n            \n             \n          \n        \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Get multiple groups                                Create a group                                Get a group                                                API Documentation                                                                     '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiDocsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                            RouterModule\n                                HeaderComponent\n                                FooterComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                authService\n                            \n                            \n                                hideHeader\n                            \n                            \n                                    Readonly\n                                router\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideHeader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Default value : localStorage.getItem(\"token\")\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TranslateService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { RouterModule, RouterOutlet } from '@angular/router';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { inject } from '@angular/core';\nimport { HeaderComponent } from './pages/header/header.component';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { IStaticMethods } from 'preline/preline';\nimport { AuthService } from './services/auth.service';\nimport { FooterComponent } from './pages/footer/footer.component';\nimport { CommonModule } from '@angular/common';\ndeclare global {\n  interface Window {\n    HSStaticMethods: IStaticMethods;\n  }\n}\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, RouterModule,HeaderComponent, FooterComponent, CommonModule],\n  templateUrl: './app.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n\n})\nexport class AppComponent implements OnInit {\n  readonly token = localStorage.getItem(\"token\");\n  readonly authService= inject(AuthService);\n  readonly router = inject(Router);;\n  readonly translate = inject(TranslateService);\n  hideHeader: boolean = false;\n  \n  ngOnInit(): void {\n    this.translate.addLangs(['en', 'klingon']);\n    this.translate.setDefaultLang('en');\n    this.translate.use('en');\n    this.router.events.subscribe((event:  any) => {   \n      this.hideHeader = event.url?.includes(\"/auth\")\n      if (event instanceof NavigationEnd) {\n        setTimeout(() => {\n          window.HSStaticMethods.autoInit();\n        }, 100);\n      }\n    });\n    if (this.token) {\n      this.authService.getProfile().subscribe((res) => {\n\n      })\n    }\n  }\n}\n\n    \n\n    \n            \n        \n        \n          \n        \n         -->\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                               -->    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _userProfileSubject\n                            \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Readonly\n                                http\n                            \n                            \n                                    Public\n                                userProfile$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                emailVerification\n                            \n                            \n                                getPlans\n                            \n                            \n                                getProfile\n                            \n                            \n                                getUsers\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                passwordReset\n                            \n                            \n                                resendCode\n                            \n                            \n                                resendInvitation\n                            \n                            \n                                resetPassword\n                            \n                            \n                                signup\n                            \n                            \n                                updateMfaSettings\n                            \n                            \n                                updateProfile\n                            \n                            \n                                verifyMFA\n                            \n                            \n                                verifYResetRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(passowrd: any, id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                passowrd\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailVerification\n                        \n                    \n                \n            \n            \n                \nemailVerification(OTPForm: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                OTPForm\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlans\n                        \n                    \n                \n            \n            \n                \ngetPlans()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginFormValue: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginFormValue\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordReset\n                        \n                    \n                \n            \n            \n                \npasswordReset(currentPassword: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resendCode\n                        \n                    \n                \n            \n            \n                \nresendCode(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resendInvitation\n                        \n                    \n                \n            \n            \n                \nresendInvitation(organizationId: string, recipientId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organizationId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                recipientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(email: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(signupForm: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signupForm\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMfaSettings\n                        \n                    \n                \n            \n            \n                \nupdateMfaSettings(settings: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settings\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile(profile: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                profile\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyMFA\n                        \n                    \n                \n            \n            \n                \nverifyMFA(mfaData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mfaData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifYResetRequest\n                        \n                    \n                \n            \n            \n                \nverifYResetRequest(id: string, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _userProfileSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `${environment.api_url}/auth`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userProfile$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._userProfileSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport {\n  Observable,\n  switchMap,\n  of,\n  catchError,\n  tap,\n  throwError,\n  map,\n  BehaviorSubject,\n} from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private apiUrl: string = `${environment.api_url}/auth`;\n  readonly  http = inject(HttpClient) \n  public _userProfileSubject = new BehaviorSubject(null);\n  public userProfile$: Observable =\n    this._userProfileSubject.asObservable();\n\n  signup(signupForm: any): Observable {\n    return this.http.post(`${this.apiUrl}/register`, signupForm).pipe(\n      tap((response: any) => {\n        return of(response);\n      }),\n      catchError((error: any) => {\n        console.error('Error fetching passwords:', error);\n        return throwError(error);\n      })\n    );\n  }\n\n  emailVerification(OTPForm: any): Observable {\n    return this.http.post(`${this.apiUrl}/confirm-email`, OTPForm).pipe(\n      tap((response: any) => {\n        return of(response);\n      }),\n      catchError((error: any) => {\n        console.error('Error fetching passwords:', error);\n        // Optionally handle the error differently based on your needs\n        return throwError(error);\n      })\n    );\n  }\n\n  resetPassword(email: any): Observable {\n    return this.http.post(`${this.apiUrl}/reset-password`,{email}).pipe(\n      tap((response: any) => {\n        return of(response);\n      }),\n      catchError((error: any) => {\n        console.error('Error fetching passwords:', error);\n        // Optionally handle the error differently based on your needs\n        return throwError(error);\n      })\n    );\n  }\n\n  verifYResetRequest(id: string, token: string): Observable {\n    return this.http\n      .get(`${this.apiUrl}/verify-reset-link?id=${id}&token=${token}`)\n      .pipe(\n        tap((response: any) => {\n          return of(response);\n        }),\n        catchError((error: any) => {\n          console.error('Error fetching passwords:', error);\n          // Optionally handle the error differently based on your needs\n          return throwError(error);\n        })\n      );\n  }\n\n  changePassword(passowrd: any, id: any): Observable {\n    return this.http\n      .patch(`${this.apiUrl}/change-password/${id}`, passowrd)\n      .pipe(\n        map((response: any) => {\n          // Handle successful password reset response data\n          return response;\n        }),\n        tap(() => console.log('Password reset successful')), // Log success message\n        catchError((error) => {\n          // Handle error response\n          return of({\n            error: error.message || 'An error occurred during password reset.',\n          });\n        })\n      );\n  }\n\n  login(loginFormValue: any): Observable {\n    return this.http.post(`${this.apiUrl}/login`, loginFormValue).pipe(\n      switchMap((response: any) => {\n        return of(response);\n      }),\n      catchError((error) => {\n        return throwError(error);\n      })\n    );\n  }\n\n  getProfile(): Observable {\n    return this.http.get(`${this.apiUrl}/profile`).pipe(\n      switchMap((response) => {\n        this._userProfileSubject.next(response);\n        return of(response);\n      }), // You might want to process the profile data here\n      catchError((error) => {\n        return throwError(error);\n      })\n    );\n  }\n\n  logout(): Observable {\n    // Assuming authorization header with token for authenticated profile access\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('token')}`,\n    });\n    return this.http\n      .post(`${this.apiUrl}/logout`, {}, { headers }) // Some APIs might require an empty payload for logout\n      .pipe(\n        map((response) => {\n          // Handle successful logout response data\n          this._userProfileSubject.next(null);\n          return response;\n        }),\n        catchError((error) => {\n          return throwError(error);\n        })\n      );\n  }\n  passwordReset(currentPassword: string, newPassword: string): Observable {\n    return this.http.post(`${this.apiUrl}/change-password`, {\n      currentPassword,\n      newPassword,\n    });\n  }\n\n  verifyMFA(mfaData: any): Observable {\n    return this.http.post(`${this.apiUrl}/verify-mfa`, mfaData);\n  }\n\n  resendCode(email: string): Observable {\n    return this.http\n      .get(`${this.apiUrl}/resend-code/${email}`) // Some APIs might require an empty payload for logout\n      .pipe(\n        switchMap((response) => {\n          return of(response);\n        }),\n        catchError((error) => {\n          return throwError(error);\n        })\n      );\n  }\n\n  updateMfaSettings(settings: any): Observable {\n    return this.http.post(`${this.apiUrl}/mfa-settings`, settings).pipe(\n      map((response) => {\n        return response;\n      }),\n      catchError((error) => {\n        return throwError(error);\n      })\n    );\n  }\n  getUsers() : Observable{\n    return this.http.get(`${this.apiUrl}/users`);\n  }\n\n  getPlans(): Observable{\n    return this.http.get(`${this.apiUrl}/plans`).pipe(\n      map((response) => {\n        return response;\n        }),\n        catchError((error) => {\n          return throwError(error);\n          })\n          );\n  }\n\n  resendInvitation(organizationId: string, recipientId: string): Observable{\n    return this.http.post(`${this.apiUrl}/resend-invitation/${organizationId}/${recipientId}`, {}).pipe(\n      map((response) => {\n        return response;\n        }),\n        catchError((error) => {\n          return throwError(error);\n          })\n          \n    )\n  }\n\n  updateProfile(profile: any): Observable {\n\n    return this.http.patch(`${this.apiUrl}/profile`, profile).pipe(\n      map((response) => {\n        return response;\n        }),\n        catchError((error) => {\n          return throwError(error);\n          })\n      )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BillingDetailsComponent.html":{"url":"components/BillingDetailsComponent.html","title":"component - BillingDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BillingDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/profile/billing-details/billing-details.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-billing-details\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                            MatIconModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./billing-details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./billing-details.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                commonService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSideBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideBar\n                        \n                    \n                \n            \n            \n                \ntoggleSideBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/billing-details/billing-details.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        commonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/billing-details/billing-details.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\nimport { CommonService } from '../../../services/common.service';\n\n@Component({\n  selector: 'app-billing-details',\n  standalone: true,\n  imports: [MatCardModule, MatButtonModule,MatIconModule, RouterModule],\n  templateUrl: './billing-details.component.html',\n  styleUrl: './billing-details.component.css'\n})\nexport class BillingDetailsComponent {\n  readonly commonService = inject(CommonService)\n  toggleSideBar(): void {\n    this.commonService.toggleProfileSideBar();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            menu\n          \n        Billing and Plan Details\n    \n    \n        Update Plan\n    \n\n\n\n    \n        \n            star \n        \n        \n            Premium Plan (yearly)\n            Best value for advanced users\n        \n    \n\n    \n        Price: $60.00/year\n        Features included:\n        \n            \n                \n                    \n                        check_circle5 GB Storage\n                    \n                    \n                        check_circleStore passwords, notes, cards, ID proofs\n                    \n                    \n                        check_circle10 Organizations\n                    \n                \n            \n\n            \n                \n                    \n                        check_circle100 User Invitations\n                    \n                    \n                        check_circle100 Shares\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        menu                  Billing and Plan Details                Update Plan                            star                             Premium Plan (yearly)            Best value for advanced users                        Price: $60.00/year        Features included:                                                                                check_circle5 GB Storage                                                                check_circleStore passwords, notes, cards, ID proofs                                                                check_circle10 Organizations                                                                                                                        check_circle100 User Invitations                                                                check_circle100 Shares                                                            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BillingDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/card/card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButtonModule\n                            MatIconModule\n                            MatTableModule\n                            MatSortModule\n                            MatDialogModule\n                            MatButtonModule\n                            MatIconModule\n                            MatInputModule\n                            MatPaginatorModule\n                            CommonModule\n                            MatCheckboxModule\n                            MatMenuModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                cardSerrvice\n                            \n                            \n                                    Readonly\n                                changeDetectorRef\n                            \n                            \n                                    Readonly\n                                commonService\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                    Readonly\n                                matDialog\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxLabel\n                            \n                            \n                                deleteCard\n                            \n                            \n                                exportPassword\n                            \n                            \n                                getCardsListings\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openCardFormDialog\n                            \n                            \n                                toggleAllRows\n                            \n                            \n                                toggleSideBar\n                            \n                            \n                                transform\n                            \n                            \n                                updateFavourites\n                            \n                            \n                                viewCardDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkboxLabel\n                        \n                    \n                \n            \n            \n                \ncheckboxLabel(row?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/card/card.component.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCard\n                        \n                    \n                \n            \n            \n                \ndeleteCard(id?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/card/card.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportPassword\n                        \n                    \n                \n            \n            \n                \nexportPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/card/card.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsListings\n                        \n                    \n                \n            \n            \n                \ngetCardsListings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/card/card.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSelected\n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/card/card.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/card/card.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCardFormDialog\n                        \n                    \n                \n            \n            \n                \nopenCardFormDialog(card: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/card/card.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleAllRows\n                        \n                    \n                \n            \n            \n                \ntoggleAllRows()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/card/card.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideBar\n                        \n                    \n                \n            \n            \n                \ntoggleSideBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/card/card.component.ts:179\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(cardNumber: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/card/card.component.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFavourites\n                        \n                    \n                \n            \n            \n                \nupdateFavourites(cardId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/card/card.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewCardDetails\n                        \n                    \n                \n            \n            \n                \nviewCardDetails(cardDetails: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/card/card.component.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardDetails\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        cardSerrvice\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CardService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/card/card.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        changeDetectorRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/card/card.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        commonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/card/card.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/card/card.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'select',\n    '_id',\n    'cardType',\n    'cardNumber',\n    'cardHolderName',\n    'expiryDate',\n    'CVV',\n    'billingAddress',\n    'createdAt',\n    'created_by',\n    'action',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/card/card.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        matDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialog)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/card/card.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/card/card.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SelectionModel(true, [])\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/card/card.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject, OnInit } from '@angular/core';\nimport { CardService } from '../../services/card.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CommonModule } from '@angular/common';\nimport { MatMenuModule } from '@angular/material/menu';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogModule,\n} from '@angular/material/dialog';\nimport { CreditCardFormComponent } from '../../dialog/credit-card-form/credit-card-form.component';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { catchError, tap } from 'rxjs';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FormsModule } from '@angular/forms';\nimport { CommonService } from '../../services/common.service';\n\n@Component({\n  selector: 'app-card',\n  standalone: true,\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    MatTableModule,\n    MatSortModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatPaginatorModule,\n    CommonModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    FormsModule\n  ],\n  templateUrl: './card.component.html',\n  styleUrl: './card.component.css',\n})\nexport class CardComponent implements OnInit {\n  readonly matDialog = inject(MatDialog);\n  readonly changeDetectorRef = inject(ChangeDetectorRef);\n  readonly cardSerrvice = inject(CardService);\n  readonly commonService = inject(CommonService)\n  selection = new SelectionModel(true, []);\n  dataSource: any[] = [];\n  searchTerm: string = '';\n  displayedColumns: string[] = [\n    'select',\n    '_id',\n    'cardType',\n    'cardNumber',\n    'cardHolderName',\n    'expiryDate',\n    'CVV',\n    'billingAddress',\n    'createdAt',\n    'created_by',\n    'action',\n  ];\n\n  ngOnInit(): void {\n    this.getCardsListings();\n  }\n\n  getCardsListings(): void {\n    this.cardSerrvice.getCards().subscribe((response: any) => {\n      this.dataSource = response;\n      this.changeDetectorRef.detectChanges();\n    });\n  }\n  openCardFormDialog(card: any) {\n    this.matDialog.open(CreditCardFormComponent, {\n      width: '500px',\n      data: card,\n    });\n  }\n\n  deleteCard(id?: string): void {\n    const ids =\n      id ??\n      this.selection.selected\n        .map((note) => {\n          return note._id;\n        })\n        .join(',');\n    // Delete password using an observable\n    this.cardSerrvice\n      .deleteCard(ids)\n      .pipe(\n        tap(() => {\n          this.getCardsListings();\n        }),\n        catchError((error: any) => {\n          console.error('err', error);\n          throw error; // re-throw the error to prevent silent failures\n        })\n      )\n      .subscribe({\n        complete: () => {\n          this.changeDetectorRef.detectChanges();\n        },\n      });\n  }\n  viewCardDetails(cardDetails: any): void {\n    this.matDialog.open(viewCardDetailsComponent, {\n      data: { cardDetails },\n    });\n  }\n\n  exportPassword(): void {\n    const ids = this.selection.selected\n      .map((pass) => {\n        return pass._id;\n      })\n      .join(',');\n    this.cardSerrvice.exportCardsASCsv(ids).subscribe((blob: Blob) => {\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'passwords.csv';\n      a.click();\n    });\n  }\n\n  updateFavourites(cardId?: string): void {\n    const ids =\n      cardId ??\n      this.selection.selected\n        .map((pass) => {\n          return pass._id;\n        })\n        .join(',');\n    console.log('id', ids);\n\n    this.cardSerrvice.addToFavorites(ids).subscribe(\n      (response) => {\n        console.log('Password added to favorites successfully', response);\n        this.getCardsListings();\n        // Handle success, e.g., update UI\n      },\n      (error) => {\n        console.error('Error adding password to favorites', error);\n        // Handle error, e.g., display error message\n      }\n    );\n  }\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.length;\n    return numSelected === numRows;\n  }\n\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource);\n  }\n\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\n      row._id + 1\n    }`;\n  }\n\n  transform(cardNumber: string): string {\n    return cardNumber.replace(/\\s+/g, '').replace(/(\\d{4})/g, '$1 ').trim();\n}\ntoggleSideBar(): void {\n    this.commonService.toggleSideBar()\n}\n}\n\n@Component({\n  selector: 'app-view-card',\n  templateUrl: './view-card-details.html',\n  standalone: true,\n  imports: [MatButtonModule, MatDialogModule, CommonModule, MatIconModule],\n})\nexport class viewCardDetailsComponent implements OnInit {\n  readonly data = inject(MAT_DIALOG_DATA);\n  card: any;\n  ngOnInit(): void {\n  this.card = this.data.cardDetails  \n  }\n}\n\n    \n\n    \n        \n  \n    \n      menu\n    \n    Cards\n  \n  \n    \n    \n    />\n    \n      \n        add_circle_outline\n      \n    \n\n    \n    \n      \n        settings\n      \n      \n        Delete\n        \n          Add to Favourites\n        \n        Share -->\n        Export\n      \n    \n  \n\n\n  \n    \n      \n        \n        \n      \n      \n        \n        \n      \n    \n\n    \n    \n      ID\n      {{ i + 1 }}\n    \n\n    \n    \n      Card Type\n      {{ element.cardType }}\n    \n\n    \n    \n      Card Number\n      \n        {{ transform(element.cardNumber) }}\n      \n    \n\n    \n    \n      Card Holder Name\n      {{ element.cardHolderName }}\n    \n\n    \n    \n      Expiry Date\n      \n        {{ element.expiryDate | date : \"MM/yyyy\" }}\n      \n    \n\n    \n    \n      CVV\n      {{ element.CVV }}\n    \n\n    \n    \n      Billing Address\n      {{ element.billingAddress }}\n    \n\n    \n      Created At\n\n      {{ element.createdAt }}\n    \n    \n      Owner\n      {{ element.userId }}\n    \n\n    \n      Action\n      \n        \n          star\n        \n        \n          edit\n        \n        \n          delete\n        \n\n        \n          remove_red_eye\n        \n      \n      \n        \n          more_vert\n        \n        \n          \n            edit\n            Edit password\n          \n          \n            delete\n            Delete password\n          \n          \n            star\n          \n          \n            remove_red_eye\n            View password\n          \n        \n      \n    \n    \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu        Cards                />                  add_circle_outline                                settings                    Delete                  Add to Favourites                Share -->        Export                                                                                            ID      {{ i + 1 }}                  Card Type      {{ element.cardType }}                  Card Number              {{ transform(element.cardNumber) }}                        Card Holder Name      {{ element.cardHolderName }}                  Expiry Date              {{ element.expiryDate | date : \"MM/yyyy\" }}                        CVV      {{ element.CVV }}                  Billing Address      {{ element.billingAddress }}              Created At      {{ element.createdAt }}              Owner      {{ element.userId }}              Action                        star                          edit                          delete                          remove_red_eye                                      more_vert                                      edit            Edit password                                delete            Delete password                                star                                remove_red_eye            View password                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToFavorites\n                            \n                            \n                                createCard\n                            \n                            \n                                deleteCard\n                            \n                            \n                                exportCardsASCsv\n                            \n                            \n                                getCardById\n                            \n                            \n                                getCards\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/card.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToFavorites\n                        \n                    \n                \n            \n            \n                \naddToFavorites(cardIds: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/card.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardIds\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCard\n                        \n                    \n                \n            \n            \n                \ncreateCard(card: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/card.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCard\n                        \n                    \n                \n            \n            \n                \ndeleteCard(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/card.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportCardsASCsv\n                        \n                    \n                \n            \n            \n                \nexportCardsASCsv(ids: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/card.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardById\n                        \n                    \n                \n            \n            \n                \ngetCardById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/card.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCards\n                        \n                    \n                \n            \n            \n                \ngetCards()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/card.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/card.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCard\n                        \n                    \n                \n            \n            \n                \nupdateCard(id: string, card: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/card.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                card\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.api_url}/cards`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/card.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardService {\n\n  private apiUrl = `${environment.api_url}/cards`; // Replace with your API URL\n\n  constructor(private http: HttpClient) { }\n\n  // Create a new card\n  createCard(card: any): Observable {\n    return this.http.post(`${this.apiUrl}`, card)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Get all cards\n  getCards(): Observable {\n    return this.http.get(this.apiUrl)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Get a specific card by ID\n  getCardById(id: string): Observable {\n    return this.http.get(`${this.apiUrl}/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Update a card by ID\n  updateCard(id: string, card: any): Observable {\n    return this.http.patch(`${this.apiUrl}/${id}`, card)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Delete a card by ID\n  deleteCard(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  exportCardsASCsv(ids: string): Observable {\n    return this.http.get(`${this.apiUrl}/export?ids=${ids}`, { responseType: 'blob' });\n  }\n  addToFavorites(cardIds: string): Observable {\n    return this.http.post(`${this.apiUrl}/card/${cardIds}/favorite`, {}); // Assuming no additional data is sent in the request body\n  }\n\n  // Error handling\n  private handleError(error: any) {\n    console.error('An error occurred:', error);\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/common.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                profileSideBarOpen\n                            \n                            \n                                sideBarOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleProfileSideBar\n                            \n                            \n                                toggleSideBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/common.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleProfileSideBar\n                        \n                    \n                \n            \n            \n                \ntoggleProfileSideBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/common.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideBar\n                        \n                    \n                \n            \n            \n                \ntoggleSideBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/common.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        profileSideBarOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sideBarOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n  sideBarOpen = new BehaviorSubject(false);\n  profileSideBarOpen = new BehaviorSubject(false);\n\n  constructor() { }\n\n  toggleSideBar(): void  {\n    this.sideBarOpen.next(!this.sideBarOpen.value);\n  }\n  toggleProfileSideBar(): void  {\n    this.profileSideBarOpen.next(!this.profileSideBarOpen.value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateFolderDialogComponent.html":{"url":"components/CreateFolderDialogComponent.html","title":"component - CreateFolderDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateFolderDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialog/create-folder-dialog/create-folder-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-folder-dialog\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatToolbarModule\n                            MatDialogModule\n                            MatIconModule\n                            MatButtonModule\n                            MatFormFieldModule\n                            ReactiveFormsModule\n                            FormsModule\n                            MatInputModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./create-folder-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./create-folder-dialog.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                folderName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                            \n                                onClose\n                            \n                            \n                                onCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialog/create-folder-dialog/create-folder-dialog.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/create-folder-dialog/create-folder-dialog.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/create-folder-dialog/create-folder-dialog.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCreate\n                        \n                    \n                \n            \n            \n                \nonCreate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/create-folder-dialog/create-folder-dialog.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/create-folder-dialog/create-folder-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        folderName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/create-folder-dialog/create-folder-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@Component({\n  selector: 'app-create-folder-dialog',\n  standalone: true,\n  imports: [MatToolbarModule,MatDialogModule, MatIconModule, MatButtonModule,MatFormFieldModule, ReactiveFormsModule, FormsModule, MatInputModule,CommonModule ],\n  templateUrl: './create-folder-dialog.component.html',\n  styleUrl: './create-folder-dialog.component.css'\n})\nexport class CreateFolderDialogComponent {\n  folderName: string = '';\n\n  constructor(public dialogRef: MatDialogRef) {}\n\n  onCreate() {\n    // Handle the folder creation logic here\n    this.dialogRef.close(this.folderName); // Close the dialog and pass back the folder name\n  }\n\n  onCancel() {\n    this.dialogRef.close(); // Just close the dialog without any action\n  }\n\n  onClose() {\n    this.dialogRef.close(); // Close the dialog when clicking the close button\n  }\n}\n\n    \n\n    \n            \n      Create New Folder\n       \n      \n        close\n      \n    \n  \n  \n    \n      Folder Name\n      \n    \n  \n  \n  \n    Cancel\n    Create\n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Create New Folder                     close                        Folder Name                    Cancel    Create    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateFolderDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreditCardFormComponent.html":{"url":"components/CreditCardFormComponent.html","title":"component - CreditCardFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreditCardFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialog/credit-card-form/credit-card-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-credit-card-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            ReactiveFormsModule\n                            MatButtonModule\n                            MatToolbarModule\n                            MatFormFieldModule\n                            CommonModule\n                            MatInputModule\n                            MatAutocompleteModule\n                            MatDialogModule\n                            MatCheckboxModule\n                            MatChipsModule\n                            MatIconModule\n                            MatSelectModule\n                            MatOptionModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./credit-card-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./credit-card-form.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creditCardForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, creditCardService: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialog/credit-card-form/credit-card-form.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creditCardService\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/credit-card-form/credit-card-form.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        creditCardForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/credit-card-form/credit-card-form.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PasswordService } from '../../services/password.service';\nimport { MatInputModule } from '@angular/material/input';\nimport { CommonModule } from '@angular/common';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { CardService } from '../../services/card.service';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\n\n@Component({\n  selector: 'app-credit-card-form',\n  standalone: true,\n  imports: [FormsModule, ReactiveFormsModule, MatButtonModule, MatToolbarModule, MatFormFieldModule, CommonModule, MatInputModule, MatAutocompleteModule, MatDialogModule, MatCheckboxModule, MatChipsModule, MatIconModule, MatSelectModule, MatOptionModule],\n  templateUrl: './credit-card-form.component.html',\n  styleUrl: './credit-card-form.component.css'\n})\nexport class CreditCardFormComponent {\n\n  creditCardForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private creditCardService: CardService) {\n    this.creditCardForm = this.fb.group({\n      cardType: [''],\n      cardHolderName: ['', Validators.required],\n      cardNumber: ['', [Validators.required, Validators.pattern('^[0-9]{16}$')]],\n      expiryDate: ['', Validators.required],\n      CVV: ['', [Validators.required, Validators.pattern('^[0-9]{3,4}$')]],\n      billingAddress: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.creditCardForm.valid) {\n      this.creditCardService.createCard(this.creditCardForm.value).subscribe(response => {\n        console.log('Credit card created', response);\n      });\n    }\n  }\n\n}\n\n    \n\n    \n        \n     Add Credit Card \n  \n  \n    \n      \n        Card Type\n        \n          Visa\n          MasterCard\n          American Express\n          Discover\n        \n      \n  \n      \n        Card Holder Name\n        \n      \n  \n      \n        Card Number\n        \n      \n  \n      \n        Expiry Date\n        \n      \n  \n      \n        CVV\n        \n      \n  \n      \n        Billing Address\n        \n      \n    \n  \n  \n    Cancel\n    Save Credit Card\n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     Add Credit Card                       Card Type                  Visa          MasterCard          American Express          Discover                              Card Holder Name                              Card Number                              Expiry Date                              CVV                              Billing Address                          Cancel    Save Credit Card    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreditCardFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashbloard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            ReactiveFormsModule\n                            MatButtonModule\n                            MatIconModule\n                            CommonModule\n                            MatSidenavModule\n                            MatFormFieldModule\n                            MatInputModule\n                                SideNavComponent\n                            RouterModule\n                            MatMenuModule\n                            MatSnackBarModule\n                            MatSidenavModule\n                            MatListModule\n                            MatDialogModule\n                                HeaderComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                activateRouter\n                            \n                            \n                                    Readonly\n                                breakpointObserver\n                            \n                            \n                                    Readonly\n                                commonService\n                            \n                            \n                                    Readonly\n                                dialog\n                            \n                            \n                                    \n                                drawer\n                            \n                            \n                                isBreakPoint\n                            \n                            \n                                isSidebarOpen\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:53\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        activateRouter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        breakpointObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(BreakpointObserver)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        commonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialog)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        drawer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDrawer | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('drawer')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBreakPoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSidebarOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDrawerMode\n\n                    \n                \n                \n                    \n                        Default value : 'side'\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, ViewChild, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SideNavComponent } from './side-nav/side-nav.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatDrawer,\n  MatDrawerMode,\n  MatSidenavModule,\n} from '@angular/material/sidenav';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { Router, RouterModule } from '@angular/router';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { CommonService } from '../services/common.service';\nimport { HeaderComponent } from './header/header.component';\n\n@Component({\n  selector: 'app-dashbloard',\n  standalone: true,\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatIconModule,\n    CommonModule,\n    MatSidenavModule,\n    MatFormFieldModule,\n    MatInputModule,\n    SideNavComponent,\n    RouterModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatDialogModule,HeaderComponent\n  ],\n  templateUrl: './dashboard.component.html',\n})\nexport class DashboardComponent {\n  @ViewChild('drawer') drawer: MatDrawer | undefined;\n  readonly dialog = inject(MatDialog);\n  readonly breakpointObserver = inject(BreakpointObserver);\n  readonly commonService = inject(CommonService);\n  readonly activateRouter = inject(Router);\n  mode: MatDrawerMode = 'side';\n  isSidebarOpen: boolean = true;\n  isBreakPoint: boolean = false;\n  constructor() {}\n  ngOnInit(): void {\n    this.breakpointObserver\n      .observe(['(max-width: 600px)'])\n      .subscribe((result) => {\n        // Iterate through the breakpoints and take action based on the matches\n        if (result.breakpoints['(max-width: 600px)']) {\n          this.isBreakPoint = true;\n          this.isSidebarOpen = false;\n          this.mode = 'over';\n        } else {\n          this.isSidebarOpen = true;\n          this.isBreakPoint = false;\n          this.mode = 'side';\n        }\n      });\n    \n    this.commonService.sideBarOpen.subscribe((res) => {\n      if (this.isBreakPoint) {\n        this.isSidebarOpen = res;\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DownloadComponent.html":{"url":"components/DownloadComponent.html","title":"component - DownloadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DownloadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/download/download.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-download\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatFormFieldModule\n                            ReactiveFormsModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./download.component.html\n            \n\n\n\n            \n                styleUrl\n                ./download.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedPlatform\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        selectedPlatform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'windows'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/download/download.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@Component({\n  selector: 'app-download',\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, ReactiveFormsModule, FormsModule],\n  templateUrl: './download.component.html',\n  styleUrl: './download.component.css'\n})\nexport class DownloadComponent {\n  selectedPlatform: string = 'windows';\n\n}\n\n    \n\n    \n        \n    \n\nDownload SafePassVault\n\n\n\n  SafePassVault is a secure password management tool designed to help you store and manage your passwords safely. With end-to-end encryption and a user-friendly interface, you can ensure that your sensitive information is protected at all times. Whether you're using it for personal or professional purposes, SafePassVault offers a reliable solution for all your password management needs.\n\n\n\nKey Features:\n\n  End-to-End Encryption: Your data is encrypted from the moment you enter it until you access it.\n  Cross-Platform Support: Use SafePassVault on Windows, Linux, macOS, and even within Docker containers.\n  User-Friendly Interface: Simple and intuitive design for hassle-free navigation.\n  Secure Sharing: Safely share passwords with trusted users without compromising security.\n  Backup and Restore: Easily backup your data and restore it whenever needed.\n\n\n\n\n  \n  \n    View releases on GitHub\n  \n\n\n\n\n  It is highly recommended to always download the latest version of SafePassVault to take advantage of new features, performance improvements, and security patches. Check our GitHub Releases page for the most up-to-date information.\n\n\n\n\n  Join our growing community of users who trust SafePassVault for managing their passwords securely. If you encounter any issues or have questions, feel free to reach out through our GitHub Issues page.\n\n\n\n  \n  \n    Select your platform:\n    \n      Windows\n      Linux\n      Ubuntu\n      macOS\n      Docker\n    \n  \n\n  \n  \n    Download for Windows\n    To install SafePassVault on Windows, click the button below to download the installer:\n    \n      Download Windows Installer\n    \n    After downloading, run the installer and follow the on-screen instructions.\n  \n\n  \n  \n    Download for Linux\n    To install SafePassVault on Linux, run the following commands:\n    \nwget https://github.com/pratikdevelop/SafePassVaultWebUI/releases/download/v0.0.0/safepassvault_0.0.0_amd64.deb\nsudo dpkg -i safepassvault_0.0.0_amd64.deb\n    \n    If you encounter dependency issues, you can resolve them by running:\n    \nsudo apt-get install -f\n    \n  \n\n  \n  \n    Download for Ubuntu\n    To install SafePassVault on Ubuntu, run the following commands:\n    \nsudo add-apt-repository ppa:yourapp/ppa && sudo apt-get update && sudo apt-get install yourapp\n    \n    Ensure your system is updated and prerequisites are installed.\n  \n\n  \n  \n    Download for macOS\n    To install SafePassVault on macOS, click the button below to download the installer:\n    \n      Download macOS Installer\n    \n    After downloading, open the `.dmg` file and drag the application to your Applications folder.\n  \n\n  \n  \n    Run with Docker\n    To pull and run SafePassVault using Docker, execute the following commands:\n    \ndocker pull pratikdevelop/password-app-ui:latest\ndocker run -d -p 8080:8080 pratikdevelop/password-app-ui\n    \n    Make sure Docker is installed on your system. Visit Docker Docs for installation instructions.\n  \n\n  \n  \n    Additional Instructions\n    For the best experience, ensure your system meets the following requirements:\n    \n      Latest version of the operating system\n      Internet connection for downloading dependencies\n      Administrator access for installation\n    \n    If you face any issues during installation, please refer to our GitHub Issues page or contact our support team.\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Download SafePassVault  SafePassVault is a secure password management tool designed to help you store and manage your passwords safely. With end-to-end encryption and a user-friendly interface, you can ensure that your sensitive information is protected at all times. Whether you\\'re using it for personal or professional purposes, SafePassVault offers a reliable solution for all your password management needs.Key Features:  End-to-End Encryption: Your data is encrypted from the moment you enter it until you access it.  Cross-Platform Support: Use SafePassVault on Windows, Linux, macOS, and even within Docker containers.  User-Friendly Interface: Simple and intuitive design for hassle-free navigation.  Secure Sharing: Safely share passwords with trusted users without compromising security.  Backup and Restore: Easily backup your data and restore it whenever needed.        View releases on GitHub    It is highly recommended to always download the latest version of SafePassVault to take advantage of new features, performance improvements, and security patches. Check our GitHub Releases page for the most up-to-date information.  Join our growing community of users who trust SafePassVault for managing their passwords securely. If you encounter any issues or have questions, feel free to reach out through our GitHub Issues page.        Select your platform:          Windows      Linux      Ubuntu      macOS      Docker              Download for Windows    To install SafePassVault on Windows, click the button below to download the installer:          Download Windows Installer        After downloading, run the installer and follow the on-screen instructions.          Download for Linux    To install SafePassVault on Linux, run the following commands:    wget https://github.com/pratikdevelop/SafePassVaultWebUI/releases/download/v0.0.0/safepassvault_0.0.0_amd64.debsudo dpkg -i safepassvault_0.0.0_amd64.deb        If you encounter dependency issues, you can resolve them by running:    sudo apt-get install -f              Download for Ubuntu    To install SafePassVault on Ubuntu, run the following commands:    sudo add-apt-repository ppa:yourapp/ppa && sudo apt-get update && sudo apt-get install yourapp        Ensure your system is updated and prerequisites are installed.          Download for macOS    To install SafePassVault on macOS, click the button below to download the installer:          Download macOS Installer        After downloading, open the `.dmg` file and drag the application to your Applications folder.          Run with Docker    To pull and run SafePassVault using Docker, execute the following commands:    docker pull pratikdevelop/password-app-ui:latestdocker run -d -p 8080:8080 pratikdevelop/password-app-ui        Make sure Docker is installed on your system. Visit Docker Docs for installation instructions.          Additional Instructions    For the best experience, ensure your system meets the following requirements:          Latest version of the operating system      Internet connection for downloading dependencies      Administrator access for installation        If you face any issues during installation, please refer to our GitHub Issues page or contact our support team.  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DownloadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfileComponent.html":{"url":"components/EditProfileComponent.html","title":"component - EditProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/profile/user-profile/dailog/edit-profile/edit-profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatDialogModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatButtonModule\n                            MatToolbarModule\n                            ReactiveFormsModule\n                            FormsModule\n                            MatSnackBarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./edit-profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./edit-profile.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                authService\n                            \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                dialogRef\n                            \n                            \n                                    Readonly\n                                formBuilder\n                            \n                            \n                                profileForm\n                            \n                            \n                                    Readonly\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/profile/user-profile/dailog/edit-profile/edit-profile.component.ts:24\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/user-profile/dailog/edit-profile/edit-profile.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/user-profile/dailog/edit-profile/edit-profile.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/dailog/edit-profile/edit-profile.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/dailog/edit-profile/edit-profile.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/dailog/edit-profile/edit-profile.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/dailog/edit-profile/edit-profile.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/dailog/edit-profile/edit-profile.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/dailog/edit-profile/edit-profile.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { AuthService } from '../../../../../services/auth.service';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-edit-profile',\n  standalone: true,\n  imports: [MatDialogModule, MatFormFieldModule, MatInputModule, MatButtonModule, MatToolbarModule, ReactiveFormsModule, FormsModule, MatSnackBarModule],\n  templateUrl: './edit-profile.component.html',\n  styleUrl: './edit-profile.component.css'\n})\nexport class EditProfileComponent implements OnInit {\n  readonly authService = inject(AuthService)\n  readonly dialogRef = inject(MatDialogRef);\n  readonly data = inject(MAT_DIALOG_DATA);\n  readonly formBuilder = inject(FormBuilder)\n  readonly snackBar = inject(MatSnackBar);\n  profileForm: FormGroup\n\n  constructor() {\n    this.profileForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      billingAddress:['', Validators.required],\n      state:['', Validators.required],\n      phone: ['', Validators.required],\n      postalCode:['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required]\n      });\n    console.log('dd', this.data);\n    \n    this.profileForm.patchValue(this.data)\n  }\n\n  ngOnInit(): void {\n    \n  }\n  updateProfile(): void {\n    if(this.profileForm.invalid) {\n      return;\n    }\n    this.authService.updateProfile(this.profileForm.value).subscribe({\n      next: (res) => {\n        this.snackBar.open('Profile updated successfully', 'OK', {\n          duration: 2000,\n        }\n      )\n      this.dialogRef.close(true);\n    }\n    })\n  }\n}\n\n    \n\n    \n        \n    \n        Profile\n        \n            Manage your name, password, and account settings.\n          \n    \n\n\n\n  \n    \n        \n          \n            Full name\n            \n          \n  \n  \n        \n          \n            Email\n            \n          \n  \n          \n            Phone\n            \n          \n  \n        \n          \n            Billing Address\n            \n          \n  \n          \n            City\n            \n          \n  \n          \n            State\n            \n          \n  \n          \n            Postal Code\n            \n          \n  \n        \n          \n            Country\n            \n            \n\n\n\n    Cancel\n    Save changes\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Profile                    Manage your name, password, and account settings.                                                  Full name                                                        Email                                              Phone                                                      Billing Address                                              City                                              State                                              Postal Code                                                      Country                            Cancel    Save changes  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileExplorerComponent.html":{"url":"components/FileExplorerComponent.html","title":"component - FileExplorerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileExplorerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/file-explorer/file-explorer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-file-explorer\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatTableModule\n                            MatIconModule\n                            MatButtonModule\n                            CommonModule\n                            MatFormFieldModule\n                            ReactiveFormsModule\n                            FormsModule\n                            MatMenuModule\n                            MatInputModule\n                            MatIconModule\n                \n            \n\n            \n                styleUrls\n                ./file-explorer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./file-explorer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeDetectorRef\n                            \n                            \n                                    Readonly\n                                commonService\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                    Private\n                                fileService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadFiles\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPreviewFile\n                            \n                            \n                                onShareItem\n                            \n                            \n                                openFileDialog\n                            \n                            \n                                performAction\n                            \n                            \n                                setFilter\n                            \n                            \n                                toggleSideBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/file-explorer/file-explorer.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFiles\n                        \n                    \n                \n            \n            \n                \nloadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/file-explorer/file-explorer.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/file-explorer/file-explorer.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreviewFile\n                        \n                    \n                \n            \n            \n                \nonPreviewFile(arg0: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/file-explorer/file-explorer.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arg0\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onShareItem\n                        \n                    \n                \n            \n            \n                \nonShareItem(arg0: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/file-explorer/file-explorer.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arg0\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openFileDialog\n                        \n                    \n                \n            \n            \n                \nopenFileDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/file-explorer/file-explorer.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        performAction\n                        \n                    \n                \n            \n            \n                \nperformAction(fileId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/file-explorer/file-explorer.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilter\n                        \n                    \n                \n            \n            \n                \nsetFilter(fileId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/file-explorer/file-explorer.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideBar\n                        \n                    \n                \n            \n            \n                \ntoggleSideBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/file-explorer/file-explorer.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeDetectorRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/file-explorer/file-explorer.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        commonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/file-explorer/file-explorer.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/file-explorer/file-explorer.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['filename', 'size','uploadedAt',  'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/file-explorer/file-explorer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fileService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FileService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/file-explorer/file-explorer.component.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnInit, Pipe, inject } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {  MatTableModule } from '@angular/material/table';\nimport { FileService } from '../../services/file.service'; // Import your file service here\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport { FileUploadComponent } from '../../dialog/file-upload/file-upload.component';\nimport { CommonService } from '../../services/common.service';\n\n@Component({\n  selector: 'app-file-explorer',\n  standalone: true,\n  templateUrl: './file-explorer.component.html',\n  styleUrls: ['./file-explorer.component.css'],\n  imports: [\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    CommonModule,\n    MatFormFieldModule, ReactiveFormsModule, FormsModule, \n    MatMenuModule,\n    MatInputModule,\n    MatIconModule\n    \n  ]\n})\nexport class FileExplorerComponent implements OnInit {\nonShareItem(arg0: any) {\nthrow new Error('Method not implemented.');\n}\nonPreviewFile(arg0: any) {\nthrow new Error('Method not implemented.');\n}\n  displayedColumns: string[] = ['filename', 'size','uploadedAt',  'actions'];\n  dataSource!: any[]\n  private fileService = inject(FileService);\n  private changeDetectorRef = inject(ChangeDetectorRef)\n  readonly commonService = inject(CommonService) \n\n  constructor(private dialog: MatDialog) {}\n\n  ngOnInit(): void {\n    this.loadFiles();\n  }\n\n  loadFiles(): void {\n    this.fileService.getFilesAndFolders('').subscribe(files => {\n      this.dataSource = files;\n      this.changeDetectorRef.detectChanges();\n    });\n  }\n\n  openFileDialog(): void {\n    this.dialog.open(FileUploadComponent, {\n      width:'600px'\n    })\n  }\n\n  setFilter(fileId: string): void {\n    // Implement preview functionality\n  }\n\n  performAction(fileId: string): void {\n    // Implement share functionality\n  }\n  toggleSideBar(): void {\n    this.commonService.toggleSideBar();\n  }\n\n}\n    \n\n    \n        \n\n  \n    \n      \n        menu\n      \n      File Explorer\n    \n     \n       File Explorer\n       -->\n    \n  \n  \n    \n    \n      \n        add_circle_outline\n      \n     \n    \n    \n\n    \n    \n      \n        settings\n      \n      \n        Delete\n        Add to Favourites\n        Share\n        Export\n      \n    \n  \n\n   \n  \n  \n    \n      \n      \n         Filename \n         {{ element.originalName || element.filename }} \n      \n\n      \n      \n         Size \n         {{ element.size | number: '1.0-2' }} KB \n      \n\n      \n      \n         Uploaded At \n         {{ element.uploadedAt | date: 'short' }} \n      \n\n      \n      \n         Actions \n        \n          \n            visibility\n          \n          \n            share\n          \n        \n      \n\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./file-explorer.component.css\n                \n                \n\n.file-list {\n    margin-top: 20px;\n}\n\n.file-item {\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n}\n\n.file-item mat-icon {\n    margin-right: 10px;\n}\n\n.file-item button {\n    margin-left: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu            File Explorer                File Explorer       -->                              add_circle_outline                                         settings                    Delete        Add to Favourites        Share        Export                                            Filename          {{ element.originalName || element.filename }}                            Size          {{ element.size | number: \\'1.0-2\\' }} KB                            Uploaded At          {{ element.uploadedAt | date: \\'short\\' }}                            Actions                               visibility                                share                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileExplorerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/file.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createFolder\n                            \n                            \n                                getFilePreview\n                            \n                            \n                                getFilesAndFolders\n                            \n                            \n                                searchFolders\n                            \n                            \n                                searchUsers\n                            \n                            \n                                shareItem\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/file.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createFolder\n                        \n                    \n                \n            \n            \n                \ncreateFolder(name: string, parentId: null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/file.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                parentId\n                                            \n                                                        null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilePreview\n                        \n                    \n                \n            \n            \n                \ngetFilePreview(fileId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/file.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilesAndFolders\n                        \n                    \n                \n            \n            \n                \ngetFilesAndFolders(folderId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/file.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                folderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchFolders\n                        \n                    \n                \n            \n            \n                \nsearchFolders(searchTerm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/file.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUsers\n                        \n                    \n                \n            \n            \n                \nsearchUsers(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/file.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shareItem\n                        \n                    \n                \n            \n            \n                \nshareItem(itemId: string, shareWith: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/file.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                itemId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                shareWith\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(formData: FormData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/file.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formData\n                                            \n                                                        FormData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.api_url}/files`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/file.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n  private apiUrl = `${environment.api_url}/files`; // Replace with your API URL\n\n  constructor(private http: HttpClient) {}\n\n  searchFolders(searchTerm: string): Observable {\n    let params = new HttpParams()\n      .set('searchTerm', searchTerm)\n\n    return this.http.get(`${this.apiUrl}/folders/search`, { params });\n  }\n  \n  // Fetch files and folders\n  getFilesAndFolders(folderId: string): Observable {\n    return this.http.get(`${this.apiUrl}`);\n  }\n\n  // Create a new folder\n  createFolder(name: string, parentId = null): Observable {\n    return this.http.post(`${this.apiUrl}/folder`, { name, parentId });\n  }\n\n  // Create a new folder\n  searchUsers(name: string): Observable {\n    return this.http.get(`${this.apiUrl}/searchUsers/${name}`);\n  }\n\n  // Upload a file\n  uploadFile(formData: FormData): Observable {\n    return this.http.post(`${this.apiUrl}/upload`, formData);\n  }\n\n  // Share a file or folder\n  shareItem(itemId: string, shareWith: string[]): Observable {\n    return this.http.post(`${this.apiUrl}/share/${itemId}`, { shareWith });\n  }\n\n  // File preview\n  getFilePreview(fileId: string): Observable {\n    return this.http.get(`${this.apiUrl}/preview/${fileId}`, { responseType: 'blob' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileUploadComponent.html":{"url":"components/FileUploadComponent.html","title":"component - FileUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialog/file-upload/file-upload.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-file-upload\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatFormFieldModule\n                            MatChipsModule\n                            MatChipListbox\n                            MatAutocompleteModule\n                            MatButtonModule\n                            MatToolbarModule\n                            MatIconModule\n                            FormsModule\n                            MatInputModule\n                            MatSnackBarModule\n                            MatDialogModule\n                            MatCheckboxModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./file-upload.component.css\n            \n\n\n\n            \n                templateUrl\n                ./file-upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                changeDetectorRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                            \n                                    Private\n                                    Readonly\n                                dilaogRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                fb\n                            \n                            \n                                    Private\n                                    Readonly\n                                fileService\n                            \n                            \n                                fileToUpload\n                            \n                            \n                                filteredFolders\n                            \n                            \n                                filteredUsers\n                            \n                            \n                                folderNotFound\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                    Private\n                                    Readonly\n                                snackBar\n                            \n                            \n                                uploadForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                createFolder\n                            \n                            \n                                onFileChange\n                            \n                            \n                                onFolderSearch\n                            \n                            \n                                onSubmit\n                            \n                            \n                                removeUser\n                            \n                            \n                                removeUserOrFolder\n                            \n                            \n                                searchUsers\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dialog/file-upload/file-upload.component.ts:57\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        change\n                        \n                    \n                \n            \n            \n                \nchange(folder: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/file-upload/file-upload.component.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                folder\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFolder\n                        \n                    \n                \n            \n            \n                \ncreateFolder(folderName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/file-upload/file-upload.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                folderName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileChange\n                        \n                    \n                \n            \n            \n                \nonFileChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/file-upload/file-upload.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFolderSearch\n                        \n                    \n                \n            \n            \n                \nonFolderSearch(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/file-upload/file-upload.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/file-upload/file-upload.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeUser\n                        \n                    \n                \n            \n            \n                \nremoveUser(user: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/file-upload/file-upload.component.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeUserOrFolder\n                        \n                    \n                \n            \n            \n                \nremoveUserOrFolder(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/file-upload/file-upload.component.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUsers\n                        \n                    \n                \n            \n            \n                \nsearchUsers(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/file-upload/file-upload.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n            \n                \nselected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/file-upload/file-upload.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        changeDetectorRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/file-upload/file-upload.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialog)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/file-upload/file-upload.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dilaogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/file-upload/file-upload.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/file-upload/file-upload.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fileService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FileService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/file-upload/file-upload.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileToUpload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/file-upload/file-upload.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredFolders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/file-upload/file-upload.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/file-upload/file-upload.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        folderNotFound\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/file-upload/file-upload.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/file-upload/file-upload.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/file-upload/file-upload.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/file-upload/file-upload.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, inject } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule\n} from '@angular/forms';\nimport { FileService } from '../../services/file.service'; // Import your file service\nimport { HttpEventType } from '@angular/common/http';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialog, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatChipListbox, MatChipsModule } from '@angular/material/chips';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-file-upload',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatChipListbox,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    FormsModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    CommonModule,\n  ],\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileUploadComponent {\n  uploadForm: FormGroup;\n  filteredUsers: any[] = [];\n  filteredFolders: any[] = [];\n  selectedUsers: string[] = [];\n  fileToUpload: File | null = null;\n  folderNotFound = false;\n  private readonly fb = inject(FormBuilder);\n  private readonly fileService = inject(FileService);\n  private readonly snackBar = inject(MatSnackBar);\n  private readonly changeDetectorRef = inject(ChangeDetectorRef);\n  private readonly dialog = inject(MatDialog);\n  private readonly dilaogRef = inject(MatDialogRef);\n\n  constructor(\n\n  ) {\n    this.uploadForm = this.fb.group({\n      file: [''],\n      folderId: [''],\n      folderName: [''],\n      sharedWith: [''],\n      encrypted: [false],\n      offlineAccess: [false],\n    });\n  }\n\n  createFolder(folderName: string): void {\n    this.fileService.createFolder(folderName).subscribe(\n      (res) => {\n        this.snackBar.open(`Folder \"${folderName}\" created.`, 'Close');\n        this.filteredFolders.push(res.folder);\n        this.folderNotFound = false;\n      },\n      () => {\n        this.snackBar.open('Error creating folder.', 'Close');\n      }\n    );\n  }\n\n  onFileChange(event: any): void {\n    if (event.target.files.length > 0) {\n      this.fileToUpload = event.target.files[0];\n    }\n  }\n  onFolderSearch(event: any): void {\n    const input = event.target.value;\n    if (input) {\n      this.fileService.searchFolders(input).subscribe({\n        next: (folders) => {\n          this.filteredFolders = folders;\n          this.folderNotFound = folders.length === 0;\n        },\n        error: () => {\n          this.snackBar.open('Error searching folders.', 'Close');\n        },\n        complete: () => {\n          this.changeDetectorRef.detectChanges();\n        },\n      });\n    }\n  }\n\n  searchUsers(event: any): void {\n    const input = event.target.value;\n    this.fileService.searchUsers(input).subscribe((response) => {\n      this.filteredUsers = response;\n    });\n  }\n\n  onSubmit(): void {\n    if (this.uploadForm.invalid || !this.fileToUpload) {\n      this.snackBar.open(\n        'Please fill in all required fields and select a file.',\n        'Close'\n      );\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', this.fileToUpload);\n    formData.append('folderId', this.uploadForm.get('folderId')?.value || '');\n    formData.append('ownerId', this.uploadForm.get('ownerId')?.value);\n    formData.append(\n      'sharedWith',\n      JSON.stringify(this.uploadForm.get('sharedWith')?.value || [])\n    );\n    formData.append('encrypted', this.uploadForm.get('encrypted')?.value);\n    formData.append(\n      'offlineAccess',\n      this.uploadForm.get('offlineAccess')?.value\n    );\n\n    this.fileService.uploadFile(formData).subscribe({\n      next: (event) => {\n        this.snackBar.open('File uploaded successfully!', 'Close');\n        this.uploadForm.reset();\n        this.fileToUpload = null;\n      },\n      error: (error) => {\n        this.snackBar.open('Error uploading file.', 'Close', {\n          duration: 2000,\n        });\n      },\n      complete: () => {\n        this.changeDetectorRef.detectChanges();\n        this.dilaogRef.close();\n\n      },\n    });\n  }\n\n  removeUserOrFolder(name: string): void {\n    const index = this.uploadForm.value.sharedWith.indexOf(name);\n    if (index >= 0) {\n      this.uploadForm.value.sharedWith.splice(index, 1);\n    }\n  }\n\n  selected(event: any): void {\n    this.selectedUsers.push(event.option.viewValue);\n  }\n  removeUser(user: string): void {\n    const index = this.selectedUsers.indexOf(user);\n    if (index >= 0) {\n      this.selectedUsers.splice(index, 1);\n    }\n  }\n\n  change(folder: { id: string }): void {\n    this.uploadForm.patchValue({ folderId: folder.id });\n  }\n}\n\n    \n\n    \n        \n  Upload File\n\n\n  \n    \n    \n      File\n      \n        attach_file\n      \n      \n      \n      This field is required\n    \n\n    \n\n    \n      Folder\n      \n      \n        \n          {{ folder.name }}\n        \n      \n    \n\n    \n    \n      Create Folder \"{{ uploadForm.get('folderName')!.value }}\"\n    \n\n    \n    \n      \n        \n          {{ user }}\n          cancel\n        \n      \n      \n      \n        \n          {{ option }}\n        \n      \n    \n\n    \n    \n      Encrypted\n      Offline Access\n    \n\n    \n    \n      Upload\n      Cancel\n    \n  \n\n\n    \n\n    \n                \n                    ./file-upload.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Upload File                File              attach_file                        This field is required                  Folder                              {{ folder.name }}                                Create Folder \"{{ uploadForm.get(\\'folderName\\')!.value }}\"                                    {{ user }}          cancel                                            {{ option }}                                Encrypted      Offline Access                  Upload      Cancel      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Folder.html":{"url":"interfaces/Folder.html","title":"interface - Folder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Folder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/folder.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isSpecial\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSpecial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSpecial:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n// Define the Folder model\nexport interface Folder {\n  _id?: string;\n  user?: string;\n  name?: string;\n  isSpecial?: boolean;\n  type?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FolderService {\n  private apiUrl = `${environment.api_url}/folders`; // Adjust your API URL as needed\n\n  constructor(private http: HttpClient) {}\n\n  // Create a new folder\n  createFolder(folder: Folder): Observable {\n    return this.http.post(this.apiUrl, folder);\n  }\n\n  // Get all folders for the logged-in user\n  getUserFolders(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n\n  // Get folders by type\n  getFoldersByType(type: string): Observable {\n    return this.http.get(`${this.apiUrl}/type/${type}`);\n  }\n\n  // Get folder by ID\n  getFolderById(folderId: string): Observable {\n    return this.http.get(`${this.apiUrl}/${folderId}`);\n  }\n\n  // Update a folder\n  updateFolder(folderId: string, folder: Folder): Observable {\n    return this.http.put(`${this.apiUrl}/${folderId}`, folder);\n  }\n\n  // Delete a folder\n  deleteFolder(folderId: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${folderId}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FolderService.html":{"url":"injectables/FolderService.html","title":"injectable - FolderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FolderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/folder.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createFolder\n                            \n                            \n                                deleteFolder\n                            \n                            \n                                getFolderById\n                            \n                            \n                                getFoldersByType\n                            \n                            \n                                getUserFolders\n                            \n                            \n                                updateFolder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/folder.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createFolder\n                        \n                    \n                \n            \n            \n                \ncreateFolder(folder: Folder)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/folder.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                folder\n                                            \n                                                            Folder\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFolder\n                        \n                    \n                \n            \n            \n                \ndeleteFolder(folderId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/folder.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                folderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFolderById\n                        \n                    \n                \n            \n            \n                \ngetFolderById(folderId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/folder.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                folderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFoldersByType\n                        \n                    \n                \n            \n            \n                \ngetFoldersByType(type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/folder.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserFolders\n                        \n                    \n                \n            \n            \n                \ngetUserFolders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/folder.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFolder\n                        \n                    \n                \n            \n            \n                \nupdateFolder(folderId: string, folder: Folder)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/folder.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                folderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                folder\n                                            \n                                                            Folder\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.api_url}/folders`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/folder.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n// Define the Folder model\nexport interface Folder {\n  _id?: string;\n  user?: string;\n  name?: string;\n  isSpecial?: boolean;\n  type?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FolderService {\n  private apiUrl = `${environment.api_url}/folders`; // Adjust your API URL as needed\n\n  constructor(private http: HttpClient) {}\n\n  // Create a new folder\n  createFolder(folder: Folder): Observable {\n    return this.http.post(this.apiUrl, folder);\n  }\n\n  // Get all folders for the logged-in user\n  getUserFolders(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n\n  // Get folders by type\n  getFoldersByType(type: string): Observable {\n    return this.http.get(`${this.apiUrl}/type/${type}`);\n  }\n\n  // Get folder by ID\n  getFolderById(folderId: string): Observable {\n    return this.http.get(`${this.apiUrl}/${folderId}`);\n  }\n\n  // Update a folder\n  updateFolder(folderId: string, folder: Folder): Observable {\n    return this.http.put(`${this.apiUrl}/${folderId}`, folder);\n  }\n\n  // Delete a folder\n  deleteFolder(folderId: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${folderId}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n    \n      Home\n      Settings\n      Download\n      Privacy Policy\n    \n  \n    \n      Sync Status: ✔ Synced\n      Security: ✔ Secured\n      Version: v1.0.0\n    \n  \n    \n      \n        \n        safepassvault&#64;gmail.com\n      \n  \n      \n        \n        +1 234 567 890\n      \n    \n  \n    \n      © 2024 Safepassvault. All rights reserved.\n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Home      Settings      Download      Privacy Policy                Sync Status: ✔ Synced      Security: ✔ Secured      Version: v1.0.0                                safepassvault@gmail.com                              +1 234 567 890                      © 2024 Safepassvault. All rights reserved.      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatSnackBarModule\n                            RouterModule\n                            FormsModule\n                            MatButtonModule\n                            CommonModule\n                            MatIconModule\n                            MatMenuModule\n                            ReactiveFormsModule\n                            MatInputModule\n                \n            \n\n\n            \n                styles\n                 @media (min-width: 768px) {\n    .menu-button {\n      display: none;\n    }\n  }\n\n  /* Hide complete menu on smaller screens */\n  @media (max-width: 767px) {\n    .menu-content {\n      display: none;\n    }\n  }\n\n  /* Show complete menu on larger screens */\n  @media (min-width: 768px) {\n    .menu-content {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 100%;\n    }\n    .menu-item {\n      margin: 5px 0;\n    }\n  }\n\n            \n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                    Private\n                                    Readonly\n                                changeDetectorRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Private\n                                    Readonly\n                                snackbar\n                            \n                            \n                                    Public\n                                    Readonly\n                                token\n                            \n                            \n                                userProfile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/header/header.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/header/header.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/header/header.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        changeDetectorRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/header/header.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/header/header.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        snackbar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/header/header.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Default value : localStorage.getItem('token')?.toString()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/header/header.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/header/header.component.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnInit, inject } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [\n    MatSnackBarModule,\n    RouterModule,\n    FormsModule,\n    MatButtonModule,\n    CommonModule,\n    MatIconModule,\n    MatMenuModule,\n    ReactiveFormsModule,\n    MatInputModule,\n  ],\n  templateUrl: './header.component.html',\n  styles: ` @media (min-width: 768px) {\n    .menu-button {\n      display: none;\n    }\n  }\n\n  /* Hide complete menu on smaller screens */\n  @media (max-width: 767px) {\n    .menu-content {\n      display: none;\n    }\n  }\n\n  /* Show complete menu on larger screens */\n  @media (min-width: 768px) {\n    .menu-content {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 100%;\n    }\n    .menu-item {\n      margin: 5px 0;\n    }\n  }\n`,\n})\nexport class HeaderComponent implements OnInit {\n  public readonly token = localStorage.getItem('token')?.toString();\n  private readonly authService = inject(AuthService);\n  private readonly snackbar = inject(MatSnackBar);\n  private readonly router = inject(Router);\n  private readonly changeDetectorRef = inject(ChangeDetectorRef);\n  userProfile: any;\n  ngOnInit(): void {\n    this.authService.userProfile$.subscribe({\n      next: (response) => {\n        this.userProfile = response;\n        this.changeDetectorRef.detectChanges();\n      },\n      error: (error) => {\n        console.error(error);\n      },\n    });\n  }\n\n  logout(): void {\n    this.authService.logout().subscribe({\n      next: () => {\n        this.authService._userProfileSubject.next(null);\n        localStorage.removeItem('token');\n        this.snackbar.open('Logout successful', 'Ok', {\n          duration: 2000,\n        });\n        this.changeDetectorRef.detectChanges();\n        this.router.navigateByUrl('/');\n      },\n      error: (error) => {\n        console.error('Error logging out:', error);\n        this.snackbar.open(\n          `Error in logout, please try sometimes later`,\n          'Ok',\n          {\n            duration: 2000,\n          }\n        );\n        this.changeDetectorRef.detectChanges();\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    safepassvault\n    \n      menu\n    \n  \n\n  \n    \n      \n        \n          admin_panel_settings\n          Administration\n        \n        \n          person\n          Profile\n        \n        \n          power_settings_new\n          Logout\n        \n      \n    \n  \n\n  \n    \n      \n        admin_panel_settings\n        Administration\n      \n      \n        person\n        Profile\n      \n      \n        power_settings_new\n        Logout\n      \n    \n  \n\n\n    \n\n    \n             @media (min-width: 768px) {\n    .menu-button {\n      display: none;\n    }\n  }\n\n  /* Hide complete menu on smaller screens */\n  @media (max-width: 767px) {\n    .menu-content {\n      display: none;\n    }\n  }\n\n  /* Show complete menu on larger screens */\n  @media (min-width: 768px) {\n    .menu-content {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 100%;\n    }\n    .menu-item {\n      margin: 5px 0;\n    }\n  }\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      safepassvault          menu                                    admin_panel_settings          Administration                          person          Profile                          power_settings_new          Logout                                        admin_panel_settings        Administration                    person        Profile                    power_settings_new        Logout            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent-1.html":{"url":"components/HeaderComponent-1.html","title":"component - HeaderComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatSnackBarModule\n                            RouterModule\n                            FormsModule\n                            MatButtonModule\n                            CommonModule\n                            MatIconModule\n                            MatMenuModule\n                            ReactiveFormsModule\n                            MatInputModule\n                \n            \n\n\n            \n                styles\n                 @media (min-width: 768px) {\n    .menu-button {\n      display: none;\n      color:\"white !important\";\n    }\n  }\n\n  /* Hide complete menu on smaller screens */\n  @media (max-width: 767px) {\n    .menu-content {\n      display: none;\n    }\n  }\n\n  /* Show complete menu on larger screens */\n  @media (min-width: 768px) {\n    .menu-content {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 100%;\n    }\n    .menu-item {\n      margin: 5px 0;\n    }\n  }\n\n            \n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                    Private\n                                    Readonly\n                                changeDetectorRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Private\n                                    Readonly\n                                snackbar\n                            \n                            \n                                token\n                            \n                            \n                                userProfile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/header/header.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/header/header.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/header/header.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        changeDetectorRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/header/header.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/header/header.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        snackbar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/header/header.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Default value : localStorage.getItem('token')?.toString()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/header/header.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/header/header.component.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnInit, inject } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [\n    MatSnackBarModule,\n    RouterModule,\n    FormsModule,\n    MatButtonModule,\n    CommonModule,\n    MatIconModule,\n    MatMenuModule,\n    ReactiveFormsModule,\n    MatInputModule,\n  ],\n  templateUrl: './header.component.html',\n  styles: ` @media (min-width: 768px) {\n    .menu-button {\n      display: none;\n      color:\"white !important\";\n    }\n  }\n\n  /* Hide complete menu on smaller screens */\n  @media (max-width: 767px) {\n    .menu-content {\n      display: none;\n    }\n  }\n\n  /* Show complete menu on larger screens */\n  @media (min-width: 768px) {\n    .menu-content {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 100%;\n    }\n    .menu-item {\n      margin: 5px 0;\n    }\n  }\n`,\n})\nexport class HeaderComponent implements OnInit {\n  token = localStorage.getItem('token')?.toString();\n  private readonly authService = inject(AuthService);\n  private readonly snackbar = inject(MatSnackBar);\n  private readonly router = inject(Router);\n  private readonly changeDetectorRef = inject(ChangeDetectorRef);\n  userProfile: any;\n  ngOnInit(): void {\n    this.authService.userProfile$.subscribe({\n      next: (response) => {\n        this.userProfile = response;\n        this.changeDetectorRef.detectChanges();\n      },\n      error: (error) => {\n        console.error(error);\n      },\n    });\n  }\n\n  logout(): void {\n    this.authService.logout().subscribe({\n      next: () => {\n        this.authService._userProfileSubject.next(null);\n        localStorage.removeItem('token');\n        this.snackbar.open('Logout successful', 'Ok', {\n          duration: 2000,\n        });\n        this.changeDetectorRef.detectChanges();\n        this.router.navigateByUrl('/');\n      },\n      error: (error) => {\n        console.error('Error logging out:', error);\n        this.snackbar.open(\n          `Error in logout, please try sometimes later`,\n          'Ok',\n          {\n            duration: 2000,\n          }\n        );\n        this.changeDetectorRef.detectChanges();\n      },\n    });\n  }\n  \n\n\n}\n\n    \n\n    \n        \n  \n    \n      Safepassvault\n      \n        menu\n      \n    \n\n    \n      \n        \n          Products\n          \n            Plan and Pricing\n          \n          \n            API Documentation\n          \n          \n            Customer Support\n          \n          \n            Download\n          \n          \n            Get Started\n          \n          \n            Log In\n          \n        \n      \n\n      \n        \n          \n            admin_panel_settings\n            Administration\n          \n          \n            person\n            Profile\n          \n          \n            power_settings_new\n            Logout\n          \n        \n      \n    \n\n    \n    \n      \n        \n          list\n          Products\n        \n        \n          attach_money\n          Plan and Pricing\n        \n        \n          description\n          API Documentation\n        \n        \n          support_agent\n          Customer Support\n        \n        \n          download\n          Download\n        \n        \n          person_add\n          Get Started\n        \n        \n          login\n          Log In\n        \n      \n\n      \n        \n          admin_panel_settings\n          Administration\n        \n        \n          person\n          Profile\n        \n        \n          power_settings_new\n          Logout\n        \n      \n    \n\n    \n    \n      \n        lock_open\n        Password Generator\n      \n      \n        check_circle\n        Password Checker\n      \n      \n        lock\n        Password Vault\n      \n      \n        file_copy\n        File Storage\n      \n    \n  \n\n\n    \n\n    \n             @media (min-width: 768px) {\n    .menu-button {\n      display: none;\n      color:\"white !important\";\n    }\n  }\n\n  /* Hide complete menu on smaller screens */\n  @media (max-width: 767px) {\n    .menu-content {\n      display: none;\n    }\n  }\n\n  /* Show complete menu on larger screens */\n  @media (min-width: 768px) {\n    .menu-content {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 100%;\n    }\n    .menu-item {\n      margin: 5px 0;\n    }\n  }\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Safepassvault              menu                                      Products                      Plan and Pricing                                API Documentation                                Customer Support                                Download                                Get Started                                Log In                                                            admin_panel_settings            Administration                                person            Profile                                power_settings_new            Logout                                                            list          Products                          attach_money          Plan and Pricing                          description          API Documentation                          support_agent          Customer Support                          download          Download                          person_add          Get Started                          login          Log In                                      admin_panel_settings          Administration                          person          Profile                          power_settings_new          Logout                                        lock_open        Password Generator                    check_circle        Password Checker                    lock        Password Vault                    file_copy        File Storage            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdProof.html":{"url":"interfaces/IdProof.html","title":"interface - IdProof","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IdProof\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/id-proof/id-proof.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            createdBy\n                                        \n                                \n                                \n                                        \n                                            documentImageUrl\n                                        \n                                \n                                \n                                        \n                                            expiryDate\n                                        \n                                \n                                \n                                        \n                                            idNumber\n                                        \n                                \n                                \n                                        \n                                            idType\n                                        \n                                \n                                \n                                        \n                                            issueDate\n                                        \n                                \n                                \n                                        \n                                            issuedBy\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        documentImageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        documentImageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiryDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiryDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issuedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issuedBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, Component, inject, OnInit } from '@angular/core';\nimport { ProofIdService } from '../../services/proof-id.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { IdproofformComponent } from '../../dialog/idproofform/idproofform.component';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CommonModule } from '@angular/common';\nimport { CommonService } from '../../services/common.service';\nexport interface IdProof {\n  _id: string;\n  idType: string;\n  idNumber: string;\n  issuedBy: string;\n  issueDate: string;\n  expiryDate: string;\n  userId: string;\n  documentImageUrl: string;\n  createdAt: string;\n  updatedAt: string;\n  createdBy: string;\n}\n@Component({\n  selector: 'app-id-proof',\n  standalone: true,\n  imports:[MatButtonModule, MatIconModule, MatMenuModule, MatDialogModule, MatTableModule, MatSortModule, MatPaginatorModule, CommonModule],\n  templateUrl: './id-proof.component.html',\n  styleUrl: './id-proof.component.css'\n})\n\nexport class IdProofComponent implements OnInit {\n  displayedColumns: string[] = [\n    'idType', \n    'idNumber', \n    'issuedBy', \n    'issueDate', \n    'expiryDate', \n    'createdAt',    // Add this column\n    'createdBy',    // Add this column\n    'actions'\n  ];\n  dataSource!: MatTableDataSource;\n  readonly commonService = inject(CommonService)\n  constructor(private proofIdService: ProofIdService, private cdr: ChangeDetectorRef,\n    private dialog: MatDialog)\n   { }\n\nopenIdProofFormDialog(proof: any) {\n  const dialogRef = this.dialog.open(IdproofformComponent, {\n    width: '500px',\n    data: { proof: proof }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('Dialog closed');\n      });\n}\nperformAction(arg0: string) {\nthrow new Error('Method not implemented.');\n}\n  idProofService = inject(ProofIdService)\n  changeDetetorRef = inject(ChangeDetectorRef)\n\n  ngOnInit(): void {\n    this.idProofService.getProofIds().subscribe((response: any)=>{\n      this.dataSource = new MatTableDataSource(response.proofIds);\n      this.changeDetetorRef.detectChanges()\n    })\n  }\n\n  toggleSideBar(): void {\n    this.commonService.toggleSideBar();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IdProofComponent.html":{"url":"components/IdProofComponent.html","title":"component - IdProofComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IdProofComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/id-proof/id-proof.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-id-proof\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButtonModule\n                            MatIconModule\n                            MatMenuModule\n                            MatDialogModule\n                            MatTableModule\n                            MatSortModule\n                            MatPaginatorModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./id-proof.component.html\n            \n\n\n\n            \n                styleUrl\n                ./id-proof.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeDetetorRef\n                            \n                            \n                                    Readonly\n                                commonService\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                idProofService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openIdProofFormDialog\n                            \n                            \n                                performAction\n                            \n                            \n                                toggleSideBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(proofIdService: ProofIdService, cdr: ChangeDetectorRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/id-proof/id-proof.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        proofIdService\n                                                  \n                                                        \n                                                                        ProofIdService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/id-proof/id-proof.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openIdProofFormDialog\n                        \n                    \n                \n            \n            \n                \nopenIdProofFormDialog(proof: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/id-proof/id-proof.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                proof\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        performAction\n                        \n                    \n                \n            \n            \n                \nperformAction(arg0: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/id-proof/id-proof.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arg0\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideBar\n                        \n                    \n                \n            \n            \n                \ntoggleSideBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/id-proof/id-proof.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDetetorRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/id-proof/id-proof.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        commonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/id-proof/id-proof.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/id-proof/id-proof.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'idType', \n    'idNumber', \n    'issuedBy', \n    'issueDate', \n    'expiryDate', \n    'createdAt',    // Add this column\n    'createdBy',    // Add this column\n    'actions'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/id-proof/id-proof.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idProofService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProofIdService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/id-proof/id-proof.component.ts:63\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject, OnInit } from '@angular/core';\nimport { ProofIdService } from '../../services/proof-id.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { IdproofformComponent } from '../../dialog/idproofform/idproofform.component';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CommonModule } from '@angular/common';\nimport { CommonService } from '../../services/common.service';\nexport interface IdProof {\n  _id: string;\n  idType: string;\n  idNumber: string;\n  issuedBy: string;\n  issueDate: string;\n  expiryDate: string;\n  userId: string;\n  documentImageUrl: string;\n  createdAt: string;\n  updatedAt: string;\n  createdBy: string;\n}\n@Component({\n  selector: 'app-id-proof',\n  standalone: true,\n  imports:[MatButtonModule, MatIconModule, MatMenuModule, MatDialogModule, MatTableModule, MatSortModule, MatPaginatorModule, CommonModule],\n  templateUrl: './id-proof.component.html',\n  styleUrl: './id-proof.component.css'\n})\n\nexport class IdProofComponent implements OnInit {\n  displayedColumns: string[] = [\n    'idType', \n    'idNumber', \n    'issuedBy', \n    'issueDate', \n    'expiryDate', \n    'createdAt',    // Add this column\n    'createdBy',    // Add this column\n    'actions'\n  ];\n  dataSource!: MatTableDataSource;\n  readonly commonService = inject(CommonService)\n  constructor(private proofIdService: ProofIdService, private cdr: ChangeDetectorRef,\n    private dialog: MatDialog)\n   { }\n\nopenIdProofFormDialog(proof: any) {\n  const dialogRef = this.dialog.open(IdproofformComponent, {\n    width: '500px',\n    data: { proof: proof }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('Dialog closed');\n      });\n}\nperformAction(arg0: string) {\nthrow new Error('Method not implemented.');\n}\n  idProofService = inject(ProofIdService)\n  changeDetetorRef = inject(ChangeDetectorRef)\n\n  ngOnInit(): void {\n    this.idProofService.getProofIds().subscribe((response: any)=>{\n      this.dataSource = new MatTableDataSource(response.proofIds);\n      this.changeDetetorRef.detectChanges()\n    })\n  }\n\n  toggleSideBar(): void {\n    this.commonService.toggleSideBar();\n  }\n}\n    \n\n    \n        \n    \n      \n        \n          menu\n        \n        Identity Proof\n      \n        \n      \n      \n        \n        \n          \n            add_circle_outline\n          \n         \n        \n        \n    \n        \n        \n          \n            settings\n          \n          \n            Delete\n            Add to Favourites\n            Share\n            Export\n          \n        \n      \n    \n    \n    \n      \n        \n      \n          \n          \n            ID Type\n            {{ element.idType }}\n          \n      \n          \n          \n            ID Number\n            {{ element.idNumber }}\n          \n      \n          \n          \n            Issued By\n            {{ element.issuedBy }}\n          \n      \n          \n          \n            Issue Date\n            {{ element.issueDate | date }}\n          \n      \n          \n          \n            Expiry Date\n            {{ element.expiryDate | date }}\n          \n      \n          \n          \n            Created Date\n            {{ element.createdAt | date }}\n          \n      \n          \n          \n            Created By\n            {{ element.userId?.name }}\n          \n      \n          \n          \n            Actions\n            \n              Edit\n              Delete\n            \n          \n      \n          \n          \n      \n        \n      \n        \n    \n\n\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            menu                Identity Proof                                                                add_circle_outline                                                                             settings                                Delete            Add to Favourites            Share            Export                                                                                        ID Type            {{ element.idType }}                                                ID Number            {{ element.idNumber }}                                                Issued By            {{ element.issuedBy }}                                                Issue Date            {{ element.issueDate | date }}                                                Expiry Date            {{ element.expiryDate | date }}                                                Created Date            {{ element.createdAt | date }}                                                Created By            {{ element.userId?.name }}                                                Actions                          Edit              Delete                                                                                  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IdProofComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IdproofformComponent.html":{"url":"components/IdproofformComponent.html","title":"component - IdproofformComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IdproofformComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialog/idproofform/idproofform.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-idproofform\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            ReactiveFormsModule\n                            MatButtonModule\n                            MatToolbarModule\n                            MatFormFieldModule\n                            CommonModule\n                            MatInputModule\n                            MatAutocompleteModule\n                            MatDialogModule\n                            MatCheckboxModule\n                            MatChipsModule\n                            MatIconModule\n                            MatSelectModule\n                            MatOptionModule\n                            MatSnackBarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./idproofform.component.html\n            \n\n\n\n            \n                styleUrl\n                ./idproofform.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                fb\n                            \n                            \n                                idProofForm\n                            \n                            \n                                idTypes\n                            \n                            \n                                    Private\n                                    Readonly\n                                matSnackBar\n                            \n                            \n                                    Private\n                                    Readonly\n                                proofIdService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onIdTypeChange\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dialog/idproofform/idproofform.component.ts:59\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onIdTypeChange\n                        \n                    \n                \n            \n            \n                \nonIdTypeChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/idproofform/idproofform.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/idproofform/idproofform.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/idproofform/idproofform.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idProofForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/idproofform/idproofform.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'AadharCard',\n    'PANCard',\n    'Passport',\n    'DriverLicense',\n    'SocialSecurity',\n    'Other',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/idproofform/idproofform.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        matSnackBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/idproofform/idproofform.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        proofIdService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProofIdService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/idproofform/idproofform.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\nimport { ProofIdService } from '../../services/proof-id.service';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-idproofform',\n  standalone: true,\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    CommonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatIconModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatSnackBarModule,\n  ],\n  templateUrl: './idproofform.component.html',\n  styleUrl: './idproofform.component.css',\n})\nexport class IdproofformComponent {\n  idProofForm: FormGroup;\n  private readonly fb = inject(FormBuilder);\n  private readonly proofIdService = inject(ProofIdService);\n  private readonly matSnackBar = inject(MatSnackBar);\n  idTypes: string[] = [\n    'AadharCard',\n    'PANCard',\n    'Passport',\n    'DriverLicense',\n    'SocialSecurity',\n    'Other',\n  ];\n\n  constructor() {\n    this.idProofForm = this.fb.group({\n      idType: ['', Validators.required],\n      idNumber: ['', Validators.required],\n      issueDate: [''],\n      expiryDate: [''],\n      documentImageUrl: [''],\n      issuedBy: ['', Validators.required],\n    });\n    this.onIdTypeChange();\n  }\n\n  onIdTypeChange() {\n    this.idProofForm.get('idType')?.valueChanges.subscribe((idType) => {\n      const idNumberControl = this.idProofForm.get('idNumber');\n\n      if (idType === 'AadharCard') {\n        idNumberControl?.setValidators([\n          Validators.required,\n          Validators.pattern('^[0-9]{12}$'),\n        ]);\n      } else if (idType === 'PANCard') {\n        idNumberControl?.setValidators([\n          Validators.required,\n          Validators.pattern('^[A-Z]{5}[0-9]{4}[A-Z]{1}$'),\n        ]);\n      } else {\n        idNumberControl?.setValidators([Validators.required]);\n      }\n\n      idNumberControl?.updateValueAndValidity();\n    });\n  }\n\n  onSubmit(): void {\n    if (this.idProofForm.valid) {\n      this.proofIdService\n        .createProofId(this.idProofForm.value)\n        .pipe()\n        .subscribe({\n          next: (response) => {\n            console.log('ID proof created', response);\n            this.matSnackBar.open('ID proof created successfully', 'OK', {\n              duration: 2000,\n            });\n          },\n          error: (error) => {\n            console.error('Error creating ID proof', error);\n            this.matSnackBar.open('Error creating ID proof', 'OK', {\n              duration: 2000,\n            });\n          },\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n  Add ID Proof\n\n\n\n  \n    \n      ID Type\n      \n        \n          {{ type }}\n        \n      \n    \n\n    \n      ID Number\n      \n      12 digit Aadhar number\n      Format: ABCDE1234F\n    \n\n    \n      Issue Date\n      \n    \n\n    \n      Expiry Date\n      \n    \n\n    \n      Document Image URL\n      \n    \n\n    \n      Issued By\n       \n    \n\n  \n\n\n\n  Cancel\n  Save ID Proof\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add ID Proof            ID Type                        {{ type }}                            ID Number            12 digit Aadhar number      Format: ABCDE1234F              Issue Date                    Expiry Date                    Document Image URL                    Issued By               Cancel  Save ID Proof'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IdproofformComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndexComponent.html":{"url":"components/IndexComponent.html","title":"component - IndexComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IndexComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/index/index.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-index\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                            RouterModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./index.component.html\n            \n\n\n\n            \n                styleUrl\n                ./index.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                router\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/index/index.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/index/index.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/index/index.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Default value : localStorage.getItem('token')\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/index/index.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n  RouterModule,\n  RouterOutlet,\n} from '@angular/router';\nimport { environment } from '../../../environments/environment';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-index',\n  standalone: true,\n  imports: [RouterOutlet, RouterModule, MatButtonModule],\n  templateUrl: './index.component.html',\n  styleUrl: './index.component.css',\n})\nexport class IndexComponent implements OnInit {\n  router = inject(Router);\n  activate = inject(ActivatedRoute);\n  token = localStorage.getItem('token');\n\n  ngOnInit(): void {\n    console.log('ff', environment);\n    \n    if (!this.token && environment.isElectron) {\n      this.router.navigateByUrl('/auth/login');\n    } else if (this.token) {\n      this.router.navigateByUrl('/dashboard/passwords');\n    }\n  }\n}\n\n    \n\n    \n        \n    \n      \n        \n          Safepassvault The Password Manager Trusted by Millions\n        \n        \n          Safepassvault is the best password manager for securely storing,\n          generating, and sharing passwords across all of your devices. managing,\n          and sharing sensitive online data such as passwords, passkeys, credit\n          cards, and more. Safepassvault is the best password manager for securely\n          storing, managing, and sharing sensitive online data such as passwords,\n          passkeys, credit cards, and more. With Safepassvault, you can finally take\n          control of your online security and protect your digital identity. By\n          using Safepassvault, you can generate strong and unique passwords, autofill\n          login credentials, and securely share sensitive information with others.\n        \n        \n          Get Started\n        \n      \n      \n        \n      \n    \n    \n      \n        Try Safepassvault Services Products\n      \n      \n        \n          Password Vault\n          Store and organize your passwords securely\n          \n            View Vault\n          \n        \n        \n          Security Dashboard\n          Monitor and improve your password security\n          \n            View Dashboard\n          \n        \n  \n  \n        \n          File Storage\n          Securely store and manage your files\n          \n            Manage Files\n          \n        \n        \n          Password Generator\n          \n            Generate strong & unique passwords for accounts.\n          \n          \n            Generate Password\n          \n        \n        \n          Password Checker\n          Check the strength and security of passwords\n          \n            Check Password\n          \n        \n  \n        \n          Passwordless Login\n          Authenticate without password using other methods\n          \n            Go Passwordless\n          \n        \n      \n    \n    \n      \n        Latest Articles on Safepassvault Features\n      \n      \n        \n          Generate Unbreakable Passwords\n          \n            Safepassvault crafts complex passwords using a mix of characters,\n            numbers, and symbols, making them virtually impossible to crack.\n          \n          Security • 5 Min Read\n        \n        \n          \n            Effortless Logins with Autofill\n          \n          \n            Safepassvault integrates seamlessly with your browser and mobile devices.\n            Autofill and auto-login features save you time and frustration.\n          \n          Convenience • 4 Min Read\n        \n        \n          \n            Secure Password Sharing Made Easy\n          \n          \n            Safepassvault's secure sharing mechanism allows you to grant access with\n            granular controls, ensuring complete security and peace of mind.\n          \n          Collaboration • 6 Min Read\n        \n        \n          Advanced Security Features\n          Advanced security features: Two-Factor Authentication, Password Breach\n            Alerts, Password Analyzer, and Secure Notes ensure comprehensive protection\n          Security • 7 Min Read\n        \n        \n          \n            Unparalleled Security for Your Passwords\n          \n          \n            Safepassvault uses cutting-edge encryption protocols and stringent\n            security measures. With end-to-end encryption, only you have access to\n            your information.\n          \n          Privacy • 5 Min Read\n        \n      \n    \n    \n      Benefits of using Safepassvaults\n      \n        \n          Protect your online identity\n          \n            Safeguard your personal information with advanced encryption and\n            security features.\n          \n        \n        \n          Save time and reduce stress\n          \n            Effortlessly manage and autofill passwords, eliminating the need to\n            remember multiple credentials.\n          \n        \n        \n          Improve your online security\n          \n            Identify and strengthen weak passwords with our password analyzer.\n          \n        \n        \n          Store and share your files\n          \n            Securely store and manage your files, and easily share them with\n            others when needed.\n          \n        \n        \n          \n            Access your passwords from anywhere\n          \n          \n            Sync your passwords across all devices and platforms for seamless\n            access.\n          \n        \n      \n    \n  \n    \n      Testimonials\n      \n        \n          \n            \"This password manager has been a game-changer for me. I no longer\n            have to worry about remembering multiple passwords!\"\n          \n          \n            &#9733;\n            &#9733;\n            &#9733;\n            &#9734;\n          \n          - John Doe\n        \n        \n          \n            \"I was skeptical at first, but this password manager has exceeded my\n            expectations. The security features are top-notch!\"\n          \n          \n            &#9733;\n            &#9733;\n            &#9733;\n            &#9733;\n            &#9733;\n          \n          - Jane Smith\n        \n        \n          \n            \"Easy to use and effective. Best decision I made for my online\n            security!\"\n          \n          \n            &#9733;\n            &#9733;\n            &#9733;\n            &#9734;\n          \n          - Sarah Johnson\n        \n        \n          \n            \"Fantastic tool! I feel much safer knowing my passwords are secure.\"\n          \n          \n            &#9733;\n            &#9733;\n            &#9733;\n          \n  \n          - Michael Brown\n        \n        \n          \"Highly recommended! Simplifies my digital life.\"\n          \n            &#9733;\n            &#9733;\n            &#9733;\n          \n          - Emily Davis\n        \n      \n    \n  \n  \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Safepassvault The Password Manager Trusted by Millions                          Safepassvault is the best password manager for securely storing,          generating, and sharing passwords across all of your devices. managing,          and sharing sensitive online data such as passwords, passkeys, credit          cards, and more. Safepassvault is the best password manager for securely          storing, managing, and sharing sensitive online data such as passwords,          passkeys, credit cards, and more. With Safepassvault, you can finally take          control of your online security and protect your digital identity. By          using Safepassvault, you can generate strong and unique passwords, autofill          login credentials, and securely share sensitive information with others.                          Get Started                                                        Try Safepassvault Services Products                              Password Vault          Store and organize your passwords securely                      View Vault                                    Security Dashboard          Monitor and improve your password security                      View Dashboard                                        File Storage          Securely store and manage your files                      Manage Files                                    Password Generator                      Generate strong & unique passwords for accounts.                                Generate Password                                    Password Checker          Check the strength and security of passwords                      Check Password                                      Passwordless Login          Authenticate without password using other methods                      Go Passwordless                                              Latest Articles on Safepassvault Features                              Generate Unbreakable Passwords                      Safepassvault crafts complex passwords using a mix of characters,            numbers, and symbols, making them virtually impossible to crack.                    Security • 5 Min Read                                      Effortless Logins with Autofill                                Safepassvault integrates seamlessly with your browser and mobile devices.            Autofill and auto-login features save you time and frustration.                    Convenience • 4 Min Read                                      Secure Password Sharing Made Easy                                Safepassvault\\'s secure sharing mechanism allows you to grant access with            granular controls, ensuring complete security and peace of mind.                    Collaboration • 6 Min Read                          Advanced Security Features          Advanced security features: Two-Factor Authentication, Password Breach            Alerts, Password Analyzer, and Secure Notes ensure comprehensive protection          Security • 7 Min Read                                      Unparalleled Security for Your Passwords                                Safepassvault uses cutting-edge encryption protocols and stringent            security measures. With end-to-end encryption, only you have access to            your information.                    Privacy • 5 Min Read                            Benefits of using Safepassvaults                        Protect your online identity                      Safeguard your personal information with advanced encryption and            security features.                                    Save time and reduce stress                      Effortlessly manage and autofill passwords, eliminating the need to            remember multiple credentials.                                    Improve your online security                      Identify and strengthen weak passwords with our password analyzer.                                    Store and share your files                      Securely store and manage your files, and easily share them with            others when needed.                                                Access your passwords from anywhere                                Sync your passwords across all devices and platforms for seamless            access.                                        Testimonials                                    \"This password manager has been a game-changer for me. I no longer            have to worry about remembering multiple passwords!\"                                ★            ★            ★            ☆                    - John Doe                                      \"I was skeptical at first, but this password manager has exceeded my            expectations. The security features are top-notch!\"                                ★            ★            ★            ★            ★                    - Jane Smith                                      \"Easy to use and effective. Best decision I made for my online            security!\"                                ★            ★            ★            ☆                    - Sarah Johnson                                      \"Fantastic tool! I feel much safer knowing my passwords are secure.\"                                ★            ★            ★                      - Michael Brown                          \"Highly recommended! Simplifies my digital life.\"                      ★            ★            ★                    - Emily Davis                            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IndexComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvitationAcceptComponent.html":{"url":"components/InvitationAcceptComponent.html","title":"component - InvitationAcceptComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InvitationAcceptComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/invitation-accept/invitation-accept.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-invitation-accept\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatStepperModule\n                            MatButtonModule\n                            MatIconModule\n                            MatCardModule\n                            MatInputModule\n                            MatFormFieldModule\n                            MatSelectModule\n                            ReactiveFormsModule\n                            FormsModule\n                            MatSnackBarModule\n                \n            \n\n            \n                styleUrls\n                ./invitation-accept.component.css\n            \n\n\n\n            \n                templateUrl\n                ./invitation-accept.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                emailForm\n                            \n                            \n                                invitationId\n                            \n                            \n                                organizationServie\n                            \n                            \n                                passwordForm\n                            \n                            \n                                snacBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmitEmail\n                            \n                            \n                                onSubmitPassword\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/invitation-accept/invitation-accept.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/invitation-accept/invitation-accept.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmitEmail\n                        \n                    \n                \n            \n            \n                \nonSubmitEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/invitation-accept/invitation-accept.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmitPassword\n                        \n                    \n                \n            \n            \n                \nonSubmitPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/invitation-accept/invitation-accept.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/invitation-accept/invitation-accept.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { mismatch: boolean; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/invitation-accept/invitation-accept.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/invitation-accept/invitation-accept.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invitationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/invitation-accept/invitation-accept.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organizationServie\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrganizationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/invitation-accept/invitation-accept.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/invitation-accept/invitation-accept.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snacBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/invitation-accept/invitation-accept.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatStepper, MatStepperModule } from '@angular/material/stepper';\nimport { ActivatedRoute } from '@angular/router';\nimport { OrganizationService } from '../../services/organization.service';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-invitation-accept',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatStepperModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    ReactiveFormsModule, \n    FormsModule,\n    MatSnackBarModule\n  ],\n  templateUrl: './invitation-accept.component.html',\n  styleUrls: ['./invitation-accept.component.css']\n})\nexport class InvitationAcceptComponent implements OnInit {\n  passwordForm: FormGroup;\n  emailForm: FormGroup;\n  invitationId: any;\n  organizationServie = inject(OrganizationService)\nsnacBar = inject(MatSnackBar)\nauthService = inject(AuthService)\n\n  constructor(private fb: FormBuilder, private route: ActivatedRoute) {\n    this.passwordForm = this.fb.group({\n      email: [''], \n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    }, { validator: this.passwordMatchValidator });\n\n    this.emailForm = this.fb.group({\n      OTP: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.invitationId = params['id']; // Get the invitation ID from the URL\n    });\n    // Retrieve and process invitation data from route if needed\n  }\n\n  passwordMatchValidator(formGroup: FormGroup) {\n    const password = formGroup?.get('password')?.value;\n    const confirmPassword = formGroup.get('confirmPassword')?.value;\n    return password === confirmPassword ? null : { mismatch: true };\n  }\n\n  onSubmitPassword(): void {\n    if (this.passwordForm.valid) {\n      const password = this.passwordForm.get('password')?.value;\n      const email = this.passwordForm.get('email')?.value;\n      this.organizationServie.updateInvitationStatus(this.invitationId, password, email).subscribe((res)=>{\n        console.log(res);\n        this.snacBar.open('Invitation Accepted successfully, Please verify email')\n        \n      })\n    }\n\n  }\n\n  onSubmitEmail(): void {\n    const payload = {\n      email: this.passwordForm.get('email')?.value, \n      confirmationCode:this.emailForm.value.OTP\n    }\n    this.authService.emailVerification(payload).subscribe(\n      (response) => {\n        localStorage.setItem('token', response.token);\n        this.snacBar.open('Email Verified, Add the security question or Skip these Step', 'close', {\n          duration: 3000,\n        });\n      },\n      (eror: any) => {\n        console.error('error', eror);\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n      \n        Create New Password\n        \n            \n    \n            Your email\n            \n            \n              Email is required\n            \n            \n              Enter a valid email\n            \n          \n          \n            Your password\n            \n            \n              Password is required\n            \n          \n          \n            Confirm password\n            \n            \n              Confirm Password is required\n            \n            \n              Passwords do not match\n            \n          \n        \n        \n          Set Password\n        \n      \n    \n  \n    \n    \n      \n        Confirm Your Email\n        \n          \n            Your OTP\n            \n            \n              Email is required\n            \n            \n              Enter a valid email\n            \n          \n        \n        \n          Confirm Email\n        \n      \n    \n  \n  \n\n    \n\n    \n                \n                    ./invitation-accept.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Create New Password                                    Your email                                      Email is required                                      Enter a valid email                                            Your password                                      Password is required                                            Confirm password                                      Confirm Password is required                                      Passwords do not match                                                Set Password                                          Confirm Your Email                              Your OTP                                      Email is required                                      Enter a valid email                                                Confirm Email                      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvitationAcceptComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            ReactiveFormsModule\n                            MatIconModule\n                            MatSnackBarModule\n                            RouterModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatButtonModule\n                            CommonModule\n                            MatStepperModule\n                            MatProgressSpinnerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                auth\n                            \n                            \n                                    Readonly\n                                changeDetectorRef\n                            \n                            \n                                hide\n                            \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                            \n                                mfaForm\n                            \n                            \n                                mfaMethod\n                            \n                            \n                                    Readonly\n                                route\n                            \n                            \n                                    Readonly\n                                router\n                            \n                            \n                                showMfaStep\n                            \n                            \n                                    Readonly\n                                snackbar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickEvent\n                        \n                    \n                \n            \n            \n                \nclickEvent(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator(control: FormControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        FormControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        changeDetectorRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    username: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required, this.passwordValidator])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mfaForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    totpCode: new FormControl(''),\n    smsCode: new FormControl(''),\n    emailCode: new FormControl('')\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mfaMethod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMfaStep\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        snackbar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnInit, inject, signal } from '@angular/core';\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonModule } from '@angular/common';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [FormsModule, ReactiveFormsModule, MatIconModule, MatSnackBarModule, RouterModule, MatFormFieldModule, MatInputModule, MatButtonModule, CommonModule, MatStepperModule, MatProgressSpinnerModule],\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n  readonly snackbar = inject(MatSnackBar)\n  readonly router = inject(Router)\n  readonly route = inject(ActivatedRoute);\n  readonly changeDetectorRef = inject(ChangeDetectorRef)\n  readonly auth = inject(AuthService)\n  hide = signal(true);\n  loading = false;\n  loginForm: FormGroup = new FormGroup({\n    username: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required, this.passwordValidator])\n  });\n  mfaForm = new FormGroup({\n    totpCode: new FormControl(''),\n    smsCode: new FormControl(''),\n    emailCode: new FormControl('')\n  });\n  mfaMethod: any;\n  showMfaStep: boolean= false;;\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((res: any) => {\n      this.loginForm.patchValue(res);\n    })\n  }\n\n  \n  passwordValidator(control: FormControl): { [key: string]: boolean } | null {\n    const password = control.value;\n    if (!password) {\n      return null;\n    }\n\n    // Define your password validation logic here\n    // For example, check if password length is at least 8 characters\n    const isValid = password.length >= 8;\n    return isValid ? null : { invalidPassword: true };\n  }\n\n  clickEvent(event: MouseEvent) {\n    this.hide.set(!this.hide());\n    event.stopPropagation();\n  }\n  onSubmit(): void  {\n    if (this.loginForm.valid) {\n      this.loading = true;\n      this.auth.login(this.loginForm.value).subscribe((response) => {\n        if (response.mfaRequired) {\n          this.mfaMethod = response.mfaMethod; \n          this.router.navigateByUrl(`/auth/mfa-verification?mfaMethod=${response.mfaMethod}&email=${this.loginForm.value.username}`)\n\n        } else {\n          localStorage.setItem('token', response.token);\n          this.auth.getProfile().subscribe((response)=>{\n            this.snackbar.open('Login successful', 'close', {\n              duration: 2000,\n            }); // Assuming snackbar implementation\n            this.router.navigate(['/dashboard/passwords']);\n          })\n        }\n        this.loading = false;\n        this.changeDetectorRef.detectChanges()\n      \n       \n      }, error => {\n        this.loading = false;\n        console.error('Error logging in:', error);\n        this.changeDetectorRef.detectChanges()\n\n        this.snackbar.open('Login failed: ' + error.error.message, 'close');\n\n      })\n    }\n  }\n}\n\n    \n\n    \n        \n\n      \n        \n        Login with your account\n\n        \n        \n          \n          \n            Username is required\n          \n        \n\n        \n        \n          \n          \n            {{ hide() ? \"visibility_off\" : \"visibility\" }}\n          \n        \n\n        \n        \n          \n            \n              Don't have an account yet?\n              signup now\n            \n          \n          \n          \n          \n          \n          \n            Login Now\n          \n\n          \n            \n              Forgot your password?\n              Forgot Password?\n            \n          \n        \n      \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Login with your account                                                Username is required                                                                  {{ hide() ? \"visibility_off\" : \"visibility\" }}                                                                      Don\\'t have an account yet?              signup now                                                                                    Login Now                                              Forgot your password?              Forgot Password?                                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MfaSettingComponent.html":{"url":"components/MfaSettingComponent.html","title":"component - MfaSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MfaSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/profile/mfa-setting/mfa-setting.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mfa-setting\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatFormFieldModule\n                            MatInputModule\n                            CommonModule\n                            MatSelectModule\n                            MatOptionModule\n                            ReactiveFormsModule\n                            FormsModule\n                            MatButtonModule\n                            MatSliderModule\n                            MatSlideToggleModule\n                            MatIconModule\n                            MatSnackBarModule\n                \n            \n\n            \n                styleUrls\n                ./mfa-setting.component.css\n            \n\n\n\n            \n                templateUrl\n                ./mfa-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                authService\n                            \n                            \n                                    Readonly\n                                commonService\n                            \n                            \n                                mfaForm\n                            \n                            \n                                    Readonly\n                                snackBar\n                            \n                            \n                                userProfile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableAllMfaFields\n                            \n                            \n                                onSubmit\n                            \n                            \n                                populateFormWithUserProfile\n                            \n                            \n                                selectMFAMethod\n                            \n                            \n                                toggleMFA\n                            \n                            \n                                toggleSideBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/profile/mfa-setting/mfa-setting.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disableAllMfaFields\n                        \n                    \n                \n            \n            \n                \ndisableAllMfaFields()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/mfa-setting/mfa-setting.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/mfa-setting/mfa-setting.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        populateFormWithUserProfile\n                        \n                    \n                \n            \n            \n                \npopulateFormWithUserProfile(profile: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/mfa-setting/mfa-setting.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                profile\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMFAMethod\n                        \n                    \n                \n            \n            \n                \nselectMFAMethod(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/mfa-setting/mfa-setting.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMFA\n                        \n                    \n                \n            \n            \n                \ntoggleMFA(enabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/mfa-setting/mfa-setting.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                enabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideBar\n                        \n                    \n                \n            \n            \n                \ntoggleSideBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/mfa-setting/mfa-setting.component.ts:134\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/mfa-setting/mfa-setting.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        commonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/mfa-setting/mfa-setting.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mfaForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/mfa-setting/mfa-setting.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/mfa-setting/mfa-setting.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/mfa-setting/mfa-setting.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, inject, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  ReactiveFormsModule,\n  FormsModule,\n  FormControl,\n} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { AuthService } from '../../../services/auth.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonService } from '../../../services/common.service';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-mfa-setting',\n  standalone: true,\n  imports: [\n    MatFormFieldModule,\n    MatInputModule,\n    CommonModule,\n    MatSelectModule,\n    MatOptionModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatButtonModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    MatSnackBarModule\n  ],\n  templateUrl: './mfa-setting.component.html',\n  styleUrls: ['./mfa-setting.component.css'],\n})\nexport class MfaSettingComponent {\n  mfaForm: FormGroup;\n  userProfile: any;\n  readonly snackBar = inject(MatSnackBar);\n  readonly commonService = inject(CommonService);\n  readonly authService = inject(AuthService);\n\n  constructor(private fb: FormBuilder) {\n    this.mfaForm = this.fb.group({\n      mfaEnabled: [false],\n      mfaMethod: [{ value: '', disabled: true }],\n      totpSecret: [{ value: '', disabled: true }],\n      smsPhoneNumber: [{ value: '', disabled: true }],\n      emailAddress: [{ value: '', disabled: true }],\n    });\n\n    this.authService.userProfile$.subscribe((userProfile) => {\n      this.userProfile = userProfile;\n      this.populateFormWithUserProfile(userProfile);\n    });\n  }\n\n  populateFormWithUserProfile(profile: any): void {\n    this.mfaForm.patchValue({\n      mfaEnabled: profile.mfaEnabled || false,\n      mfaMethod: profile.mfaMethod || '',\n      totpSecret: profile.mfaMethod === 'totp' ? profile.totpSecret || '' : '',\n      smsPhoneNumber:\n        profile.mfaMethod === 'sms' ? profile.smsPhoneNumber || '' : '',\n      emailAddress:\n        profile.mfaMethod === 'email' ? profile.emailAddress || '' : '',\n    });\n\n    this.toggleMFA(profile.mfaEnabled);\n    this.selectMFAMethod({ value: profile.mfaMethod });\n  }\n\n  toggleMFA(enabled: boolean): void {\n    const mfaMethodControl = this.mfaForm.get('mfaMethod');\n    if (enabled) {\n      mfaMethodControl?.enable();\n    } else {\n      mfaMethodControl?.disable();\n      this.disableAllMfaFields();\n    }\n  }\n\n  selectMFAMethod(event: any): void {\n    const method = event.value;\n    this.disableAllMfaFields();\n\n    if (method === 'totp') {\n      this.mfaForm.get('totpSecret')?.enable();\n    } else if (method === 'sms') {\n      this.mfaForm.get('smsPhoneNumber')?.enable();\n      this.mfaForm.get('smsPhoneNumber')?.setValue(this.userProfile.phone);\n    } else if (method === 'email') {\n      this.mfaForm.get('emailAddress')?.enable();\n      console.log('email', this.userProfile.email);\n      this.mfaForm.get('emailAddress')?.setValue(this.userProfile.email);\n    }\n  }\n\n  disableAllMfaFields(): void {\n    this.mfaForm.get('totpSecret')?.disable();\n    this.mfaForm.get('smsPhoneNumber')?.disable();\n    this.mfaForm.get('emailAddress')?.disable();\n  }\n\n  onSubmit() {\n    if (this.mfaForm.valid) {\n      this.authService.updateMfaSettings(this.mfaForm.value).subscribe({\n        next: (response) => {\n          this.snackBar.open('MFA settings updated successfully:', 'Ok', {\n            duration: 3000,\n          });\n        },\n        error: (error) => {\n          this.snackBar.open(\n            'Failed to update MFA settings. Please try again later.',\n            'Ok',\n            {\n              duration: 3000,\n              }\n              \n          )\n          console.error('Error updating MFA settings:', error);\n        },\n      });\n    }\n  }\n\n  toggleSideBar(): void {\n    this.commonService.toggleProfileSideBar();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            menu\n          \n        MFA Settings\n\n    \n    Save Changes\n\n\n    \n        Enable MFA\n    \n\n    \n        \n            Select MFA Method\n            \n                Time-Based One-Time Password (TOTP)\n                SMS Authentication\n                Email Authentication\n                Duo Authentication\n                Fingerprint Authentication\n                Face Recognition Authentication -->\n                Security Key (FIDO2/U2F) -->\n            \n        \n\n        \n            Enter TOTP Secret\n            \n        \n\n        \n            Phone Number\n            \n        \n\n        \n            Email Address\n            \n        \n\n        \n            Duo Authentication Setup\n            Follow these steps to set up Duo Authentication:\n            \n                Log in to your Duo Admin Panel.\n                Navigate to the \"Applications\" section and click \"Protect an Application.\"\n                Select the appropriate application from the list and follow the instructions to configure it.\n                Copy the integration key, secret key, and API hostname provided.\n                Enter these details into the Duo setup form in your application settings.\n                Save your changes and test the Duo integration to ensure it's working correctly.\n            \n        \n\n        \n            Fingerprint Authentication Setup\n            Follow these steps to set up Fingerprint Authentication:\n            \n                Ensure your device has a fingerprint scanner and necessary drivers installed.\n                Go to the \"Security\" settings on your device and register your fingerprint.\n                In your application settings, enable Fingerprint Authentication and configure it as needed.\n                Follow any additional instructions provided by your application for verification.\n                Test the setup to ensure it recognizes your fingerprint accurately.\n            \n        \n\n        \n            Face Recognition Authentication Setup\n            Follow these steps to set up Face Recognition Authentication:\n            \n                Ensure your device has a camera that supports face recognition.\n                Go to the \"Security\" settings on your device and set up Face Recognition.\n                In your application settings, enable Face Recognition Authentication and follow the setup instructions.\n                Complete any required configuration and calibration steps.\n                Test the face recognition feature to ensure it functions correctly.\n            \n        \n\n        \n            Security Key (FIDO2/U2F) Setup\n            Follow these steps to set up a Security Key:\n            \n                Plug in your FIDO2/U2F security key into a USB port or connect it via Bluetooth.\n                Go to the \"Security\" settings in your application.\n                Select \"Add Security Key\" and follow the instructions to register your key.\n                Perform any necessary actions on the security key, such as pressing a button or touching the device.\n                Verify the setup by testing the security key with your application.\n            \n         -->\n    \n\n\n    \n\n    \n                \n                    ./mfa-setting.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        menu                  MFA Settings        Save Changes            Enable MFA                            Select MFA Method                            Time-Based One-Time Password (TOTP)                SMS Authentication                Email Authentication                Duo Authentication                Fingerprint Authentication                Face Recognition Authentication -->                Security Key (FIDO2/U2F) -->                                        Enter TOTP Secret                                        Phone Number                                        Email Address                                        Duo Authentication Setup            Follow these steps to set up Duo Authentication:                            Log in to your Duo Admin Panel.                Navigate to the \"Applications\" section and click \"Protect an Application.\"                Select the appropriate application from the list and follow the instructions to configure it.                Copy the integration key, secret key, and API hostname provided.                Enter these details into the Duo setup form in your application settings.                Save your changes and test the Duo integration to ensure it\\'s working correctly.                                        Fingerprint Authentication Setup            Follow these steps to set up Fingerprint Authentication:                            Ensure your device has a fingerprint scanner and necessary drivers installed.                Go to the \"Security\" settings on your device and register your fingerprint.                In your application settings, enable Fingerprint Authentication and configure it as needed.                Follow any additional instructions provided by your application for verification.                Test the setup to ensure it recognizes your fingerprint accurately.                                        Face Recognition Authentication Setup            Follow these steps to set up Face Recognition Authentication:                            Ensure your device has a camera that supports face recognition.                Go to the \"Security\" settings on your device and set up Face Recognition.                In your application settings, enable Face Recognition Authentication and follow the setup instructions.                Complete any required configuration and calibration steps.                Test the face recognition feature to ensure it functions correctly.                                        Security Key (FIDO2/U2F) Setup            Follow these steps to set up a Security Key:                            Plug in your FIDO2/U2F security key into a USB port or connect it via Bluetooth.                Go to the \"Security\" settings in your application.                Select \"Add Security Key\" and follow the instructions to register your key.                Perform any necessary actions on the security key, such as pressing a button or touching the device.                Verify the setup by testing the security key with your application.                     -->    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MfaSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MfaVerificationComponent.html":{"url":"components/MfaVerificationComponent.html","title":"component - MfaVerificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MfaVerificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/mfa-verification/mfa-verification.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mfa-verification\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatFormFieldModule\n                            ReactiveFormsModule\n                            FormsModule\n                            MatInputModule\n                            MatButtonModule\n                            CommonModule\n                            MatSnackBarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./mfa-verification.component.html\n            \n\n\n\n            \n                styleUrl\n                ./mfa-verification.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activateRoute\n                            \n                            \n                                auth\n                            \n                            \n                                hide\n                            \n                            \n                                mfaForm\n                            \n                            \n                                mfaMethod\n                            \n                            \n                                router\n                            \n                            \n                                snackbar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onMfaSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/mfa-verification/mfa-verification.component.ts:34\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onMfaSubmit\n                        \n                    \n                \n            \n            \n                \nonMfaSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/mfa-verification/mfa-verification.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activateRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/mfa-verification/mfa-verification.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/mfa-verification/mfa-verification.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/mfa-verification/mfa-verification.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mfaForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    totpCode: new FormControl(''),\n    smsCode: new FormControl(''),\n    emailCode: new FormControl('')\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/mfa-verification/mfa-verification.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mfaMethod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'email'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/mfa-verification/mfa-verification.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/mfa-verification/mfa-verification.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snackbar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/mfa-verification/mfa-verification.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, signal } from '@angular/core';\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { AuthService } from '../../services/auth.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-mfa-verification',\n  standalone: true,\n  imports: [\n    MatFormFieldModule, ReactiveFormsModule, FormsModule, MatInputModule,\n    MatButtonModule, CommonModule, MatSnackBarModule\n\n  ],\n  templateUrl: './mfa-verification.component.html',\n  styleUrl: './mfa-verification.component.css'\n})\nexport class MfaVerificationComponent {\n  auth = inject(AuthService)\n  activateRoute = inject(ActivatedRoute)\n  router= inject(Router);\n  snackbar = inject(MatSnackBar)\n  mfaMethod: string = 'email';\n  hide = signal(true);\n  mfaForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    totpCode: new FormControl(''),\n    smsCode: new FormControl(''),\n    emailCode: new FormControl('')\n  });\n  constructor() { \n    this.activateRoute.queryParams.subscribe(params => {\n      this.mfaMethod = params['mfaMethod'];\n      this.mfaForm.controls.email.setValue(params[`email`])\n      });\n  }\n\n  onMfaSubmit() {\n    if (this.mfaForm.valid) {\n      const mfaData = {\n        method: this.mfaMethod,\n        ...this.mfaForm.value\n      };\n\n      this.auth.verifyMFA(mfaData).subscribe(response => {\n        if (response.success) {\n          localStorage.setItem('token', response.token);\n          this.snackbar.open('MFA verification successful', 'Dismiss', {\n            duration: 2000,\n            });\n\n          this.auth.getProfile().subscribe((res)=>{\n         \n            this.router.navigate(['/dashboard/passwords']);\n          })\n        } else {\n          this.snackbar.open('MFA verification failed', 'Dismiss', {\n            duration: 2000,\n            });\n          console.error('MFA verification failed');\n        }\n      }, error => {\n        console.error('MFA verification error', error);\n      });\n    }\n  }\n}\n\n\n\n\n    \n\n    \n        \n\n  \n\n    \n    MFA Verification\n  \n\n  \n    \n    \n      TOTP code is required\n    \n  \n\n  \n    \n    \n      SMS code is required\n    \n  \n\n  \n    \n    \n      Email code is required\n    \n  \n\n  \n\n        \n        \n        verify Login\n      \n      \n   \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          MFA Verification                  TOTP code is required                      SMS code is required                      Email code is required                                verify Login                   '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MfaVerificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoteService.html":{"url":"injectables/NoteService.html","title":"injectable - NoteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/note.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToFavorites\n                            \n                            \n                                createNote\n                            \n                            \n                                deleteNote\n                            \n                            \n                                exportNotesAsCsv\n                            \n                            \n                                getNoteById\n                            \n                            \n                                getNotes\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                sharePassword\n                            \n                            \n                                updateNote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/note.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToFavorites\n                        \n                    \n                \n            \n            \n                \naddToFavorites(noteId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/note.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                noteId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNote\n                        \n                    \n                \n            \n            \n                \ncreateNote(note: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/note.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                note\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteNote\n                        \n                    \n                \n            \n            \n                \ndeleteNote(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/note.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportNotesAsCsv\n                        \n                    \n                \n            \n            \n                \nexportNotesAsCsv(ids: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/note.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNoteById\n                        \n                    \n                \n            \n            \n                \ngetNoteById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/note.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes(searchTerm?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/note.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/note.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sharePassword\n                        \n                    \n                \n            \n            \n                \nsharePassword(passwordId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/note.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                passwordId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateNote\n                        \n                    \n                \n            \n            \n                \nupdateNote(id: string, note: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/note.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                note\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment[`api_url`]}/notes`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/note.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoteService {\n\n  private apiUrl = `${environment[`api_url`]}/notes`;\n\n  constructor(private http: HttpClient) { }\n\n  // Create a new note card\n  createNote(note: any): Observable {\n    return this.http.post(`${this.apiUrl}/note`, note)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Get all note cards\n  getNotes(searchTerm?: any): Observable {\n    return this.http.get(`${this.apiUrl}?search=${searchTerm}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Get a note card by ID\n  getNoteById(id: string): Observable {\n    return this.http.get(`${this.apiUrl}/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Update a note card by ID\n  updateNote(id: string, note: any): Observable {\n    return this.http.patch(`${this.apiUrl}/${id}`, note)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Delete a note card by ID\n  deleteNote(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Error handling\n  private handleError(error: any) {\n    console.error('An error occurred:', error);\n    return throwError('Something bad happened; please try again later.');\n  }\n\n  sharePassword(passwordId: string): Observable {\n    return this.http.post(`${this.apiUrl}/share/${passwordId}`,{})\n      .pipe(\n        catchError((error: any) => {\n          console.error('Error generating share link:', error);\n          throw error; // Re-throw the error to prevent silent failures\n        })\n      );\n  }\n\n  exportNotesAsCsv(ids: string): Observable {\n    return this.http.get(`${this.apiUrl}/export?ids=${ids}`, { responseType: 'blob' });\n  }\n  addToFavorites(noteId: string): Observable {\n    return this.http.post(`${this.apiUrl}/note/${noteId}/favorite`, {}); // Assuming no additional data is sent in the request body\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotesComponent.html":{"url":"components/NotesComponent.html","title":"component - NotesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/notes/notes.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notes\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatTableModule\n                            MatSortModule\n                            MatFormFieldModule\n                            ReactiveFormsModule\n                            FormsModule\n                            MatInputModule\n                            MatButtonModule\n                            MatIconModule\n                            MatMenuModule\n                            MatCheckboxModule\n                            MatDialogModule\n                            MatChipsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./notes.component.html\n            \n\n\n\n            \n                styleUrl\n                ./notes.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                changedetect\n                            \n                            \n                                    Readonly\n                                commonService\n                            \n                            \n                                    Readonly\n                                dialog\n                            \n                            \n                                    Readonly\n                                displayedColumns\n                            \n                            \n                                isLoading\n                            \n                            \n                                notes\n                            \n                            \n                                    Readonly\n                                noteService\n                            \n                            \n                                    Readonly\n                                passwordIds\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxLabel\n                            \n                            \n                                deleteNotes\n                            \n                            \n                                exportPassword\n                            \n                            \n                                getNotes\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openNotesDialog\n                            \n                            \n                                toggleAllRows\n                            \n                            \n                                toggleSideBar\n                            \n                            \n                                trackById\n                            \n                            \n                                updateFavourites\n                            \n                            \n                                viewNotee\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/notes/notes.component.ts:65\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkboxLabel\n                        \n                    \n                \n            \n            \n                \ncheckboxLabel(row?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/notes/notes.component.ts:159\n                        \n                    \n\n\n            \n                \n                        The label for the checkbox on the passed row\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteNotes\n                        \n                    \n                \n            \n            \n                \ndeleteNotes(id?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/notes/notes.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportPassword\n                        \n                    \n                \n            \n            \n                \nexportPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/notes/notes.component.ts:185\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/notes/notes.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSelected\n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/notes/notes.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/notes/notes.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNotesDialog\n                        \n                    \n                \n            \n            \n                \nopenNotesDialog(note: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/notes/notes.component.ts:173\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                note\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleAllRows\n                        \n                    \n                \n            \n            \n                \ntoggleAllRows()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/notes/notes.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Selects all rows if they are not all selected; otherwise clear selection.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideBar\n                        \n                    \n                \n            \n            \n                \ntoggleSideBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/notes/notes.component.ts:200\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackById\n                        \n                    \n                \n            \n            \n                \ntrackById(index: number, item: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/notes/notes.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFavourites\n                        \n                    \n                \n            \n            \n                \nupdateFavourites(noteId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/notes/notes.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                noteId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewNotee\n                        \n                    \n                \n            \n            \n                \nviewNotee(note: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/notes/notes.component.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                note\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        changedetect\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/notes/notes.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        commonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/notes/notes.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialog)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/notes/notes.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'select',\n    '_id',\n    'title',\n    'content',\n    'created_by',\n    // 'tags',\n    'favourite',\n    'update_at',\n    'action',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/notes/notes.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/notes/notes.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/notes/notes.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        noteService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NoteService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/notes/notes.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        passwordIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/notes/notes.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/notes/notes.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SelectionModel(true, [])\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/notes/notes.component.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { ChangeDetectorRef, Component, inject, OnInit } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogModule,\n} from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { tap, catchError } from 'rxjs';\nimport { NoteService } from '../../services/note.service';\nimport { NotesFormComponent } from '../../dialog/notes/notes-form.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonService } from '../../services/common.service';\n\n@Component({\n  selector: 'app-notes',\n  standalone: true,\n  imports: [\n    MatTableModule,\n    MatSortModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatChipsModule,\n    CommonModule,\n  ],\n  templateUrl: './notes.component.html',\n  styleUrl: './notes.component.css',\n})\nexport class NotesComponent implements OnInit {\n  notes: any[] = []; // Use a Subject to manage password updates\n  readonly passwordIds = [];\n  readonly changedetect = inject(ChangeDetectorRef);\n  readonly noteService = inject(NoteService);\n  readonly commonService = inject(CommonService);\n  readonly displayedColumns: string[] = [\n    'select',\n    '_id',\n    'title',\n    'content',\n    'created_by',\n    // 'tags',\n    'favourite',\n    'update_at',\n    'action',\n  ];\n  readonly dialog = inject(MatDialog);\n  isLoading: boolean = true;\n  selection = new SelectionModel(true, []);\n  searchTerm: string = '';\n  constructor() {}\n  ngOnInit(): void {\n    this.getNotes();\n  }\n  getNotes(): void {\n    this.isLoading = true;\n    this.noteService.getNotes(this.searchTerm).subscribe(\n      (response: any) => {\n        this.isLoading = false;\n        console.log('ff', response);\n\n        this.notes = response.data;\n        this.changedetect.detectChanges();\n      },\n      (error) => {\n        this.notes = [];\n        this.isLoading = false;\n        this.changedetect.detectChanges();\n      }\n    );\n  }\n\n  deleteNotes(id?: string): void {\n    const ids =\n      id ??\n      this.selection.selected\n        .map((note) => {\n          return note._id;\n        })\n        .join(',');\n    // Delete password using an observable\n    this.noteService\n      .deleteNote(ids)\n      .pipe(\n        tap(() => {\n          this.getNotes();\n        }),\n        catchError((error: any) => {\n          console.error('err', error);\n          throw error; // re-throw the error to prevent silent failures\n        })\n      )\n      .subscribe({\n        complete: () => {\n          this.changedetect.detectChanges();\n        },\n      });\n  }\n\n  trackById(index: number, item: any): number {\n    return item?._id; // assuming your Password object has an 'id' property\n  }\n\n  updateFavourites(noteId?: string): void {\n    const ids =\n      noteId ??\n      this.selection.selected\n        .map((pass) => {\n          return pass._id;\n        })\n        .join(',');\n    console.log('id', ids);\n\n    this.noteService.addToFavorites(ids).subscribe(\n      (response) => {\n        console.log('Password added to favorites successfully', response);\n        this.getNotes();\n        // Handle success, e.g., update UI\n      },\n      (error) => {\n        console.error('Error adding password to favorites', error);\n        // Handle error, e.g., display error message\n      }\n    );\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.notes.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.notes);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\n      row._id + 1\n    }`;\n  }\n\n  viewNotee(note: any): void {\n    this.dialog.open(ViewNoteCompoent, {\n      data: { note },\n    });\n  }\n  openNotesDialog(note: any): void {\n    const dialogRef = this.dialog.open(NotesFormComponent, {\n      data: { note },\n      width: '400px',\n    });\n\n    dialogRef.afterClosed().subscribe((res: any) => {\n      if (res) {\n        this.getNotes();\n      }\n    });\n  }\n  exportPassword(): void {\n    const ids = this.selection.selected\n      .map((pass) => {\n        return pass._id;\n      })\n      .join(',');\n    this.noteService.exportNotesAsCsv(ids).subscribe((blob: Blob) => {\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'passwords.csv';\n      a.click();\n    });\n  }\n\n  toggleSideBar(): void {\n    this.commonService.toggleSideBar()\n  }\n}\n@Component({\n  selector: 'app-view-note',\n  templateUrl: './view-note.html',\n  standalone: true,\n  imports: [MatButtonModule, MatDialogModule, CommonModule],\n})\nexport class ViewNoteCompoent {\n  readonly data = inject(MAT_DIALOG_DATA);\n}\n\n    \n\n    \n        \n\n  \n    \n      menu\n    \n    Secure Notes\n  \n  \n\n\n\n  \n  \n    \n      add_circle_outline\n    \n   \n  \n \n\n  \n  \n    \n      settings\n    \n    \n      Delete\n      Add to Favourites\n      Export\n    \n  \n\n\n\n 0; else noDataTemplate\">\n    \n      \n        \n          \n          \n        \n        \n          \n          \n        \n      \n      \n      \n        \n          Favourites\n        \n        \n          \n            \n            star\n          \n        \n      \n\n      \n        Id\n        {{ i + 1 }}\n      \n\n      \n        title\n        {{ element.title }}\n      \n\n      \n        content\n        {{ element.content }}\n      \n\n      \n        Created by\n        {{ element.ownerName }}\n      \n\n      \n        Update Date\n        {{ element.updatedAt | date: 'short' }}\n      \n\n      \n        Tags\n        \n          \n            \n              {{ tag.name }}\n            \n          \n        \n       -->\n\n      \n        Action\n        \n\n\n            \n              edit\n            \n            \n              delete\n              Delete password -->\n            \n            \n              share\n              Share password\n             -->\n            \n              remove_red_eye\n              View password -->\n            \n          \n        \n      \n\n      \n      \n    \n  \n  \n        \n        \n        Oops! Data not found\n        It seems like we couldn't locate the information you requested.\n        \n            Retry\n            Add\n        \n    \n    \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu        Secure Notes                  add_circle_outline                        settings              Delete      Add to Favourites      Export       0; else noDataTemplate\">                                                                                                                      Favourites                                                  star                                      Id        {{ i + 1 }}                    title        {{ element.title }}                    content        {{ element.content }}                    Created by        {{ element.ownerName }}                    Update Date        {{ element.updatedAt | date: \\'short\\' }}                    Tags                                            {{ tag.name }}                                     -->              Action                                  edit                                      delete              Delete password -->                                      share              Share password             -->                          remove_red_eye              View password -->                                                                                Oops! Data not found        It seems like we couldn\\'t locate the information you requested.                    Retry            Add                      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotesFormComponent.html":{"url":"components/NotesFormComponent.html","title":"component - NotesFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotesFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialog/notes/notes-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notes-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            ReactiveFormsModule\n                            MatButtonModule\n                            MatToolbarModule\n                            MatFormFieldModule\n                            CommonModule\n                            MatInputModule\n                            MatAutocompleteModule\n                            MatDialogModule\n                            MatCheckboxModule\n                            MatChipsModule\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./notes-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                data\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                fb\n                            \n                            \n                                noteForm\n                            \n                            \n                                    Private\n                                    Readonly\n                                noteService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dialog/notes/notes-form.component.ts:26\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/notes/notes-form.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/notes/notes-form.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/notes/notes-form.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/notes/notes-form.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/notes/notes-form.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        noteService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NoteService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/notes/notes-form.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { NoteService } from '../../services/note.service';\n\n@Component({\n  selector: 'app-notes-form',\n  standalone: true,\n  imports: [FormsModule, ReactiveFormsModule, MatButtonModule, MatToolbarModule, MatFormFieldModule, CommonModule, MatInputModule, MatAutocompleteModule, MatDialogModule, MatCheckboxModule, MatChipsModule, MatIconModule],\n  templateUrl: './notes-form.component.html',\n})\nexport class NotesFormComponent {\n  noteForm: FormGroup;\n  private readonly data = inject(MAT_DIALOG_DATA);\n  private readonly dialogRef = inject(MatDialogRef);\n  private readonly noteService = inject(NoteService);\n  private readonly fb = inject(FormBuilder);\n\n  constructor() {    \n    this.noteForm = this.fb.group({\n      title: [this.data.note?.title, Validators.required],\n      content: [this.data.note?.content, Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.noteForm.valid) {\n      if (this.data.note?._id) {\n        this.noteService.updateNote(this.data.note._id, this.noteForm.value).subscribe((response:any)=>{\n          this.dialogRef.close(true)\n        })\n      } else {\n        this.noteService.createNote(this.noteForm.value).subscribe((response: any) => {\n          console.log('Note created', response);\n          this.dialogRef.close(true)\n        });\n\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n  \n    Add Notes\n  \n  \n    \n        \n          Title\n          \n        \n      \n        \n          Content\n          \n        \n      \n      \n  \n  \n    Cancel\n    Save Note\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Add Notes                          Title                                          Content                                      Cancel    Save Note  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotesFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationComponent.html":{"url":"components/NotificationComponent.html","title":"component - NotificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/profile/notification/notification.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notification\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatFormFieldModule\n                            MatButtonModule\n                            MatIconModule\n                            MatSelectModule\n                            CommonModule\n                            MatOptionModule\n                            MatInputModule\n                            ReactiveFormsModule\n                            FormsModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./notification.component.html\n            \n\n\n\n            \n                styleUrl\n                ./notification.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                commonService\n                            \n                            \n                                notificationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSideBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideBar\n                        \n                    \n                \n            \n            \n                \ntoggleSideBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/notification/notification.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        commonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/notification/notification.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notificationForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    notificationType: new FormControl('all'),\n    notificationEnable: new FormControl(true),\n    notificationFrequency: new FormControl(\"daily\")\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/notification/notification.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, inject, Output, output } from '@angular/core';\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { CommonService } from '../../../services/common.service';\n\n@Component({\n  selector: 'app-notification',\n  standalone: true,\n  imports: [MatFormFieldModule, MatButtonModule, MatIconModule, MatSelectModule, CommonModule, MatOptionModule, MatInputModule, ReactiveFormsModule, FormsModule, MatCheckboxModule],\n  templateUrl: './notification.component.html',\n  styleUrl: './notification.component.css'\n})\nexport class NotificationComponent {\n  readonly commonService = inject(CommonService) \n  notificationForm = new FormGroup({\n    notificationType: new FormControl('all'),\n    notificationEnable: new FormControl(true),\n    notificationFrequency: new FormControl(\"daily\")\n  })\n\n  toggleSideBar(): void {\n    this.commonService.toggleProfileSideBar();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            menu\n          \n        Email Notification\n      \n    Save Changes\n\n  \n  \n    \n        \n            All Notifications\n            Password Changes\n            Comments on Passwords\n            Tag Creation\n            Two-Factor Authentication\n            Organization Invitations\n            Notes Added\n            Credit Card Information\n            File Uploads\n            File Sent\n        \n    \n\n         Receive email updates for the selected notification type\n        \n            \n                Immediate\n        Daily Digest\n        Weekly Digest\n            \n        \n      \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        menu                  Email Notification          Save Changes                            All Notifications            Password Changes            Comments on Passwords            Tag Creation            Two-Factor Authentication            Organization Invitations            Notes Added            Credit Card Information            File Uploads            File Sent                     Receive email updates for the selected notification type                                    Immediate        Daily Digest        Weekly Digest                            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialog/organization/organization.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-organization\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            ReactiveFormsModule\n                            MatDialogModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatButtonModule\n                            MatSnackBarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                dialogRef\n                            \n                            \n                                organizationForm\n                            \n                            \n                                    Readonly\n                                organizatioonService\n                            \n                            \n                                    Readonly\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addOrganization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addOrganization\n                        \n                    \n                \n            \n            \n                \naddOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/organization/organization.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/organization/organization.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organizationForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    organization_name: new FormControl('', [Validators.required]),\n    organization_description: new FormControl('')\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/organization/organization.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organizatioonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrganizationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/organization/organization.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/organization/organization.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { OrganizationService } from '../../services/organization.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-organization',\n  standalone: true,\n  imports: [FormsModule, ReactiveFormsModule,MatDialogModule, MatFormFieldModule, MatInputModule, MatButtonModule, MatSnackBarModule],\n  templateUrl: './organization.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n\n})\nexport class OrganizationComponent {\n  organizationForm = new FormGroup({\n    organization_name: new FormControl('', [Validators.required]),\n    organization_description: new FormControl('')\n  })\n  readonly organizatioonService = inject(OrganizationService);\n  readonly dialogRef = inject(MatDialogRef);\n  readonly snackBar = inject(MatSnackBar);\n\n  addOrganization(): void {\n    const {organization_name,organization_description } = this.organizationForm.value;\n    this.organizatioonService.createOrganization(organization_name, organization_description).subscribe({\n      next: (response) => {\n        console.log(response);\n        this.dialogRef.close();\n        this.snackBar.open('Organization created successfully', 'OK', {\n          duration: 2000,\n          });\n      \n    },\n    error:(res)=>{\n      this.dialogRef.close(true)\n      this.snackBar.open('Error creating organization', 'OK', {\n        duration: 2000,\n        });\n        \n    }\n  })\n  }\n\n}\n\n    \n\n    \n        Create Organization\n\n  \n    \n      Organization Name\n      \n      @if(organizationForm.get('organization_name')?.hasError('required')) {\n       Organization name is required \n      }\n    \n\n    \n      Organization Description (optional)\n      \n    \n  \n\n\n  Cancel\n\n  \n    Create Organization\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Create Organization            Organization Name            @if(organizationForm.get(\\'organization_name\\')?.hasError(\\'required\\')) {       Organization name is required       }              Organization Description (optional)              Cancel      Create Organization  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/organization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganization\n                            \n                            \n                                getInvitations\n                            \n                            \n                                getOrganizations\n                            \n                            \n                                sendInvitation\n                            \n                            \n                                updateInvitationStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/organization.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganization\n                        \n                    \n                \n            \n            \n                \ncreateOrganization(name: any, description: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/organization.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                description\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInvitations\n                        \n                    \n                \n            \n            \n                \ngetInvitations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/organization.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganizations\n                        \n                    \n                \n            \n            \n                \ngetOrganizations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/organization.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendInvitation\n                        \n                    \n                \n            \n            \n                \nsendInvitation(organizationId: string, userForm: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/organization.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organizationId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userForm\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateInvitationStatus\n                        \n                    \n                \n            \n            \n                \nupdateInvitationStatus(invitationId: string, passowrd: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/organization.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                invitationId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                passowrd\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.api_url\n                    \n                \n                    \n                        \n                                Defined in src/app/services/organization.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrganizationService {\n\n  private apiUrl = environment.api_url;\n\n  constructor(private http: HttpClient) { }\n\n  createOrganization(name: any, description: any) {\n    return this.http.post(`${this.apiUrl}/auth/organization`, { name, description });\n  }\n\n  getOrganizations() {\n    return this.http.get(`${this.apiUrl}/auth/organizations`);\n  }\n\n  sendInvitation(organizationId: string,  userForm: any) {\n    return this.http.post(`${this.apiUrl}/auth/organizations/${organizationId}/invitations`, userForm );\n  }\n\n  getInvitations() {\n    return this.http.get(`${this.apiUrl}/auth/users`);\n  }\n\n  updateInvitationStatus(invitationId: string, passowrd: string, email: string) {\n   return this.http.post(`${this.apiUrl}/auth/accept-invitation`, { invitationId: invitationId, passowrd, email })\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationsComponent.html":{"url":"components/OrganizationsComponent.html","title":"component - OrganizationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrganizationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/admin/organizations/organizations.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-organizations\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatTableModule\n                            MatSortModule\n                            CommonModule\n                            MatDialogModule\n                            MatButtonModule\n                            MatPaginatorModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./organizations.component.html\n            \n\n\n\n            \n                styleUrl\n                ./organizations.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayedColumns\n                            \n                            \n                                organizations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOrganizations\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openOrganizationDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationsService: OrganizationService, dialog: MatDialog, changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/admin/organizations/organizations.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationsService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganizations\n                        \n                    \n                \n            \n            \n                \ngetOrganizations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/admin/organizations/organizations.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/admin/organizations/organizations.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openOrganizationDialog\n                        \n                    \n                \n            \n            \n                \nopenOrganizationDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/admin/organizations/organizations.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['_id', 'name', 'description', 'ownerName', 'ownerEmail', 'createdAt', 'updatedAt']\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/admin/organizations/organizations.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organizations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/admin/organizations/organizations.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { OrganizationService } from '../../../services/organization.service';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { CommonModule } from '@angular/common';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { OrganizationComponent } from '../../../dialog/organization/organization.component';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-organizations',\n  standalone: true,\n  imports: [MatTableModule, MatSortModule, CommonModule, MatDialogModule, MatButtonModule, MatPaginatorModule],\n  templateUrl: './organizations.component.html',\n  styleUrl: './organizations.component.css'\n})\nexport class OrganizationsComponent implements OnInit {\n  organizations: any[] = [];\n  displayedColumns: string[] = ['_id', 'name', 'description', 'ownerName', 'ownerEmail', 'createdAt', 'updatedAt'];\n\n  constructor(\n    private readonly organizationsService: OrganizationService,\n    private readonly dialog: MatDialog,\n    private readonly changeDetectorRef: ChangeDetectorRef\n\n  ) {}\n\n  ngOnInit(): void {\n    this.getOrganizations();\n  }\n\n  getOrganizations(): void {\n    this.organizationsService.getOrganizations().subscribe((organizations: any) => {\n      this.organizations = organizations; \n      console.log('ggg', organizations);\n      this.changeDetectorRef.detectChanges();\n      });\n  }\n  openOrganizationDialog(): void {\n    const dialogRef = this.dialog.open(OrganizationComponent, {\n      width: '500px',\n      });\n    dialogRef.afterClosed().subscribe((res)=>{\n      console.log('Dialog output:', res);\n      this.getOrganizations()\n\n    })\n  }\n  \n\n\n}\n\n    \n\n    \n        \n    \n        Organizations\n    \n     create Organization\n\n\n\n    \n    \n       ID \n      {{ i+1 }}\n    \n  \n    \n    \n       Name \n       {{element.name}} \n    \n  \n    \n    \n       Description \n       {{element.description}} \n    \n  \n    \n    \n       Owner Name \n       {{element.owner.name}} \n    \n  \n    \n    \n       Owner Email \n       {{element.owner.email}} \n    \n  \n    \n    \n       Created At \n       {{element.createdAt | date:'short'}} \n    \n  \n    \n    \n       Updated At \n       {{element.updatedAt | date:'short'}} \n    \n  \n    \n    \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Organizations         create Organization               ID       {{ i+1 }}                     Name        {{element.name}}                      Description        {{element.description}}                      Owner Name        {{element.owner.name}}                      Owner Email        {{element.owner.email}}                      Created At        {{element.createdAt | date:\\'short\\'}}                      Updated At        {{element.updatedAt | date:\\'short\\'}}                       '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordChangeComponent.html":{"url":"components/PasswordChangeComponent.html","title":"component - PasswordChangeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordChangeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/password-change/password-change.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-change\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatFormFieldModule\n                            MatInputModule\n                            MatIconModule\n                            MatButtonModule\n                            MatCardModule\n                            ReactiveFormsModule\n                            RouterModule\n                            MatSnackBarModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./password-change.component.css\n            \n\n\n\n            \n                templateUrl\n                ./password-change.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeRoute\n                            \n                            \n                                    Readonly\n                                changeDetectorRef\n                            \n                            \n                                linkVerified\n                            \n                            \n                                passwordForm\n                            \n                            \n                                    Private\n                                resetToken\n                            \n                            \n                                router\n                            \n                            \n                                service\n                            \n                            \n                                showConfirmPassword\n                            \n                            \n                                showPassword\n                            \n                            \n                                    Readonly\n                                snackBar\n                            \n                            \n                                    Private\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPasswordMatchValidator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordValidator\n                            \n                            \n                                resetPassword\n                            \n                            \n                                toggleConfirmPasswordVisibility\n                            \n                            \n                                togglePasswordVisibility\n                            \n                            \n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPasswordMatchValidator\n                        \n                    \n                \n            \n            \n                \nconfirmPasswordMatchValidator(control: FormControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/password-change/password-change.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        FormControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/password-change/password-change.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator(control: FormControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/password-change/password-change.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        FormControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/password-change/password-change.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleConfirmPasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleConfirmPasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/password-change/password-change.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/password-change/password-change.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateToken\n                        \n                    \n                \n            \n            \n                \nvalidateToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/password-change/password-change.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/password-change/password-change.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        changeDetectorRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/password-change/password-change.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linkVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/password-change/password-change.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n      this.passwordValidator\n    ]),\n    confirmPassword: new FormControl('', [\n      Validators.required,\n      this.confirmPasswordMatchValidator\n    ]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/password-change/password-change.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/password-change/password-change.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/password-change/password-change.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/password-change/password-change.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/password-change/password-change.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/password-change/password-change.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/password-change/password-change.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/password-change/password-change.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { AuthService } from '../../services/auth.service';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-password-change',\n  standalone: true,\n  imports: [\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    RouterModule,\n    MatSnackBarModule,\n    CommonModule\n  ],\n  templateUrl: './password-change.component.html',\n  styleUrls: ['./password-change.component.css'],\n})\nexport class PasswordChangeComponent implements OnInit {\n  service = inject(AuthService);\n  readonly snackBar = inject(MatSnackBar);\n  readonly changeDetectorRef = inject(ChangeDetectorRef);\n  router = inject(Router);\n  activeRoute = inject(ActivatedRoute);\n\n  passwordForm = new FormGroup({\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n      this.passwordValidator\n    ]),\n    confirmPassword: new FormControl('', [\n      Validators.required,\n      this.confirmPasswordMatchValidator\n    ]),\n  });\n\n  private userId: string = '';\n  private resetToken: string = '';\n  linkVerified: boolean = false;\n  showPassword: boolean = false;\n  showConfirmPassword: boolean = false;\n\n  ngOnInit(): void {\n    this.activeRoute.queryParams.subscribe((params) => {\n      const token = params['token'];\n      if (token) {\n        const decodedToken = atob(token); // Decode the base64 encoded token\n        const [userId, resetToken] = decodedToken.split(':');\n        this.userId = userId;\n        this.resetToken = resetToken;\n        this.validateToken();\n      } else {\n        this.snackBar.open('Invalid or missing token', '', { duration: 3000 });\n        this.router.navigate(['/login']); // Redirect to login if the token is missing or invalid\n      }\n    });\n  }\n\n  passwordValidator(control: FormControl): { [s: string]: boolean } | null {\n    const passwordValidation =\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^\\w\\s]).{8,}$/;\n    const password = control.value;\n    if (password && !passwordValidation.test(password)) {\n      return { invalidPassword: true };\n    }\n    return null;\n  }\n\n  confirmPasswordMatchValidator(\n    control: FormControl\n  ): { [key: string]: boolean } | null {\n    if (control.parent && control.parent.get('password')) {\n      // Compare password and confirmPassword values\n      if (control.value !== control.parent?.get('password')?.value) {\n        return { confirmPasswordMismatch: true };\n      }\n    }\n    return null;\n  }\n\n  resetPassword(): void {\n    if (this.passwordForm.invalid) return;\n    const payload = {\n      password: this.passwordForm.get('password')?.value,\n      confirmPassword: this.passwordForm.get('confirmPassword')?.value,\n    \n    }\n\n    this.service.changePassword(payload, this.userId).subscribe(\n\n      (res: any) => {\n        this.snackBar.open('Password reset successfully', '', {\n          duration: 3000,\n        });\n        this.router.navigate(['/login']); // Redirect to login after successful reset\n      },\n      (error) => {\n        this.snackBar.open(error.message, '', {\n          duration: 3000,\n        });\n      }\n    );\n  }\n\n  validateToken(): void {\n    this.service.verifYResetRequest(this.userId, this.resetToken).subscribe(\n      (res: any) => {\n        if (res.verified) {\n          this.linkVerified = true;\n        } else {\n          this.snackBar.open('Password reset link has expired or is invalid', '', { duration: 3000 });\n          this.router.navigate(['/login']);\n        }\n        this.changeDetectorRef.detectChanges();\n      },\n      (error) => {\n        console.error('error', error);\n        this.snackBar.open('Error verifying reset token', '', { duration: 3000 });\n      }\n    );\n  }\n\n  togglePasswordVisibility(): void {\n    this.showPassword = !this.showPassword;\n  }\n\n  toggleConfirmPasswordVisibility(): void {\n    this.showConfirmPassword = !this.showConfirmPassword;\n  }\n}\n\n    \n\n    \n        \n    \n        The password reset link has expired. Please request a new link.\n      \n    \n      Create New Password\n      \n      \n     \n  \n      \n        \n        \n          \n          \n            {{ showPassword ? 'visibility_off' : 'visibility' }}\n          \n          \n            Password is required.\n          \n          \n            Password must be at least 8 characters long.\n          \n          \n            Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character.\n          \n        \n  \n        \n        \n          \n          \n            {{ showConfirmPassword ? 'visibility_off' : 'visibility' }}\n          \n          \n            Confirm password is required.\n          \n          \n            Passwords do not match.\n          \n        \n  \n        \n        \n          Back to login\n          \n            Reset password\n          \n        \n      \n    \n  \n  \n    \n\n    \n                \n                    ./password-change.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            The password reset link has expired. Please request a new link.                Create New Password                                                                         {{ showPassword ? \\'visibility_off\\' : \\'visibility\\' }}                                Password is required.                                Password must be at least 8 characters long.                                Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character.                                                                    {{ showConfirmPassword ? \\'visibility_off\\' : \\'visibility\\' }}                                Confirm password is required.                                Passwords do not match.                                              Back to login                      Reset password                                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordChangeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordChangeComponent-1.html":{"url":"components/PasswordChangeComponent-1.html","title":"component - PasswordChangeComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordChangeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/profile/password-change/password-change.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-change\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatFormFieldModule\n                            FormsModule\n                            MatButtonModule\n                            MatInputModule\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password-change.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                authService\n                            \n                            \n                                    Readonly\n                                commonService\n                            \n                            \n                                passwordChangeForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                toggleSideBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/profile/password-change/password-change.component.ts:23\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/password-change/password-change.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/password-change/password-change.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideBar\n                        \n                    \n                \n            \n            \n                \ntoggleSideBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/password-change/password-change.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/password-change/password-change.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        commonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/password-change/password-change.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordChangeForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    currentPassword: new FormControl('', Validators.required),\n    newPassword: new FormControl('', [Validators.required, Validators.minLength(8)]),\n    confirmNewPassword: new FormControl('', [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/password-change/password-change.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { AuthService } from '../../../services/auth.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonService } from '../../../services/common.service';\n\n@Component({\n  selector: 'app-password-change',\n  standalone: true,\n  imports: [ReactiveFormsModule, MatFormFieldModule, FormsModule, MatButtonModule, MatInputModule, MatIconModule],\n  templateUrl: './password-change.component.html',\n})\nexport class PasswordChangeComponent implements OnInit {\n  passwordChangeForm: FormGroup = new FormGroup({\n    currentPassword: new FormControl('', Validators.required),\n    newPassword: new FormControl('', [Validators.required, Validators.minLength(8)]),\n    confirmNewPassword: new FormControl('', [Validators.required])\n  });\n  readonly authService = inject(AuthService)\n  readonly commonService = inject(CommonService)\n  constructor() { }\n  ngOnInit(): void {}\n\n  onSubmit(): void {\n    if (this.passwordChangeForm.valid) {\n      const { currentPassword, newPassword } = this.passwordChangeForm.value;\n\n      this.authService.passwordReset(currentPassword, newPassword).subscribe(\n        () => {\n          console.log('Password changed successfully!');\n        },\n        (error: any) => console.error('Error changing password', error)\n      );\n    } else {\n      console.log('Please fill in all required fields');\n    }\n  }\n  toggleSideBar(): void {\n    this.commonService.toggleProfileSideBar();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      menu\n    \n      Password Changes\n  \n  Save Changes\n\n\n  \n    Current Password\n    \n    @if(passwordChangeForm.get('currentPassword')?.hasError('required')) {\n     Current password is required \n    }\n  \n\n  \n    New Password\n    \n    @if(passwordChangeForm.get('newPassword')?.hasError('required')) {\n     New password is required \n    }@else if(passwordChangeForm.get('newPassword')?.hasError('minlength')) {\n     New password must be at least 8 characters long \n    }\n  \n\n  \n    Confirm New Password\n    \n    @if(passwordChangeForm.get('confirmNewPassword')?.hasError('required')) {\n\n     Confirm new password is required \n    }\n    @else if(passwordChangeForm.get('confirmNewPassword')?.hasError('mustMatch'))\n    {\n     Confirm new password must match new password \n    }\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu          Password Changes    Save Changes      Current Password        @if(passwordChangeForm.get(\\'currentPassword\\')?.hasError(\\'required\\')) {     Current password is required     }        New Password        @if(passwordChangeForm.get(\\'newPassword\\')?.hasError(\\'required\\')) {     New password is required     }@else if(passwordChangeForm.get(\\'newPassword\\')?.hasError(\\'minlength\\')) {     New password must be at least 8 characters long     }        Confirm New Password        @if(passwordChangeForm.get(\\'confirmNewPassword\\')?.hasError(\\'required\\')) {     Confirm new password is required     }    @else if(passwordChangeForm.get(\\'confirmNewPassword\\')?.hasError(\\'mustMatch\\'))    {     Confirm new password must match new password     }  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordChangeComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordFormComponent.html":{"url":"components/PasswordFormComponent.html","title":"component - PasswordFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialog/password-form/password-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            ReactiveFormsModule\n                            MatButtonModule\n                            MatToolbarModule\n                            MatFormFieldModule\n                            CommonModule\n                            MatInputModule\n                            MatAutocompleteModule\n                            MatDialogModule\n                            MatCheckboxModule\n                            MatChipsModule\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                detectorRef\n                            \n                            \n                                    Readonly\n                                dialog\n                            \n                            \n                                    Readonly\n                                dialogRef\n                            \n                            \n                                    Readonly\n                                formbuilder\n                            \n                            \n                                isLoading\n                            \n                            \n                                passwordForm\n                            \n                            \n                                    Readonly\n                                passwordService\n                            \n                            \n                                searchTermSubject\n                            \n                            \n                                    Readonly\n                                separatorKeysCodes\n                            \n                            \n                                tags\n                            \n                            \n                                    Readonly\n                                tagsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPassword\n                            \n                            \n                                createNewTag\n                            \n                            \n                                generateSecureKey\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                remove\n                            \n                            \n                                searchTags\n                            \n                            \n                                selected\n                            \n                            \n                                strongPasswordValidator\n                            \n                            \n                                urlValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPassword\n                        \n                    \n                \n            \n            \n                \naddPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/password-form/password-form.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTag\n                        \n                    \n                \n            \n            \n                \ncreateNewTag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/password-form/password-form.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateSecureKey\n                        \n                    \n                \n            \n            \n                \ngenerateSecureKey(length: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/password-form/password-form.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/password-form/password-form.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(fruit: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/password-form/password-form.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fruit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTags\n                        \n                    \n                \n            \n            \n                \nsearchTags()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/password-form/password-form.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n            \n                \nselected(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/password-form/password-form.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatAutocompleteSelectedEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strongPasswordValidator\n                        \n                    \n                \n            \n            \n                \nstrongPasswordValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/password-form/password-form.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        urlValidator\n                        \n                    \n                \n            \n            \n                \nurlValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/password-form/password-form.component.ts:173\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        detectorRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialog)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        formbuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    _id: new FormControl(),\n    name: new FormControl(''),\n    description: new FormControl(''),\n    website: new FormControl('', [Validators.required, this.urlValidator()]), // Added URL validation\n    username: new FormControl('', Validators.required),\n    password: new FormControl('', [Validators.required, this.strongPasswordValidator()]), // Added strong password validation\n    tags: new FormControl(),\n    searchTerm: new FormControl('')\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        passwordService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PasswordService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTermSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        separatorKeysCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [ENTER, COMMA]\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tagsName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([''])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, inject, model, signal } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { PasswordService } from '../../services/password.service';\nimport { AES } from 'crypto-js';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { CommonModule } from '@angular/common';\nimport { debounceTime, switchMap, tap } from 'rxjs/operators';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-password-form',\n  standalone: true,\n  imports: [FormsModule, ReactiveFormsModule, MatButtonModule, MatToolbarModule, MatFormFieldModule, CommonModule, MatInputModule, MatAutocompleteModule, MatDialogModule, MatCheckboxModule, MatChipsModule, MatIconModule],\n  templateUrl: './password-form.component.html',\n})\nexport class PasswordFormComponent implements OnInit {\n  isLoading: boolean = false;\n  passwordForm = new FormGroup({\n    _id: new FormControl(),\n    name: new FormControl(''),\n    description: new FormControl(''),\n    website: new FormControl('', [Validators.required, this.urlValidator()]), // Added URL validation\n    username: new FormControl('', Validators.required),\n    password: new FormControl('', [Validators.required, this.strongPasswordValidator()]), // Added strong password validation\n    tags: new FormControl(),\n    searchTerm: new FormControl('')\n  });\n  \n  searchTermSubject: Subject = new Subject();\n  readonly dialog = inject(MatDialog)\n  readonly formbuilder = inject(FormBuilder);\n  readonly passwordService = inject(PasswordService)\n  readonly data = inject(MAT_DIALOG_DATA);\n  readonly detectorRef = inject(ChangeDetectorRef)\n  readonly dialogRef = inject(MatDialogRef);\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  readonly tagsName = signal(['']);\n  tags: any[] = []\n\n  ngOnInit(): void {\n    this.passwordForm.patchValue(this.data.password)\n    const tagIds: any[] = [];\n    this.data?.password?.tags.forEach((tag: any) => {\n      this.tagsName.update(tagNam => [...tagNam, tag.name])\n      tagIds.push(tag._id)\n    });\n    this.searchTermSubject.pipe(\n      // debounceTime(300), // Delay of 300ms\n      switchMap(term => this.passwordService.searchTags(term))\n    ).subscribe(\n      (res) => {\n        this.tags = res;\n        this.isLoading = false;\n        this.detectorRef.detectChanges();\n      },\n      (error) => {\n        this.tags = [];\n        this.isLoading = false; // Ensure loading is false on error as well\n        console.error(\"Error fetching the Tags, Error: \", error);\n      }\n    );\n    this.passwordForm.get('tags')?.setValue(tagIds);\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    const tags = this.passwordForm.value.tags\n    this.passwordForm.controls.tags.setValue([...tags, event.option.value._id])\n    this.tagsName.update(tagname => [...tagname, event.option.viewValue])\n    this.passwordForm.controls.searchTerm.setValue('');\n    event.option.deselect();\n    this.detectorRef.detectChanges();\n  }\n\n  searchTags(): void {\n    const searchTerm = this.passwordForm.value.searchTerm?.trim().toLowerCase();\n    if (searchTerm) {\n      this.isLoading = true;\n      this.searchTermSubject.next(searchTerm); // Emit the current search term\n    } else {\n      this.tags = []; // Clear tags if search term is empty\n      this.isLoading = false;\n    }\n  }\n\n  addPassword(): void {\n    if (this.passwordForm.invalid) {\n      return;\n    }\n    const fixedKey =  this.passwordForm?.value._id? this.data?.password.key :this.generateSecureKey(32);\n    const encryptedPassword = AES.encrypt(\n      this.passwordForm?.value?.password ?? '',\n      fixedKey\n    );\n    // Create the new password object  \n    const newPasswordObject = {\n      website: this.passwordForm?.get('website')?.value,\n      username: this.passwordForm?.get('username')?.value,\n      password: encryptedPassword.toString(),\n      key: fixedKey,\n      name: this.passwordForm.value.name,\n      tags: this.passwordForm.value.tags,\n      description: this.passwordForm.value.description\n    };\n\n    if (!this.passwordForm?.value._id) {\n      this.passwordService\n        .addPassword(newPasswordObject)\n\n        .subscribe(() => {\n          this.passwordForm?.reset(); // Clear the form\n          this.dialogRef.close(true);\n        });\n    } else {\n      // Update the password using an observable\n      this.passwordService\n        .updatePassword(this.passwordForm?.value._id, newPasswordObject)\n\n        .subscribe(() => {\n          this.passwordForm?.reset(); // Clear the form\n          this.dialogRef.close(true);\n        });\n    }\n    // Send the new password object to the backend using an observable\n  }\n\n  generateSecureKey(length: number): string {\n    const characters =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+~';\n    let key = '';\n    for (let i = 0; i  {\n    //   const index = fruits.indexOf(fruit);\n    //   if (index  {\n      const password = control.value;\n      const regex = /(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[^\\s]{8,}/;\n      return regex.test(password) ? null : { strongPassword: true };\n    };\n  }\n\n  urlValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const urlRegex = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w.-]+)+[\\w\\-._~:/?#[\\]@!$&'()*+,;=.]+$/;\n      return urlRegex.test(control.value) ? null : { url: true };\n    };\n  }\n}\n\n@Component({\n  selector: 'app-tag',\n  templateUrl: \"./tag-component.html\",\n  standalone: true,\n  imports: [MatButtonModule, MatDialogModule, MatSnackBarModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TagFormCompoent {\n  dialogRef = inject(MatDialogRef)\n  tagForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    description: new FormControl('')\n  })\n  service = inject(PasswordService)\n  snackBar = inject(MatSnackBar)\n\n  addTag(): void {\n    this.service.addTag(this.tagForm.value).pipe(tap()).subscribe((res) => {\n      this.snackBar.open('Tag Saved Successfully', 'close', {\n        duration: 3000\n      })\n      this.dialogRef.close(res);\n    })\n  }\n}\n    \n\n    \n         \n  Add Password\n\n\n  \n    \n      \n      \n        Name is required\n      \n      \n        Invalid name format\n      \n    \n\n    \n      \n      \n        Website is required\n      \n      \n        Invalid website format\n      \n    \n\n    \n      \n      \n        Username is required\n      \n      \n        Invalid email format\n      \n    \n\n    \n      \n      \n        Password is required\n      \n      \n        Password must be at least 8 characters long\n      \n    \n\n    \n      \n      \n        Description is required\n      \n    \n\n    \n      Search Tags\n      \n\n      \n        \n          \n            Loading tags...\n          \n        \n\n        \n          \n            \n              {{ tag.name }}\n            \n          \n\n          \n            \n              No matching tags found.\n              Create new tag\n            \n          \n        \n      \n    \n\n    \n      \n        {{ tag }}\n        \n          cancel\n        \n      \n    \n  \n\n\n  Cancel\n  \n    Add Password\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Add Password                          Name is required                    Invalid name format                                  Website is required                    Invalid website format                                  Username is required                    Invalid email format                                  Password is required                    Password must be at least 8 characters long                                  Description is required                    Search Tags                                          Loading tags...                                                              {{ tag.name }}                                                          No matching tags found.              Create new tag                                                          {{ tag }}                  cancel                      Cancel      Add Password  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordGenratorComponent.html":{"url":"components/PasswordGenratorComponent.html","title":"component - PasswordGenratorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordGenratorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/password-genrator/password-genrator.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-genrator\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatFormFieldModule\n                            ReactiveFormsModule\n                            ClipboardModule\n                            MatSnackBarModule\n                            MatSliderModule\n                            MatInputModule\n                            MatIconModule\n                            FormsModule\n                            CommonModule\n                            MatCheckboxModule\n                            MatButtonModule\n                            MatRadioModule\n                \n            \n\n            \n                styleUrls\n                ./password-genrator.component.css\n            \n\n\n\n            \n                templateUrl\n                ./password-genrator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                capitalizeWords\n                            \n                            \n                                clipboard\n                            \n                            \n                                crackTimes\n                            \n                            \n                                feedback\n                            \n                            \n                                generatorType\n                            \n                            \n                                includeSeparators\n                            \n                            \n                                length\n                            \n                            \n                                lowercase\n                            \n                            \n                                numbers\n                            \n                            \n                                passphrase\n                            \n                            \n                                passphraseLength\n                            \n                            \n                                password\n                            \n                            \n                                passwordStrengths\n                            \n                            \n                                snackbar\n                            \n                            \n                                strength\n                            \n                            \n                                symbols\n                            \n                            \n                                uppercase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyPassphrase\n                            \n                            \n                                copyPassword\n                            \n                            \n                                estimateStrength\n                            \n                            \n                                generatePassphrase\n                            \n                            \n                                generatePassword\n                            \n                            \n                                getPasswordStrengthLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        copyPassphrase\n                        \n                    \n                \n            \n            \n                \ncopyPassphrase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/password-genrator/password-genrator.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyPassword\n                        \n                    \n                \n            \n            \n                \ncopyPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/password-genrator/password-genrator.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        estimateStrength\n                        \n                    \n                \n            \n            \n                \nestimateStrength()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/password-genrator/password-genrator.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePassphrase\n                        \n                    \n                \n            \n            \n                \ngeneratePassphrase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/password-genrator/password-genrator.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePassword\n                        \n                    \n                \n            \n            \n                \ngeneratePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/password-genrator/password-genrator.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPasswordStrengthLabel\n                        \n                    \n                \n            \n            \n                \ngetPasswordStrengthLabel(strength: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/password-genrator/password-genrator.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                strength\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        capitalizeWords\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clipboard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Clipboard)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        crackTimes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        feedback\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatorType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        includeSeparators\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lowercase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numbers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passphrase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passphraseLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 12\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordStrengths\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { level: 0, label: 'Very Weak', color: 'none' },\n  { level: 1, label: 'Weak', color: 'none' },\n  { level: 2, label: 'Fair', color: 'bg-yellow-500' },\n  { level: 3, label: 'Strong', color: 'bg-green-500' },\n  { level: 4, label: 'Very Strong', color: 'bg-blue-500' },\n]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snackbar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        symbols\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uppercase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-genrator/password-genrator.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ClipboardModule, Clipboard } from '@angular/cdk/clipboard';\nimport { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport zxcvbn from 'zxcvbn';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { generate, count } from \"random-words\";\nimport { MatRadioModule } from '@angular/material/radio'\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-password-genrator',\n  templateUrl: './password-genrator.component.html',\n  standalone: true,\n  imports: [MatFormFieldModule, ReactiveFormsModule, ClipboardModule,MatSnackBarModule , MatSliderModule, MatInputModule, MatIconModule, FormsModule, CommonModule, MatCheckboxModule, MatButtonModule, MatRadioModule],\n  styleUrls: ['./password-genrator.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n\n})\nexport class PasswordGenratorComponent {\n  password: string = '';\n  length: number = 16;\n  numbers: boolean = true;\n  symbols: boolean = true;\n  uppercase: boolean = true;\n  lowercase: boolean = true;\n  strength: number = 10;\n  feedback: string = '';\n  crackTimes: any;\n  clipboard = inject(Clipboard)\n  snackbar = inject(MatSnackBar)\n  generatorType: number = 1\n  passwordStrengths: any[] = [\n  { level: 0, label: 'Very Weak', color: 'none' },\n  { level: 1, label: 'Weak', color: 'none' },\n  { level: 2, label: 'Fair', color: 'bg-yellow-500' },\n  { level: 3, label: 'Strong', color: 'bg-green-500' },\n  { level: 4, label: 'Very Strong', color: 'bg-blue-500' },\n];\n\n  passphraseLength = 12;\n  includeSeparators = false;\n  capitalizeWords = false;\n  passphrase = '';\n  generatePassword(): void {\n    const characters = [\n      this.numbers ? '0123456789' : '',\n      this.uppercase ? 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' : '',\n      this.lowercase ? 'abcdefghijklmnopqrstuvwxyz' : '',\n      this.symbols ? '~!@-#$(){}[];:*+^%_' : ''\n    ].join('');\n\n    if (characters.length === 0) {\n      this.password = '';\n      this.strength = 0;\n      this.feedback = 'Select at least one character set.';\n      return;\n    }\n\n    this.password = Array(this.length)\n      .fill(characters)\n      .map(x => x[Math.floor(Math.random() * x.length)])\n      .join('');\n\n    this.estimateStrength();\n  }\n\n  getPasswordStrengthLabel(strength: number): string {\n    switch (strength) {\n      case 0:\n      case 1:\n        return 'Weak';\n      case 2:\n        return 'Fair';\n      case 3:\n        return 'Strong';\n      case 4:\n        return 'Very Strong';\n      default:\n        return '';\n    }\n  }\n\n\n\n  estimateStrength() {\n    const result = zxcvbn(this.password);\n    this.strength = result.score;\n    this.feedback = result.feedback.suggestions.join(' ');\n    this.crackTimes = result.crack_times_display;\n    console.log(\"rrr\", result);\n\n  }\n  copyPassword() {\n    this.clipboard.copy(this.password);\n    this.snackbar.open('Password copied to clipboard!', \"close\", {\n      duration:3000\n    });\n  }\n\n  generatePassphrase() {\n    const passphraseWords: string | string[] = generate(this.passphraseLength);\n\n    // Check if passphraseWords is a string, if so convert it to an array of strings\n    let passphraseArray: string[];\n    if (typeof passphraseWords === 'string') {\n        passphraseArray = [passphraseWords];\n    } else {\n        passphraseArray = passphraseWords;\n    }\n    \n    // Join the array with the separator (if any) and convert to string\n    this.passphrase = passphraseArray.map((passphrase)=>{  return this.capitalizeWords ? passphrase.toUpperCase(): passphrase }).join(this.includeSeparators ? '-' : ' ');\n    \n  }\n\n  copyPassphrase() {\n    this.clipboard.copy(this.passphrase);\n    this.snackbar.open('Passphrase copied to clipboard!', '', {duration:3000});\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Random Strong Password Generator\n      Develop robust and secure passwords to\n        safeguard your online accounts. Use a\n        mix\n        of uppercase and lowercase letters, numbers, and special characters.\n        Avoid common words and easily guessable\n        information such as birthdays or simple sequences. Consider using a password manager to generate and store\n        unique\n        passwords for each of your accounts, ensuring an additional layer of security. Regularly update your passwords\n        and\n        be cautious of phishing attempts that may try to steal your credentials.\n      \n    \n    \n      \n    \n  \n\n  \n    Generate the Random Password\n    \n      Free Password Generator\n      Need a strong password? Try the safepassvault Password Generator to create complex passwords and passphrases that\n      will keep your information safe.\n\n    \n\n    \n      Generator Type :\n      \n        Password\n        Passphrase\n      \n    \n\n\n    \n      @if(generatorType === 1) {\n      Generated Password:\n      \n        Password Strength:\n          \n            {{ getPasswordStrengthLabel(strength) }}\n          \n        \n        Password Crack Times: {{crackTimes?.online_throttling_100_per_hour}}\n      \n      \n        \n        content_copy\n      \n       Characters:{{length}} \n      \n        \n      \n\n      \n        Include Numbers\n        Include Symbols\n        Include Uppercase Letters\n        Include Lowercase Letters\n      \n\n      Generate\n        Password\n\n      }\n      @else {\n      Generated Passphrase\n      \n        \n        content_copy\n      \n      Words: {{ passphraseLength }} \n      \n        \n      \n\n      \n        Include Separators\n        Capitalize Words\n      \n      Generate\n        Passphrase\n      }\n    \n  \n  \n    Effortlessly Manage Strong Passwords with safepassvault, Your Trusted Password\n      Manager \n    Securing your online accounts with strong passwords is\n      crucial in today's digital landscape. However, managing multiple complex passwords can be daunting. This is where\n      a reliable password manager becomes essential.\n\n      A password manager, such as safepassvault, is a highly effective tool for effortlessly managing strong and unique\n      passwords. By utilizing safepassvault, you can conveniently generate and store complex passwords for each of your\n      accounts, with the need to remember only one master password to access the manager.\n\n      safepassvault comes highly recommended, offering individual and business plans, as well as cross-platform\n      accessibility on mobile, browser, and desktop applications. With safepassvault, your passwords and important digital\n      assets are securely stored in an end-to-end encrypted vault, ensuring peace of mind regarding your online\n      security.\n\n      Opting for a trusted password manager like safepassvault enables seamless management of login credentials across\n      unlimited devices and platforms.\n    \n  \n  \n    \n      Why Should I Prioritize Generating Strong Passwords?\n    0\n    \n      When creating accounts on new websites, we often go through the routine of devising a password that meets various\n      complexity requirements - a mix of upper- and lowercase letters, numbers, and special characters. Despite crafting\n      what we believe to be a robust password, there remains a question of whether it truly provides ample security for\n      our confidential information.\n\n    \n    \n      The challenge arises when individuals, in an attempt to recall their passwords easily, resort to using familiar\n      information such as birthdays or pet names. This practice poses a significant risk as hackers can exploit such\n      easily available details from social media or other platforms to breach your privacy. Hence, it is vital to ensure\n      that passwords do not contain any identifiable personal information.\n\n    \n    \n      Fortunately, a robust password generator can alleviate this burden by generating strong, distinctive, and highly\n      secure passwords or passphrases automatically.\n\n    \n    \n      Expert Tip: Concerned about managing a multitude of passwords effectively? Utilizing a reliable password manager,\n      like Bitwarden, offers a secure and convenient solution for maintaining strong and unique passwords for every\n      account.\n    \n  \n\n\n    \n\n    \n                \n                    ./password-genrator.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Random Strong Password Generator      Develop robust and secure passwords to        safeguard your online accounts. Use a        mix        of uppercase and lowercase letters, numbers, and special characters.        Avoid common words and easily guessable        information such as birthdays or simple sequences. Consider using a password manager to generate and store        unique        passwords for each of your accounts, ensuring an additional layer of security. Regularly update your passwords        and        be cautious of phishing attempts that may try to steal your credentials.                                Generate the Random Password          Free Password Generator      Need a strong password? Try the safepassvault Password Generator to create complex passwords and passphrases that      will keep your information safe.              Generator Type :              Password        Passphrase                    @if(generatorType === 1) {      Generated Password:              Password Strength:                      {{ getPasswordStrengthLabel(strength) }}                          Password Crack Times: {{crackTimes?.online_throttling_100_per_hour}}                            content_copy             Characters:{{length}}                                   Include Numbers        Include Symbols        Include Uppercase Letters        Include Lowercase Letters            Generate        Password      }      @else {      Generated Passphrase                      content_copy            Words: {{ passphraseLength }}                                   Include Separators        Capitalize Words            Generate        Passphrase      }            Effortlessly Manage Strong Passwords with safepassvault, Your Trusted Password      Manager     Securing your online accounts with strong passwords is      crucial in today\\'s digital landscape. However, managing multiple complex passwords can be daunting. This is where      a reliable password manager becomes essential.      A password manager, such as safepassvault, is a highly effective tool for effortlessly managing strong and unique      passwords. By utilizing safepassvault, you can conveniently generate and store complex passwords for each of your      accounts, with the need to remember only one master password to access the manager.      safepassvault comes highly recommended, offering individual and business plans, as well as cross-platform      accessibility on mobile, browser, and desktop applications. With safepassvault, your passwords and important digital      assets are securely stored in an end-to-end encrypted vault, ensuring peace of mind regarding your online      security.      Opting for a trusted password manager like safepassvault enables seamless management of login credentials across      unlimited devices and platforms.                  Why Should I Prioritize Generating Strong Passwords?    0          When creating accounts on new websites, we often go through the routine of devising a password that meets various      complexity requirements - a mix of upper- and lowercase letters, numbers, and special characters. Despite crafting      what we believe to be a robust password, there remains a question of whether it truly provides ample security for      our confidential information.              The challenge arises when individuals, in an attempt to recall their passwords easily, resort to using familiar      information such as birthdays or pet names. This practice poses a significant risk as hackers can exploit such      easily available details from social media or other platforms to breach your privacy. Hence, it is vital to ensure      that passwords do not contain any identifiable personal information.              Fortunately, a robust password generator can alleviate this burden by generating strong, distinctive, and highly      secure passwords or passphrases automatically.              Expert Tip: Concerned about managing a multitude of passwords effectively? Utilizing a reliable password manager,      like Bitwarden, offers a secure and convenient solution for maintaining strong and unique passwords for every      account.      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordGenratorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordService.html":{"url":"injectables/PasswordService.html","title":"injectable - PasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/password.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                filteredPasswords$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPassword\n                            \n                            \n                                addTag\n                            \n                            \n                                addTagToPassword\n                            \n                            \n                                addToFavorites\n                            \n                            \n                                deleteMultiplePasswords\n                            \n                            \n                                deletePassword\n                            \n                            \n                                exportPasswordsAsCsv\n                            \n                            \n                                getPasswords\n                            \n                            \n                                postComment\n                            \n                            \n                                searchTags\n                            \n                            \n                                sharePassword\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/password.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPassword\n                        \n                    \n                \n            \n            \n                \naddPassword(password: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTag\n                        \n                    \n                \n            \n            \n                \naddTag(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTagToPassword\n                        \n                    \n                \n            \n            \n                \naddTagToPassword(passwordId: string, tagName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password.service.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                passwordId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tagName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addToFavorites\n                        \n                    \n                \n            \n            \n                \naddToFavorites(passwordId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                passwordId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMultiplePasswords\n                        \n                    \n                \n            \n            \n                \ndeleteMultiplePasswords(ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletePassword\n                        \n                    \n                \n            \n            \n                \ndeletePassword(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportPasswordsAsCsv\n                        \n                    \n                \n            \n            \n                \nexportPasswordsAsCsv(ids: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPasswords\n                        \n                    \n                \n            \n            \n                \ngetPasswords(_search?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postComment\n                        \n                    \n                \n            \n            \n                \npostComment(passwordId: string, content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password.service.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                passwordId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTags\n                        \n                    \n                \n            \n            \n                \nsearchTags(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sharePassword\n                        \n                    \n                \n            \n            \n                \nsharePassword(passwordId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                passwordId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(_id: any, newPasswordObject: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/password.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPasswordObject\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment[`api_url`]}/passwords`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/password.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredPasswords$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/password.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { BehaviorSubject, Observable, of, throwError } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { AES } from 'crypto-js';\nimport CryptoJS from 'crypto-js';\nimport { environment } from '../../environments/environment';\nimport { saveAs } from 'file-saver'; // Install file-saver using npm\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordService {\n  private apiUrl = `${environment[`api_url`]}/passwords`;\n  filteredPasswords$: BehaviorSubject = new BehaviorSubject([]);\n\n\n  constructor(private http: HttpClient) { }\n  getPasswords(_search?: string): Observable {\n    console.log('pp', _search);\n    \n    const params = new HttpParams();\n    if (_search && _search !== undefined) {\n      params.set('search', _search);\n      }    \n    return this.http.get(`${this.apiUrl}`\n    )\n      .pipe(\n        switchMap((response: any) => {\n          const decryptedPasswords = response.passwords.map((res: { password: string | CryptoJS.lib.CipherParams; key: string | CryptoJS.lib.WordArray; }) => {\n            try {\n              const decryptedPassword = CryptoJS.AES.decrypt(res.password, res.key).toString(CryptoJS.enc.Utf8);\n              return { ...res, password: decryptedPassword };\n            } catch (err) {\n              console.error('Error decrypting password:', err);\n              return throwError(new Error('Failed to decrypt password')); // Handle individual decryption errors\n            }\n          });\n          this.filteredPasswords$.next(decryptedPasswords); // Initialize filteredPasswords$ with fetched data\n          return of(decryptedPasswords);\n        }),\n        catchError((error: any) => {\n          console.error('Error fetching or decrypting passwords:', error); // Log comprehensive error\n          return throwError(error); // Re-throw the error for proper handling\n        })\n      );\n  }\n\n  addPassword(password: any): Observable {\n    return this.http.post(`${this.apiUrl}/password`, password)\n    .pipe(\n      switchMap((response: any) => { // Use switchMap to transform the entire response\n        const decryptedPassword = AES.decrypt(\n          response.password,\n          response.key\n        );\n\n        response.password = decryptedPassword.toString(CryptoJS.enc.Utf8);\n        this.getPasswords();\n        return of(response); // Return the modified password object\n      }),\n      catchError((error: any) => {\n        console.error('Error updating password:', error);\n        throw error; // Re-throw the error to prevent silent failures\n      })\n    );\n  }\n\n  deletePassword(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/password/${id}`)\n      .pipe(\n        catchError((error: any) => {\n          console.error('Error deleting password:', error);\n          throw error; // Re-throw the error to prevent silent failures\n        })\n      );\n  }\n\n  deleteMultiplePasswords(ids: string[]): Observable {\n    return this.http.delete(`${this.apiUrl}/password/${ids}` )\n      .pipe(\n        catchError((error: any) => {\n          console.error('Error deleting password:', error);\n          throw error; // Re-throw the error to prevent silent failures\n        })\n      );\n  }\n  addToFavorites(passwordId: string): Observable {\n    return this.http.post(`${this.apiUrl}/password/${passwordId}/favorite`, {}); // Assuming no additional data is sent in the request body\n  }\n\n  updatePassword(_id: any, newPasswordObject: { website: any; username: any; password: string; key: string; }): Observable {\n    return this.http.put(`${this.apiUrl}/password/${_id}`, newPasswordObject)\n      .pipe(\n        switchMap((response: any) => { // Use switchMap to transform the entire response\n          const decryptedPassword = AES.decrypt(\n            response.password,\n            response.key\n          );\n\n          response.password = decryptedPassword.toString(CryptoJS.enc.Utf8);\n          return of(response); // Return the modified password object\n        }),\n        catchError((error: any) => {\n          console.error('Error updating password:', error);\n          throw error; // Re-throw the error to prevent silent failures\n        })\n      );\n  \n  }\n\n  sharePassword(passwordId: string): Observable {\n    return this.http.post(`${this.apiUrl}/share/${passwordId}`,{})\n      .pipe(\n        catchError((error: any) => {\n          console.error('Error generating share link:', error);\n          throw error; // Re-throw the error to prevent silent failures\n        })\n      );\n  }\n\n  searchTags(name: string): Observable {\n    return this.http.get(`${environment.api_url}/tags/search/${name}`);\n  }\n\n  addTag(payload: any): Observable {\n    return this.http.post(`${environment.api_url}/tags/tag`, payload);\n  }\n\n  exportPasswordsAsCsv(ids: string): Observable {\n    return this.http.get(`${this.apiUrl}/export?ids=${ids}`, { responseType: 'blob' });\n  }\n  addTagToPassword(passwordId: string, tagName: string): Observable {\n    const body = { passwordId, tagName };\n    return this.http.post(`${this.apiUrl}/add-tag`, body)\n  }\n  postComment(passwordId: string, content: string): Observable {\n    return this.http.post(`${this.apiUrl}/${passwordId}/comments`, {content})\n    .pipe(\n      catchError((error: any) => {\n        console.error('Error deleting password:', error);\n        throw error; // Re-throw the error to prevent silent failures\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordStrengthComponent.html":{"url":"components/PasswordStrengthComponent.html","title":"component - PasswordStrengthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordStrengthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/password-strength/password-strength.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-strength\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatFormFieldModule\n                            MatInputModule\n                            MatButtonModule\n                            MatProgressBarModule\n                            MatExpansionModule\n                            FormsModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./password-strength.component.css\n            \n\n\n\n            \n                templateUrl\n                ./password-strength.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                passwordStrength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculatePasswordStrength\n                            \n                            \n                                checkPassword\n                            \n                            \n                                    Private\n                                getStrengthMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        calculatePasswordStrength\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculatePasswordStrength(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/password-strength/password-strength.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPassword\n                        \n                    \n                \n            \n            \n                \ncheckPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/password-strength/password-strength.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getStrengthMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStrengthMessage(score: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/password-strength/password-strength.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                score\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-strength/password-strength.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordStrength\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/password-strength/password-strength.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-password-strength',\n  standalone: true,\n  imports: [\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatExpansionModule,\n    FormsModule,\n    CommonModule\n  \n  ],\n  templateUrl: './password-strength.component.html',\n  styleUrls: ['./password-strength.component.css']\n})\nexport class PasswordStrengthComponent {\n  password: string = '';\n  passwordStrength!: { score: number, message: string } ;\n\n  checkPassword() {\n    const score = this.calculatePasswordStrength(this.password);\n    console.log('score', score);\n    \n    this.passwordStrength = this.getStrengthMessage(score);\n  }\n\n  private calculatePasswordStrength(password: string): number {\n    let score = 0;\n\n    if (!password) {\n      return score;\n    }\n\n    // Basic length check\n    if (password.length >= 8) score += 1;\n    if (password.length >= 12) score += 1;\n\n    // Complexity checks\n    if (/[A-Z]/.test(password)) score += 1; // Uppercase letters\n    if (/[a-z]/.test(password)) score += 1; // Lowercase letters\n    if (/[0-9]/.test(password)) score += 1; // Numbers\n    if (/[\\W]/.test(password)) score += 1; // Special characters\n\n    return score;\n  }\n\n  private getStrengthMessage(score: number): { score: number, message: string } {\n    switch (score) {\n      case 0:\n      case 1:\n        return { score: 20, message: 'Very Weak' };\n      case 2:\n        return { score: 40, message: 'Weak' };\n      case 3:\n        return { score: 60, message: 'Medium' };\n      case 4:\n        return { score: 80, message: 'Strong' };\n      default:\n        return { score: 100, message: 'Very Strong' };\n    }\n  }\n}\n\n    \n\n    \n        \n    Password Strength Tester\n    Test the strength of your password with our interactive tool.\n    \n        \n    \n    \n      Password Strength:\n      \n        \n          \n        \n        {{ passwordStrength['message'] }}\n      \n    \n    \n      How strong is your password?\n      With Safepassvault, you can instantly generate and save strong passwords for each of your accounts.\n      Get Started\n    \n    \n      Password Strength Testing Tool\n      Think you have a strong password? Find out below.\n      Evaluate your password:\n      Your password strength: {{ passwordStrength && passwordStrength['message'] || 'very weak' }}\n      Estimated time to crack: less than a second\n    \n    \n      Password FAQ\n      \n        Is it safe to type my real password here?\n        Absolutely! We do not store or save any passwords entered into the Password Checker. Your security and privacy are our top priority.\n      \n      \n        How do you calculate password strength?\n        Our tool analyzes your password against common security criteria such as length, complexity, and common patterns.\n      \n      \n        How do I create a strong password?\n        Follow the recommendations provided by the Password Checker and use a password generator to create a stronger one.\n      \n      \n        What's the best way to manage my passwords?\n        Using a password manager like Safepassvault is the best way to securely store and manage all your passwords in one place.\n      \n    \n    \n      Password Strength Best Practices\n      \n        Make it unique: Use passwords unique to different online accounts.\n        Make it random: Ensure your passwords do not follow a recognizable pattern.\n        Make it long: Use long passwords consisting of 14 characters or more.\n      \n    \n    \n      Why does password strength matter?\n      \n        Using the same password repeatedly across multiple sites might be convenient, but it also introduces a huge security risk. Choosing a unique and complex password for every online account helps\n        ensure that your private information stays safe and secure.\n      \n    \n    \n      Additional Features\n      \n        Two-Factor Authentication: Add an extra layer of security to your account.\n        Password Sharing: Easily share passwords while maintaining control over access.\n        Security Alerts: Receive notifications when a password has been compromised.\n        Password Analyzer: Get insights into your password strength and receive\n      \n    \n  \n    \n\n    \n                \n                    ./password-strength.component.css\n                \n                .container {\n    color: darkslategray !important;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Password Strength Tester    Test the strength of your password with our interactive tool.                          Password Strength:                                        {{ passwordStrength[\\'message\\'] }}                    How strong is your password?      With Safepassvault, you can instantly generate and save strong passwords for each of your accounts.      Get Started              Password Strength Testing Tool      Think you have a strong password? Find out below.      Evaluate your password:      Your password strength: {{ passwordStrength && passwordStrength[\\'message\\'] || \\'very weak\\' }}      Estimated time to crack: less than a second              Password FAQ              Is it safe to type my real password here?        Absolutely! We do not store or save any passwords entered into the Password Checker. Your security and privacy are our top priority.                    How do you calculate password strength?        Our tool analyzes your password against common security criteria such as length, complexity, and common patterns.                    How do I create a strong password?        Follow the recommendations provided by the Password Checker and use a password generator to create a stronger one.                    What\\'s the best way to manage my passwords?        Using a password manager like Safepassvault is the best way to securely store and manage all your passwords in one place.                    Password Strength Best Practices              Make it unique: Use passwords unique to different online accounts.        Make it random: Ensure your passwords do not follow a recognizable pattern.        Make it long: Use long passwords consisting of 14 characters or more.                    Why does password strength matter?              Using the same password repeatedly across multiple sites might be convenient, but it also introduces a huge security risk. Choosing a unique and complex password for every online account helps        ensure that your private information stays safe and secure.                    Additional Features              Two-Factor Authentication: Add an extra layer of security to your account.        Password Sharing: Easily share passwords while maintaining control over access.        Security Alerts: Receive notifications when a password has been compromised.        Password Analyzer: Get insights into your password strength and receive            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordStrengthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlanService.html":{"url":"injectables/PlanService.html","title":"injectable - PlanService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/plan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                plan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPlan\n                            \n                            \n                                deletePlan\n                            \n                            \n                                getPlanById\n                            \n                            \n                                getPlans\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updatePlan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/plan.service.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPlan\n                        \n                    \n                \n            \n            \n                \ncreatePlan(planDetails: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/plan.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                planDetails\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletePlan\n                        \n                    \n                \n            \n            \n                \ndeletePlan(planId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/plan.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                planId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlanById\n                        \n                    \n                \n            \n            \n                \ngetPlanById(planId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/plan.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                planId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlans\n                        \n                    \n                \n            \n            \n                \ngetPlans()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/plan.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/plan.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePlan\n                        \n                    \n                \n            \n            \n                \nupdatePlan(planId: string, planDetails: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/plan.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                planId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                planDetails\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `${environment.api_url}/plans`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/plan.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plan\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 'null',\n      title: 'Free Plan',\n      amount: 0,\n      currency: 'USD',\n      interval: 'month',\n      intervalCount: 1,\n     \n    },\n    {\n      id: 'P-6XR17625JV867584NM3WGF7I',\n      title: 'Premium Plan (yearly)',\n      amount: 60,\n      currency: 'USD',\n      interval: 'year',\n      intervalCount: 1,\n     \n    },\n    {\n      id: 'P-5GV04444VF2894031M3VR2MY',\n      title: 'Premium Plan (Monthly)',\n      amount: 6,\n      currency: 'USD',\n      interval: 'month',\n      intervalCount: 1,\n    },\n    {\n      id: 'P-93233881XJ483274HM3WGPGA',\n      title: 'Basic Plan (Yearly)',\n      amount: 40,\n      currency: 'USD',\n      interval: 'year',\n      intervalCount: 1,\n    },\n    {\n      id: 'P-85R761525X622673PM3WGOTQ',\n      title: 'Basic Plan (Monthly)',\n      amount: 4,\n      currency: 'USD',\n      interval: 'month',\n      intervalCount: 1,\n     \n    },\n    {\n      id: 'P-683760842Y234025BM3WGQ6Y',\n      title: 'Enterprise Plan (Yearly)',\n      amount: 100,\n      currency: 'USD',\n      interval: 'year',\n      intervalCount: 1,\n    },\n    {\n      id: 'P-959072281U895714BM3WGQCA',\n      title: 'Enterprise Plan (Monthly)',\n      amount: 10,\n      currency: 'USD',\n      interval: 'month',\n      intervalCount: 1,\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/services/plan.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, map, Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlanService {\n  private apiUrl: string = `${environment.api_url}/plans`;\n  plan = [\n    {\n      id: 'null',\n      title: 'Free Plan',\n      amount: 0,\n      currency: 'USD',\n      interval: 'month',\n      intervalCount: 1,\n     \n    },\n    {\n      id: 'P-6XR17625JV867584NM3WGF7I',\n      title: 'Premium Plan (yearly)',\n      amount: 60,\n      currency: 'USD',\n      interval: 'year',\n      intervalCount: 1,\n     \n    },\n    {\n      id: 'P-5GV04444VF2894031M3VR2MY',\n      title: 'Premium Plan (Monthly)',\n      amount: 6,\n      currency: 'USD',\n      interval: 'month',\n      intervalCount: 1,\n    },\n    {\n      id: 'P-93233881XJ483274HM3WGPGA',\n      title: 'Basic Plan (Yearly)',\n      amount: 40,\n      currency: 'USD',\n      interval: 'year',\n      intervalCount: 1,\n    },\n    {\n      id: 'P-85R761525X622673PM3WGOTQ',\n      title: 'Basic Plan (Monthly)',\n      amount: 4,\n      currency: 'USD',\n      interval: 'month',\n      intervalCount: 1,\n     \n    },\n    {\n      id: 'P-683760842Y234025BM3WGQ6Y',\n      title: 'Enterprise Plan (Yearly)',\n      amount: 100,\n      currency: 'USD',\n      interval: 'year',\n      intervalCount: 1,\n    },\n    {\n      id: 'P-959072281U895714BM3WGQCA',\n      title: 'Enterprise Plan (Monthly)',\n      amount: 10,\n      currency: 'USD',\n      interval: 'month',\n      intervalCount: 1,\n    },\n  ];\n  constructor(private http: HttpClient) {}\n\n  // Fetch all plans\n  getPlans(): Observable {\n    return this.http.get(`${this.apiUrl}`).pipe(\n      map((response) => response),\n      catchError(this.handleError)\n    );\n  }\n\n  // Fetch a specific plan by ID\n  getPlanById(planId: string): Observable {\n    return this.http.get(`${this.apiUrl}/${planId}`).pipe(\n      map((response) => response),\n      catchError(this.handleError)\n    );\n  }\n\n  // Create a new subscription plan\n  createPlan(planDetails: any): Observable {\n    return this.http.post(`${this.apiUrl}/create-subscriptions`, planDetails).pipe(\n      map((response) => response),\n      catchError(this.handleError)\n    );\n  }\n\n  // Update an existing plan by ID\n  updatePlan(planId: string, planDetails: any): Observable {\n    return this.http.put(`${this.apiUrl}/${planId}`, planDetails).pipe(\n      map((response) => response),\n      catchError(this.handleError)\n    );\n  }\n\n  // Delete a specific plan by ID\n  deletePlan(planId: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${planId}`).pipe(\n      map((response) => response),\n      catchError(this.handleError)\n    );\n  }\n\n  // Handle errors with detailed logging\n  private handleError(error: HttpErrorResponse): Observable {\n    let errorMessage: string;\n\n    // Check if it's a client-side or network error\n    if (error.error instanceof ErrorEvent) {\n      // Client-side or network error\n      errorMessage = `Client-side error: ${error.error.message}`;\n    } else {\n      // Server-side error\n      errorMessage = `Server returned code: ${error.status}, error message: ${error.message}`;\n    }\n\n    // Log the error to the console or send it to logging infrastructure\n    console.error(errorMessage);\n\n    // Throw the error so it can be caught in components using this service\n    return throwError(() => new Error(errorMessage));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PricingPageComponent.html":{"url":"components/PricingPageComponent.html","title":"component - PricingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PricingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/pricing-page/pricing-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pricing-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButtonModule\n                            MatRadioModule\n                            FormsModule\n                            RouterModule\n                            ReactiveFormsModule\n                            CommonModule\n                            MatButtonToggleModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./pricing-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./pricing-page.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                detectorRef\n                            \n                            \n                                planLoading\n                            \n                            \n                                plans\n                            \n                            \n                                planType\n                            \n                            \n                                planTypes\n                            \n                            \n                                router\n                            \n                            \n                                selectedInterval\n                            \n                            \n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToPlan\n                            \n                            \n                                navigateToTrial\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleInterval\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToPlan\n                        \n                    \n                \n            \n            \n                \nnavigateToPlan(buttonLink: string, queryParams: any, planId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/pricing-page/pricing-page.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buttonLink\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                planId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToTrial\n                        \n                    \n                \n            \n            \n                \nnavigateToTrial(trialLink: string, trialQueryParams: any, planId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/pricing-page/pricing-page.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trialLink\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                trialQueryParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                planId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/pricing-page/pricing-page.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleInterval\n                        \n                    \n                \n            \n            \n                \ntoggleInterval(interval: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/pricing-page/pricing-page.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                interval\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        detectorRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/pricing-page/pricing-page.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        planLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/pricing-page/pricing-page.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plans\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/pricing-page/pricing-page.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        planType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/pricing-page/pricing-page.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        planTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/pricing-page/pricing-page.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/pricing-page/pricing-page.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedInterval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/pricing-page/pricing-page.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlanService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/pricing-page/pricing-page.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ChangeDetectorRef, Component, inject, OnInit } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { Router, RouterModule } from '@angular/router';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { PlanService } from '../../services/plan.service';\n\n@Component({\n  selector: 'app-pricing-page',\n  standalone: true,\n  imports: [\n    MatButtonModule,\n    MatRadioModule,\n    FormsModule,\n    RouterModule,\n    ReactiveFormsModule,\n    CommonModule,\n    MatButtonToggleModule,\n  ],\n  templateUrl: './pricing-page.component.html',\n  styleUrl: './pricing-page.component.css',\n})\nexport class PricingPageComponent implements OnInit {\n  planType: number = 1;\n  plans: any[] = [];\n  planLoading = true;\n  planTypes: any[] = [];\n  detectorRef = inject(ChangeDetectorRef);\n  router = inject(Router)\n  service = inject(PlanService);\n  selectedInterval: string = 'month';\n\n  ngOnInit(): void {\n    this.planLoading = true;\n    this.service.getPlans().subscribe(\n      (plans) => {\n\n        this.planTypes = plans.plans;\n        this.planLoading = true;\n        this.detectorRef.detectChanges();\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n  toggleInterval(interval: string) {\n    this.selectedInterval = interval;\n  }\n\n  navigateToPlan(buttonLink: string, queryParams: any, planId: string): void {\n    // Add the plan ID to the query parameters\n    console.log(buttonLink);\n    console.log(queryParams);\n    console.log(planId);\n    \n    const updatedQueryParams = { ...queryParams, planId };\n    this.router.navigate([buttonLink], { queryParams: updatedQueryParams });\n  }\n\n  navigateToTrial(trialLink: string, trialQueryParams: any, planId: string): void {\n    // Add the plan ID to the query parameters\n    console.log(trialLink);\n    console.log(trialQueryParams);\n    console.log(planId);\n    const updatedQueryParams = { ...trialQueryParams, planId };\n    this.router.navigate([trialLink], { queryParams: updatedQueryParams });\n  }\n}\n\n    \n\n    \n        \n\n  Choose the Plan That Fits Your Needs\n  \n    Monthly\n    Yearly\n  \n  \n    \n      \n          {{plan.title}}\n          Price: {{plan.amount}} &dollar;/ {{plan.interval}}\n          \n            \n              \n              {{feature.text}}\n            \n          \n          \n          \n            \n              \n                {{plan.buttonText}}\n              \n              \n                Start 7-Day Trial\n              \n            \n          \n          \n      \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Choose the Plan That Fits Your Needs      Monthly    Yearly                        {{plan.title}}          Price: {{plan.amount}} $/ {{plan.interval}}                                                  {{feature.text}}                                                                                    {{plan.buttonText}}                                            Start 7-Day Trial                                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PricingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyPolicyComponent.html":{"url":"components/PrivacyPolicyComponent.html","title":"component - PrivacyPolicyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrivacyPolicyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/privacy-policy/privacy-policy.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy-policy\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./privacy-policy.component.html\n            \n\n\n\n            \n                styleUrl\n                ./privacy-policy.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy-policy',\n  standalone: true,\n  imports: [],\n  templateUrl: './privacy-policy.component.html',\n  styleUrl: './privacy-policy.component.css'\n})\nexport class PrivacyPolicyComponent {\n\n}\n\n    \n\n    \n        \n    Privacy Policy for Safepassvault\n    Effective Date: September 29, 2024\n  \n    \n      1. Introduction\n      \n        Welcome to Safepassvault. This Privacy Policy outlines how we collect, use, \n        and protect your personal data, including sensitive data such as passwords, \n        payment card details, secure notes, ID proofs, and files. By using our app, \n        you agree to the terms of this policy.\n      \n    \n  \n    \n      2. Information We Collect\n      We collect and store the following types of data:\n      \n        Personal Data: Email addresses, usernames, and other identifying information.\n        Password Data: Encrypted passwords and login details.\n        Card Details: Credit and debit card details are encrypted and stored securely.\n        Secure Notes: Personal notes are encrypted to ensure confidentiality.\n        ID Proofs: Uploaded images or documents such as passports, driver's licenses, and other ID proofs.\n        Files: Any files uploaded to our service are stored in encrypted form.\n        Device Information: Type of device, OS version, etc.\n      \n    \n  \n    \n      3. How We Use Your Data\n      \n        Card Management: Store encrypted credit and debit card details for autofill and secure access purposes.\n        Secure Notes & Files: Allow you to store and access personal information in an encrypted environment.\n        ID Proofs: Safely store scanned ID proofs for easy access and security management.\n        Improve App: Analyze usage patterns to enhance app functionality and user experience.\n      \n    \n  \n    \n      4. Data Storage & Security\n      \n        Safepassvault uses state-of-the-art encryption standards (AES-256) to secure your sensitive data, including passwords, card details, notes, ID proofs, and files.\n        All data is encrypted locally on your device before being securely stored in our cloud.\n      \n    \n  \n    \n      5. Data Sharing\n      \n        We do not sell, trade, or share your personal data, including card details, notes, ID proofs, or files, with third parties unless required by law.\n      \n    \n  \n    \n      6. User Control Over Data\n      \n        You have full control over your data. You can delete specific data (e.g., card details, notes, ID proofs, files) or your entire account from the app at any time.\n        Deleting your account will permanently remove all your stored data from our servers.\n      \n    \n  \n    \n      7. Cookies and Tracking\n      \n        We use cookies to enhance your experience on our website. You can control or disable cookies in your browser settings.\n      \n    \n  \n    \n      8. Changes to this Privacy Policy\n      \n        We may update this policy periodically. Changes will be posted here, and you will be notified via email for significant updates.\n      \n    \n  \n    \n      9. Contact Us\n      If you have any questions, please contact us at support&#64;Safepassvault.com.\n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Privacy Policy for Safepassvault    Effective Date: September 29, 2024            1. Introduction              Welcome to Safepassvault. This Privacy Policy outlines how we collect, use,         and protect your personal data, including sensitive data such as passwords,         payment card details, secure notes, ID proofs, and files. By using our app,         you agree to the terms of this policy.                      2. Information We Collect      We collect and store the following types of data:              Personal Data: Email addresses, usernames, and other identifying information.        Password Data: Encrypted passwords and login details.        Card Details: Credit and debit card details are encrypted and stored securely.        Secure Notes: Personal notes are encrypted to ensure confidentiality.        ID Proofs: Uploaded images or documents such as passports, driver\\'s licenses, and other ID proofs.        Files: Any files uploaded to our service are stored in encrypted form.        Device Information: Type of device, OS version, etc.                      3. How We Use Your Data              Card Management: Store encrypted credit and debit card details for autofill and secure access purposes.        Secure Notes & Files: Allow you to store and access personal information in an encrypted environment.        ID Proofs: Safely store scanned ID proofs for easy access and security management.        Improve App: Analyze usage patterns to enhance app functionality and user experience.                      4. Data Storage & Security              Safepassvault uses state-of-the-art encryption standards (AES-256) to secure your sensitive data, including passwords, card details, notes, ID proofs, and files.        All data is encrypted locally on your device before being securely stored in our cloud.                      5. Data Sharing              We do not sell, trade, or share your personal data, including card details, notes, ID proofs, or files, with third parties unless required by law.                      6. User Control Over Data              You have full control over your data. You can delete specific data (e.g., card details, notes, ID proofs, files) or your entire account from the app at any time.        Deleting your account will permanently remove all your stored data from our servers.                      7. Cookies and Tracking              We use cookies to enhance your experience on our website. You can control or disable cookies in your browser settings.                      8. Changes to this Privacy Policy              We may update this policy periodically. Changes will be posted here, and you will be notified via email for significant updates.                      9. Contact Us      If you have any questions, please contact us at support@Safepassvault.com.        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyPolicyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatSidenavModule\n                            MatListModule\n                            MatButtonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                breakpointObserver\n                            \n                            \n                                    Readonly\n                                commonService\n                            \n                            \n                                enableSecurityQuestions\n                            \n                            \n                                isbreakPoints\n                            \n                            \n                                isSidebarOpen\n                            \n                            \n                                mode\n                            \n                            \n                                    Readonly\n                                router\n                            \n                            \n                                tab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setTab\n                            \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/profile.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTab\n                        \n                    \n                \n            \n            \n                \nsetTab(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/profile.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSidebar\n                        \n                    \n                \n            \n            \n                \ntoggleSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/profile.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        breakpointObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(BreakpointObserver)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/profile.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        commonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/profile.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableSecurityQuestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/profile.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isbreakPoints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/profile.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSidebarOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/profile.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDrawerMode\n\n                    \n                \n                \n                    \n                        Default value : 'side'\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/profile.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/profile.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/profile.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { MatDrawerMode, MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Router, RouterModule } from '@angular/router';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { CommonService } from '../../services/common.service';\n\n@Component({\n  selector: 'app-profile',\n  standalone: true,\n  imports: [MatSidenavModule, MatListModule, MatButtonModule, RouterModule],\n  templateUrl: './profile.component.html',\n})\nexport class ProfileComponent implements OnInit {\n  enableSecurityQuestions = false; // Flag for optional security questions\n  tab = 0;\n  mode: MatDrawerMode = 'side';\n  isSidebarOpen = true;\n  readonly breakpointObserver = inject(BreakpointObserver);\n  readonly router = inject(Router);\n  readonly commonService = inject(CommonService);\n  isbreakPoints: boolean = false;\n  ngOnInit(): void {\n    this.commonService.profileSideBarOpen.subscribe((response) => {\n      this.isSidebarOpen = response;\n    });\n    this.breakpointObserver\n      .observe(['(max-width: 600px)'])\n      .subscribe((result) => {\n        if (result.breakpoints['(max-width: 600px)']) {\n          this.isbreakPoints = true;\n\n          this.isSidebarOpen = false;\n          this.mode = 'over';\n        } else {\n          this.isSidebarOpen = true;\n          this.mode = 'side';\n        }\n        this.commonService.profileSideBarOpen.next(this.isSidebarOpen);\n      });\n  }\n  setTab(url: string): void {\n    this.router.navigateByUrl(`/dashboard/profile/${url}`);\n    if(this.isbreakPoints){\n      this.toggleSidebar();\n    }\n  }\n\n  toggleSidebar() {\n    this.isSidebarOpen = !this.isSidebarOpen;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      Personal Details\n      Security Token\n      Change Password\n      Email Notification\n      MFA Authentication\n       Plan And Usage\n    \n  \n\n  \n  \n   \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Personal Details      Security Token      Change Password      Email Notification      MFA Authentication       Plan And Usage               '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProofIdService.html":{"url":"injectables/ProofIdService.html","title":"injectable - ProofIdService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProofIdService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/proof-id.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProofId\n                            \n                            \n                                deleteProofId\n                            \n                            \n                                getProofIdById\n                            \n                            \n                                getProofIds\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateProofId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/proof-id.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProofId\n                        \n                    \n                \n            \n            \n                \ncreateProofId(proofId: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/proof-id.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                proofId\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProofId\n                        \n                    \n                \n            \n            \n                \ndeleteProofId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/proof-id.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProofIdById\n                        \n                    \n                \n            \n            \n                \ngetProofIdById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/proof-id.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProofIds\n                        \n                    \n                \n            \n            \n                \ngetProofIds()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/proof-id.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/proof-id.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProofId\n                        \n                    \n                \n            \n            \n                \nupdateProofId(id: string, proofId: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/proof-id.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                proofId\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.api_url}/proofIds`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/proof-id.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProofIdService {\n\n  private apiUrl = `${environment.api_url}/proofIds`; // Replace with your API URL\n\n  constructor(private http: HttpClient) { }\n\n  // Create a new proof ID\n  createProofId(proofId: any): Observable {\n    return this.http.post(`${this.apiUrl}`, proofId)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Get all proof IDs\n  getProofIds(): Observable {\n    return this.http.get(this.apiUrl)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Get a specific proof ID by ID\n  getProofIdById(id: string): Observable {\n    return this.http.get(`${this.apiUrl}/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Update a proof ID by ID\n  updateProofId(id: string, proofId: any): Observable {\n    return this.http.patch(`${this.apiUrl}/${id}`, proofId)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Delete a proof ID by ID\n  deleteProofId(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  \n\n  // Error handling\n  private handleError(error: any) {\n    console.error('An error occurred:', error);\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            ReactiveFormsModule\n                            MatSnackBarModule\n                            CommonModule\n                            RouterModule\n                            RouterLink\n                            MatFormFieldModule\n                            MatInputModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeDetectorRef\n                            \n                            \n                                emailForm\n                            \n                            \n                                isResettingPassowrd\n                            \n                            \n                                isTokenSent\n                            \n                            \n                                linkVerified\n                            \n                            \n                                loading\n                            \n                            \n                                route\n                            \n                            \n                                service\n                            \n                            \n                                snackbar\n                            \n                            \n                                tokenForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendResetToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/reset-password/reset-password.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendResetToken\n                        \n                    \n                \n            \n            \n                \nsendResetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/reset-password/reset-password.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDetectorRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-password/reset-password.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-password/reset-password.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isResettingPassowrd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-password/reset-password.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTokenSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-password/reset-password.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linkVerified\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-password/reset-password.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-password/reset-password.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-password/reset-password.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-password/reset-password.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snackbar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-password/reset-password.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tokenForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    token: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-password/reset-password.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnInit, ViewChild, inject } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { ActivatedRoute, RouterLink, RouterModule } from '@angular/router';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatSnackBarModule,\n    CommonModule,\n    RouterModule,\n    RouterLink,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  templateUrl: './reset-password.component.html',\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  isTokenSent: any;\n  emailForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n  });\n  isResettingPassowrd: boolean = false;\n  linkVerified = false;\n  loading = true;\n\n  \n  tokenForm = new FormGroup({\n    token: new FormControl(''),\n  });\n  snackbar = inject(MatSnackBar);\n  service = inject(AuthService);\n  route = inject(ActivatedRoute);\n  changeDetectorRef = inject(ChangeDetectorRef);\n  ngOnInit(): void {}\n  \n  sendResetToken(): void {\n    if (this.emailForm.invalid) return;\n    this.service.resetPassword(this.emailForm.value.email).subscribe(\n      (response: any) => {\n        this.snackbar.open('Password reset Link is send to your email.', '', {\n          duration: 300,\n          direction: 'rtl',\n        });\n      },\n      (error) => {\n        this.snackbar.open('Your Email was not found', '', {\n          duration: 300,\n          direction: 'rtl',\n        });\n      }\n    );\n  }\n  \n\n\n}\n\n    \n\n    \n        \n\n  \n    \n      Forgot your password?\n    \n    \n      Don't fret! Just type in your email and we will send you a code to reset your password!\n      \n        \n      \n      \n        Back to login\n        Send reset token\n      \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Forgot your password?              Don\\'t fret! Just type in your email and we will send you a code to reset your password!                                  Back to login        Send reset token              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RolesPermissionsComponent.html":{"url":"components/RolesPermissionsComponent.html","title":"component - RolesPermissionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RolesPermissionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/admin/roles-permissions/roles-permissions.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-roles-permissions\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatFormFieldModule\n                            ReactiveFormsModule\n                            MatInputModule\n                            MatSlideToggleModule\n                            CommonModule\n                            MatButtonModule\n                \n            \n\n            \n                styleUrls\n                ./roles-permissions.component.css\n            \n\n\n\n            \n                templateUrl\n                ./roles-permissions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                features\n                            \n                            \n                                rolesForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPermissionsForm\n                            \n                            \n                                initializeRoles\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    roles\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, rolesPermissionsService: RolesPermissionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/admin/roles-permissions/roles-permissions.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesPermissionsService\n                                                  \n                                                        \n                                                                        RolesPermissionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPermissionsForm\n                        \n                    \n                \n            \n            \n                \ncreatePermissionsForm(rolePermissions: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/admin/roles-permissions/roles-permissions.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rolePermissions\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeRoles\n                        \n                    \n                \n            \n            \n                \ninitializeRoles(permissions: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/admin/roles-permissions/roles-permissions.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                permissions\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/admin/roles-permissions/roles-permissions.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/admin/roles-permissions/roles-permissions.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        features\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'sharePassword', 'createPassword', 'totp', 'storeFiles', 'notes',\n    'cardDetails', 'proofID', 'createOrganization', 'addUser', 'inviteUser',\n    'deleteUser', 'enableMFA', 'export', 'import',\n    'viewPassword', 'editPassword', 'deletePassword',\n    'viewFile', 'editFile', 'deleteFile',\n    'viewNote', 'editNote', 'deleteNote',\n    'viewCard', 'editCard', 'deleteCard',\n    'viewProofID', 'editProofID', 'deleteProofID',\n    'createTag', 'deleteTag',\n    'viewComment', 'addComment', 'deleteComment'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/admin/roles-permissions/roles-permissions.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rolesForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/admin/roles-permissions/roles-permissions.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        roles\n                    \n                \n\n                \n                    \n                        getroles()\n                    \n                \n                            \n                                \n                                    Defined in src/app/dashboard/admin/roles-permissions/roles-permissions.component.ts:47\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, ReactiveFormsModule } from '@angular/forms';\nimport { RolesPermissionsService } from '../../../services/roles-permissions.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-roles-permissions',\n  standalone: true,\n  imports: [MatFormFieldModule, ReactiveFormsModule, MatInputModule, MatSlideToggleModule, CommonModule, MatButtonModule],\n  templateUrl: './roles-permissions.component.html',\n  styleUrls: ['./roles-permissions.component.css']\n})\nexport class RolesPermissionsComponent implements OnInit {\n  rolesForm: FormGroup;\n  features = [\n    'sharePassword', 'createPassword', 'totp', 'storeFiles', 'notes',\n    'cardDetails', 'proofID', 'createOrganization', 'addUser', 'inviteUser',\n    'deleteUser', 'enableMFA', 'export', 'import',\n    'viewPassword', 'editPassword', 'deletePassword',\n    'viewFile', 'editFile', 'deleteFile',\n    'viewNote', 'editNote', 'deleteNote',\n    'viewCard', 'editCard', 'deleteCard',\n    'viewProofID', 'editProofID', 'deleteProofID',\n    'createTag', 'deleteTag',\n    'viewComment', 'addComment', 'deleteComment'\n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private rolesPermissionsService: RolesPermissionsService\n  ) {\n    this.rolesForm = this.fb.group({\n      roles: this.fb.array([])\n    });\n  }\n\n  ngOnInit(): void {\n    this.rolesPermissionsService.getRolesPermissions().subscribe((permissions: any) => {\n      this.initializeRoles(permissions);\n    });\n  }\n\n  get roles(): FormArray {\n    return this.rolesForm.get('roles') as FormArray;\n  }\n\n  initializeRoles(permissions: any) {\n    // Clear existing roles if any\n    this.roles.clear();\n\n    // Iterate over roles and initialize FormGroups for each\n    Object.keys(permissions).forEach(role => {\n      const rolePermissions = permissions[role];\n      this.roles.push(this.fb.group({\n        roleName: [role],\n        permissions: this.createPermissionsForm(rolePermissions)\n      }));\n    });\n  }\n\n  createPermissionsForm(rolePermissions: any): FormGroup {\n    const permissions = this.features.reduce((acc, feature) => ({\n      ...acc,\n      [feature]: [rolePermissions[feature] || false]\n    }), {});\n    return this.fb.group(permissions);\n  }\n\n  onSubmit() {\n    if (this.rolesForm.valid) {\n      const rolesPermissions = this.rolesForm.value.roles.reduce((acc: any, roleObj: any) => {\n        acc[roleObj.roleName] = roleObj.permissions;\n        return acc;\n      }, {});\n      this.rolesPermissionsService.updateRolePermissions('admin', rolesPermissions['admin']);\n      this.rolesPermissionsService.updateRolePermissions('user', rolesPermissions['user']);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        MFA Authentication Settings\n        Manage your multi-factor authentication settings.\n    \n    Save Changes\n\n\n    \n      \n        \n          {{ role.value.roleName | titlecase }} Permissions\n          \n            \n              \n                {{ feature | titlecase }}\n              \n            \n          \n        \n      \n    \n   \n  \n  \n    \n\n    \n                \n                    ./roles-permissions.component.css\n                \n                .permissions-container {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    padding: 20px;\n  }\n  \n  .role-section {\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    padding: 20px;\n    background-color: #f9f9f9;\n  }\n  \n  .permissions-form-group {\n    margin-bottom: 20px;\n  }\n  \n  mat-slide-toggle {\n    display: block;\n    margin: 10px 0;\n  }\n  \n  .submit-button {\n    text-align: right;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            MFA Authentication Settings        Manage your multi-factor authentication settings.        Save Changes                            {{ role.value.roleName | titlecase }} Permissions                                                    {{ feature | titlecase }}                                                             '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RolesPermissionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesPermissionsService.html":{"url":"injectables/RolesPermissionsService.html","title":"injectable - RolesPermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesPermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/roles-permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                rolesPermissions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRolesPermissions\n                            \n                            \n                                updateRolePermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRolesPermissions\n                        \n                    \n                \n            \n            \n                \ngetRolesPermissions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/roles-permissions.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRolePermissions\n                        \n                    \n                \n            \n            \n                \nupdateRolePermissions(role: string, permissions: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/roles-permissions.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                permissions\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rolesPermissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({\n    admin: {\n      // Existing permissions\n      sharePassword: true,\n      createPassword: true,\n      totp: true,\n      storeFiles: true,\n      notes: true,\n      cardDetails: true,\n      proofID: true,\n      createOrganization: true,\n      addUser: true,\n      inviteUser: true,\n      deleteUser: true,\n      enableMFA: true,\n      // New permissions\n      export: true,\n      import: true,\n      viewPassword: true,\n      editPassword: true,\n      deletePassword: true,\n      viewFile: true,\n      editFile: true,\n      deleteFile: true,\n      viewNote: true,\n      editNote: true,\n      deleteNote: true,\n      viewCard: true,\n      editCard: true,\n      deleteCard: true,\n      viewProofID: true,\n      editProofID: true,\n      deleteProofID: true,\n      createTag: true,\n      deleteTag: true,\n      viewComment: true,\n      addComment: true,\n      deleteComment: true,\n    },\n    user: {\n      // Existing permissions\n      sharePassword: false,\n      createPassword: false,\n      totp: false,\n      storeFiles: false,\n      notes: false,\n      cardDetails: false,\n      proofID: false,\n      viewOrganization: false,\n      inviteUser: false,\n      enableMFA: false,\n      // New permissions\n      viewPassword: false,\n      viewFile: false,\n      viewNote: false,\n      viewCard: false,\n      viewProofID: false,\n      viewComment: false,\n      addComment: false\n    }\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/services/roles-permissions.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolesPermissionsService {\n  private rolesPermissions = new BehaviorSubject({\n    admin: {\n      // Existing permissions\n      sharePassword: true,\n      createPassword: true,\n      totp: true,\n      storeFiles: true,\n      notes: true,\n      cardDetails: true,\n      proofID: true,\n      createOrganization: true,\n      addUser: true,\n      inviteUser: true,\n      deleteUser: true,\n      enableMFA: true,\n      // New permissions\n      export: true,\n      import: true,\n      viewPassword: true,\n      editPassword: true,\n      deletePassword: true,\n      viewFile: true,\n      editFile: true,\n      deleteFile: true,\n      viewNote: true,\n      editNote: true,\n      deleteNote: true,\n      viewCard: true,\n      editCard: true,\n      deleteCard: true,\n      viewProofID: true,\n      editProofID: true,\n      deleteProofID: true,\n      createTag: true,\n      deleteTag: true,\n      viewComment: true,\n      addComment: true,\n      deleteComment: true,\n    },\n    user: {\n      // Existing permissions\n      sharePassword: false,\n      createPassword: false,\n      totp: false,\n      storeFiles: false,\n      notes: false,\n      cardDetails: false,\n      proofID: false,\n      viewOrganization: false,\n      inviteUser: false,\n      enableMFA: false,\n      // New permissions\n      viewPassword: false,\n      viewFile: false,\n      viewNote: false,\n      viewCard: false,\n      viewProofID: false,\n      viewComment: false,\n      addComment: false\n    }\n  });\n\n  getRolesPermissions() {\n    return this.rolesPermissions.asObservable();\n  }\n\n  updateRolePermissions(role: string, permissions: any) {\n    const currentPermissions: any = this.rolesPermissions.getValue();\n    this.rolesPermissions.next({\n      ...currentPermissions,\n      [role]: { ...currentPermissions[role], ...permissions }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SecurityComponent.html":{"url":"components/SecurityComponent.html","title":"component - SecurityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SecurityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/profile/security/security.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-security\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatFormFieldModule\n                            MatIconModule\n                            MatCardModule\n                            MatButtonModule\n                            MatInputModule\n                            MatSelectModule\n                            MatOptionModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./security.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                commonService\n                            \n                            \n                                securityForm\n                            \n                            \n                                securityQuestionService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadSecurityQuestions\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                toggleSideBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/profile/security/security.component.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadSecurityQuestions\n                        \n                    \n                \n            \n            \n                \nloadSecurityQuestions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/security/security.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/security/security.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/security/security.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideBar\n                        \n                    \n                \n            \n            \n                \ntoggleSideBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/security/security.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        commonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/security/security.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        securityForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    securityQuestion1: new FormControl('', Validators.required),\n    securityAnswer1: new FormControl('', Validators.required),\n    securityQuestion2: new FormControl('', Validators.required),\n    securityAnswer2: new FormControl('', Validators.required)\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/security/security.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        securityQuestionService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SecurityQuestionService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/security/security.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output, inject, output } from '@angular/core';\nimport { FormGroup, FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { SecurityQuestionService } from '../../../services/security-question.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonService } from '../../../services/common.service';\n\n@Component({\n  selector: 'app-security',\n  standalone: true,\n  imports: [ReactiveFormsModule, MatFormFieldModule, MatIconModule, MatCardModule, MatButtonModule, MatInputModule, MatSelectModule, MatOptionModule],\n  templateUrl: './security.component.html',\n})\nexport class SecurityComponent implements OnInit {\n  readonly commonService = inject(CommonService);\n  securityQuestionService = inject(SecurityQuestionService);\n  securityForm = new FormGroup({\n    securityQuestion1: new FormControl('', Validators.required),\n    securityAnswer1: new FormControl('', Validators.required),\n    securityQuestion2: new FormControl('', Validators.required),\n    securityAnswer2: new FormControl('', Validators.required)\n  });\n  constructor() {}\n\n  ngOnInit(): void {\n    this.loadSecurityQuestions();\n  }\n\n  loadSecurityQuestions(): void {\n    this.securityQuestionService.getSecurityQuestions().subscribe(\n      (data: any) => {\n          const questions = data[0].securityQuestions\n          this.securityForm.setValue({\n            securityQuestion1: questions[0]?.question || '',\n            securityAnswer1: questions[0]?.answer || '',\n            securityQuestion2: questions[1]?.question || '',\n            securityAnswer2: questions[1]?.answer || ''\n          });          \n      },\n      (error: any) => console.error('Error loading security questions', error)\n    );\n  }\n\n  onSubmit(): void {\n    if (this.securityForm.valid) {\n      const formValues = this.securityForm.value;\n\n      // Prepare the securityQuestions array from form values\n      const securityQuestions = [\n        {\n          question: formValues.securityQuestion1,\n          answer: formValues.securityAnswer1\n        },\n        {\n          question: formValues.securityQuestion2,\n          answer: formValues.securityAnswer2\n        }\n      ];\n\n      // Call API to update security questions and answers\n      this.securityQuestionService.createSecurityQuestion(securityQuestions).subscribe(\n        () => {\n          console.log('Security questions updated successfully!');\n        },\n        (error: any) => console.error('Error updating security questions', error)\n      );\n    } else {\n      console.log('Please fill in all required fields');\n    }\n  }\n  toggleSideBar(): void {\n    this.commonService.toggleProfileSideBar();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                menu\n              \n             Security Questions\n\n        \n        Save Changes\n      \n    \n        \n            Question 1\n            \n            What is your mother's maiden name?\n            What is your favorite pet's name?\n            What is your childhood nickname?\n            \n        \n        \n            Answer 1\n            \n        \n\n        \n            Question 2\n            \n            What is your favorite food?\n            What is your favorite travel destination?\n            What is your favorite hobby?\n            \n        \n        \n            Answer 2\n            \n        \n\n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        menu                           Security Questions                Save Changes                              Question 1                        What is your mother\\'s maiden name?            What is your favorite pet\\'s name?            What is your childhood nickname?                                        Answer 1                                        Question 2                        What is your favorite food?            What is your favorite travel destination?            What is your favorite hobby?                                        Answer 2                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SecurityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SecurityQuestionService.html":{"url":"injectables/SecurityQuestionService.html","title":"injectable - SecurityQuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SecurityQuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/security-question.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSecurityQuestion\n                            \n                            \n                                deleteSecurityQuestion\n                            \n                            \n                                getSecurityQuestions\n                            \n                            \n                                updateSecurityQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/security-question.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createSecurityQuestion\n                        \n                    \n                \n            \n            \n                \ncreateSecurityQuestion(formValues: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/security-question.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formValues\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSecurityQuestion\n                        \n                    \n                \n            \n            \n                \ndeleteSecurityQuestion(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/security-question.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSecurityQuestions\n                        \n                    \n                \n            \n            \n                \ngetSecurityQuestions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/security-question.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSecurityQuestion\n                        \n                    \n                \n            \n            \n                \nupdateSecurityQuestion(id: string, question: string, answer: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/security-question.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                question\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                answer\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.api_url}/security-questions`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/security-question.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecurityQuestionService {\n\n  private apiUrl = `${environment.api_url}/security-questions`;  // Your API URL\n\n  constructor(private http: HttpClient) { }\n\n  // Create a new security question\n  createSecurityQuestion(formValues: any): Observable {\n    return this.http.post(this.apiUrl, formValues);\n  }\n\n  // Get all security questions for a user\n  getSecurityQuestions(): Observable {\n    return this.http.get(`${this.apiUrl}`);\n  }\n\n  // Update a security question\n  updateSecurityQuestion(id: string, question: string, answer: string): Observable {\n    return this.http.put(`${this.apiUrl}/${id}`, { question, answer });\n  }\n\n  // Delete a security question\n  deleteSecurityQuestion(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShareDialogComponent.html":{"url":"components/ShareDialogComponent.html","title":"component - ShareDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShareDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialog/share-dialog/share-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-share-dialog\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatFormFieldModule\n                            MatSelectModule\n                            MatToolbarModule\n                            MatButtonModule\n                            MatOptionModule\n                            ReactiveFormsModule\n                            CommonModule\n                            MatInputModule\n                            FormsModule\n                            MatCheckboxModule\n                            MatListModule\n                            MatIconModule\n                            MatAutocompleteModule\n                            MatChipsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./share-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./share-dialog.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availablePermissions\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                filteredUsers\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                shareForm\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter\n                            \n                            \n                                close\n                            \n                            \n                                    Private\n                                loadUsers\n                            \n                            \n                                onOptionSelected\n                            \n                            \n                                removeUser\n                            \n                            \n                                share\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: literal type, fb: FormBuilder, userService: AuthService, sharedItemService: SharedItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialog/share-dialog/share-dialog.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedItemService\n                                                  \n                                                        \n                                                                        SharedItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    _filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/share-dialog/share-dialog.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/share-dialog/share-dialog.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/share-dialog/share-dialog.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOptionSelected\n                        \n                    \n                \n            \n            \n                \nonOptionSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/share-dialog/share-dialog.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeUser\n                        \n                    \n                \n            \n            \n                \nremoveUser(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/share-dialog/share-dialog.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        share\n                        \n                    \n                \n            \n            \n                \nshare()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/share-dialog/share-dialog.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        availablePermissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['view', 'edit', 'delete']\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/share-dialog/share-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/share-dialog/share-dialog.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/share-dialog/share-dialog.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/share-dialog/share-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shareForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/share-dialog/share-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/share-dialog/share-dialog.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { startWith } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\nimport { MatInputModule } from '@angular/material/input';\nimport { CommonModule } from '@angular/common';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SharedItemService } from '../../services/shared-item.service';\n\n@Component({\n  selector: 'app-share-dialog',\n  standalone: true,\n  imports: [MatFormFieldModule,MatSelectModule,MatToolbarModule, MatButtonModule, MatOptionModule, ReactiveFormsModule,CommonModule, MatInputModule, FormsModule, MatCheckboxModule, MatListModule, MatIconModule, MatAutocompleteModule, MatChipsModule],\n  templateUrl: './share-dialog.component.html',\n  styleUrl: './share-dialog.component.css'\n})\nexport class ShareDialogComponent {\n  users: any[] = []; // Replace `any` with the appropriate user type\n  filteredUsers: any[] = [];\n  selectedUsers: any[] = []; // Array to store selected users\n  shareForm: FormGroup;\n  availablePermissions = ['view', 'edit', 'delete'];\n\n\n  constructor(\n    private dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: { items: string, itemType: string },\n    private fb: FormBuilder,\n    private userService: AuthService,\n    private sharedItemService: SharedItemService\n  ) {\n    this.shareForm = this.fb.group({\n      permissions: [[]], // For multi-select permissions\n\n      users: [[]] // For selected users\n    });\n\n\n    this.loadUsers();\n  }\n\n  private loadUsers() {\n    this.userService.getUsers().subscribe((users: any[]) => {\n      this.users = users;\n      this.shareForm.get('users')?.valueChanges.pipe(\n        startWith('')).subscribe(value =>\n          this.filteredUsers =  this._filter(value))\n    });\n  }\n\n  private _filter(value: string): any[] {\n    const filterValue = value?.toLowerCase();\n    return this.users.filter(user => user.recipient.name.toLowerCase().includes(filterValue));\n  }\n\n  onOptionSelected(event: any) {\n    const user = event.option.value;\n    if (this.selectedUsers.indexOf(user) === -1) {\n      this.selectedUsers.push(user);\n    }\n    this.shareForm.controls['users'].setValue('')\n  }\n\n  removeUser(user: any) {\n    this.selectedUsers = this.selectedUsers.filter(u => u !== user);\n  }\n\n  share() {\n    const permissions = this.shareForm.value.permissions;\n    this.sharedItemService.shareItem({\n      itemId: this.data.items,\n      itemType: this.data.itemType,\n      users: this.selectedUsers.map(user => ({ userId: user._id, permissions }))\n    }).subscribe(() => {\n      this.dialogRef.close(true);\n    });\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n\n    \n\n    \n        \n    Share {{ data.itemType }}\n  \n\n    \n        \n          Search Users\n          \n          \n            \n              {{ user. recipient.name }}\n\n            \n          \n        \n      \n        \n          \n            {{ user.name }}\n            cancel\n          \n        \n      \n        \n            Permissions\n            \n              \n                {{ permission }}\n              \n            \n          \n    \n\n\n  Cancel\n  Share\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Share {{ data.itemType }}                        Search Users                                              {{ user. recipient.name }}                                                                  {{ user.name }}            cancel                                            Permissions                                          {{ permission }}                                          Cancel  Share'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShareDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SharedItemService.html":{"url":"injectables/SharedItemService.html","title":"injectable - SharedItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SharedItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/shared-item.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                shareItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/shared-item.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        shareItem\n                        \n                    \n                \n            \n            \n                \nshareItem(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/shared-item.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.api_url}/share/share-item`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/shared-item.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment.development';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedItemService {\n  private apiUrl = `${environment.api_url}/share/share-item`; // Update with your API URL\n\n  constructor(private http: HttpClient) { }\n\n  shareItem(data: any): Observable {\n    return this.http.post(this.apiUrl, data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SideNavComponent.html":{"url":"components/SideNavComponent.html","title":"component - SideNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SideNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/side-nav/side-nav.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-side-nav\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            MatIconModule\n                            ReactiveFormsModule\n                            MatExpansionModule\n                            MatListModule\n                            FormsModule\n                            MatFormFieldModule\n                            MatSelectModule\n                            MatOptionModule\n                            CommonModule\n                            MatDialogModule\n                            RouterModule\n                \n            \n\n\n            \n                styles\n                \n    .mat-expansion-panel  {\n    display: block !important;\n    border-radius: 0 !important;\n    box-shadow:none !important;\n}\n  \n            \n\n\n            \n                templateUrl\n                ./side-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                commonService\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                            \n                                folderId\n                            \n                            \n                                folders\n                            \n                            \n                                    Private\n                                    Readonly\n                                folderService\n                            \n                            \n                                openSections\n                            \n                            \n                                    Private\n                                    Readonly\n                                route\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterByFolder\n                            \n                            \n                                isSectionOpen\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openCreateFolderDialog\n                            \n                            \n                                sectionClosed\n                            \n                            \n                                sectionOpened\n                            \n                            \n                                toggleSideBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterByFolder\n                        \n                    \n                \n            \n            \n                \nfilterByFolder(section: string, folderId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/side-nav/side-nav.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                folderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSectionOpen\n                        \n                    \n                \n            \n            \n                \nisSectionOpen(section: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/side-nav/side-nav.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/side-nav/side-nav.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCreateFolderDialog\n                        \n                    \n                \n            \n            \n                \nopenCreateFolderDialog(event: MouseEvent, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/side-nav/side-nav.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sectionClosed\n                        \n                    \n                \n            \n            \n                \nsectionClosed(section: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/side-nav/side-nav.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sectionOpened\n                        \n                    \n                \n            \n            \n                \nsectionOpened(section: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/side-nav/side-nav.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideBar\n                        \n                    \n                \n            \n            \n                \ntoggleSideBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/side-nav/side-nav.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        commonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/side-nav/side-nav.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialog)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/side-nav/side-nav.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        folderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/side-nav/side-nav.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        folders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/side-nav/side-nav.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        folderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FolderService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/side-nav/side-nav.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    passwords: true,\n    notes: false,\n    cards: false,\n    identity: false,\n    file: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/side-nav/side-nav.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/side-nav/side-nav.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/side-nav/side-nav.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { CommonService } from '../../services/common.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\nimport { CommonModule } from '@angular/common';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatListModule } from '@angular/material/list';\nimport { FolderService } from '../../services/folder.service';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { CreateFolderDialogComponent } from '../../dialog/create-folder-dialog/create-folder-dialog.component';\n\n@Component({\n  selector: 'app-side-nav',\n  standalone: true,\n  imports: [\n    RouterModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatExpansionModule,\n    MatListModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatOptionModule,\n    CommonModule,\n    MatDialogModule,\n    RouterModule\n  ],\n  templateUrl: './side-nav.component.html',\n  styles: `\n    .mat-expansion-panel  {\n    display: block !important;\n    border-radius: 0 !important;\n    box-shadow:none !important;\n}\n  `,\n})\nexport class SideNavComponent implements OnInit {\n  \n  readonly commonService = inject(CommonService);\n  private readonly folderService = inject(FolderService);\n  private readonly dialog = inject(MatDialog)\n  private readonly router = inject(Router);\n  private readonly route = inject(ActivatedRoute)\n  folderId!: string;\n  folders: any[] = [];\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: any) => {\n      this.folderId = params.get('folderId');  // Get folderId from the route\n      if (this.folderId) {\n        // Logic for handling specific folder\n        console.log(`Folder ID: ${this.folderId}`);\n      } else {\n        // Logic for handling when no folderId is provided\n        console.log('No folder ID provided, showing all passwords');\n      }\n    });\n  }\n  openSections: { [key: string]: any } = {\n    passwords: true,\n    notes: false,\n    cards: false,\n    identity: false,\n    file: false,\n  };\n\n  sectionOpened(section: string) {\n    this.openSections[section] = true;\n    this.folderService.getFoldersByType(section).subscribe({\n      next: (folders) => {\n        this.folders = folders;\n      },\n      error: (error) => {\n        console.error(error);\n      },\n    });\n  }\n\n  sectionClosed(section: string) {\n    this.openSections[section] = false;\n  }\n\n  isSectionOpen(section: string): boolean {\n    return this.openSections[section];\n  }\n\n  filterByFolder(section: string, folderId: string) {\n    console.log(`Filtering ${section} by folder ID: ${folderId}`);\n    // Implement your filtering logic here based on the section and selected folder\n    this.router.navigateByUrl(`/dashboard/${section}/${folderId}`)\n  }\n  toggleSideBar(): void {\n    this.commonService.toggleSideBar();\n  }\n\n  openCreateFolderDialog(event: MouseEvent, type: string): void {\n    event.stopPropagation(); // Prevent the event from bubbling up\n    const dialogRef = this.dialog.open(CreateFolderDialogComponent);\n  \n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.folderService.createFolder({ name: result, type }).subscribe(\n          (folder) => {\n            // Handle successful folder creation (e.g., refresh the folder list)\n          },\n          (error) => {\n            console.error('Error creating folder:', error);\n          }\n        );\n      }\n    });\n  }\n  \n}\n\n    \n\n    \n        \n  \n    \n    \n     0\">\n      \n        \n          lock\n          Passwords\n          \n            create_new_folder\n          \n        \n      \n      \n      \n      \n        \n          \n            folder\n            {{ folder.name }}\n          \n        \n      \n    \n\n    \n    \n      \n        \n          note\n          Secure Notes\n          \n            create_new_folder\n          \n        \n      \n      \n      \n      \n        \n          \n            folder\n            {{ folder.name }}\n          \n        \n      \n    \n\n    \n    \n      \n        \n          credit_card\n          Cards\n          \n            create_new_folder\n          \n        \n      \n      \n      \n      \n        \n          \n            folder\n            {{ folder.name }}\n          \n        \n      \n    \n\n    \n    \n      \n        \n          account_box\n          Identity\n          \n            create_new_folder\n          \n        \n      \n      \n      \n      \n        \n          \n            folder\n            {{ folder.name }}\n          \n        \n      \n    \n\n    \n    \n      \n        \n          folder\n          File Storage\n          \n            create_new_folder\n          \n        \n      \n      \n      \n      \n        \n          \n            folder\n            {{ folder.name }}\n          \n        \n      \n    \n    \n  \n\n\n    \n\n    \n            \n    .mat-expansion-panel  {\n    display: block !important;\n    border-radius: 0 !important;\n    box-shadow:none !important;\n}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '               0\">                        lock          Passwords                      create_new_folder                                                                        folder            {{ folder.name }}                                                            note          Secure Notes                      create_new_folder                                                                        folder            {{ folder.name }}                                                            credit_card          Cards                      create_new_folder                                                                        folder            {{ folder.name }}                                                            account_box          Identity                      create_new_folder                                                                        folder            {{ folder.name }}                                                            folder          File Storage                      create_new_folder                                                                        folder            {{ folder.name }}                                  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SideNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SupportComponent.html":{"url":"components/SupportComponent.html","title":"component - SupportComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SupportComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/support/support.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-support\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            CommonModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatButtonModule\n                            MatExpansionModule\n                \n            \n\n            \n                styleUrls\n                ./support.component.css\n            \n\n\n\n            \n                templateUrl\n                ./support.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                            \n                                errorMessage\n                            \n                            \n                                faqs\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitContactForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitContactForm\n                        \n                    \n                \n            \n            \n                \nsubmitContactForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/support/support.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    firstName: '',\n    lastName: '',\n    company: '',\n    email: '',\n    phoneNumber: '',\n    message: '',\n    agreeToPolicies: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/support/support.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/support/support.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faqs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      question: 'How do I reset my password?',\n      answer:\n        'To reset your password, click on the \"Forgot Password?\" link on the login page. You will receive an email with instructions to create a new password.',\n    },\n    {\n      question: 'How secure is my data?',\n      answer:\n        'We employ industry-standard encryption protocols to keep your data safe. Your master password is never stored, ensuring only you have access to your information.',\n    },\n    {\n      question: 'Can I access my passwords on multiple devices?',\n      answer:\n        'Yes, you can log into your account from any device using your credentials. All your data will sync across devices.',\n    },\n    {\n      question: 'What features does this application offer?',\n      answer:\n        'The application supports password storage, notes, cards, file storage, activity reports, user management, and sharing capabilities for collaborative access.',\n    },\n    {\n      question: 'How do I share passwords securely?',\n      answer:\n        'You can share passwords with trusted users directly through the application. Use the \"Share\" option on the password detail page to send a secure link.',\n    },\n    {\n      question: 'What happens if I forget my master password?',\n      answer:\n        'Unfortunately, if you forget your master password, you will need to reset your account. This ensures your data remains secure and inaccessible to anyone but you.',\n    },\n    {\n      question: 'How can I manage my notes?',\n      answer:\n        'You can create, edit, and delete notes in the Notes section. Simply click \"Add Note\" to start, and use the edit option to modify existing notes.',\n    },\n    {\n      question: 'Is my payment card information safe?',\n      answer:\n        'Absolutely! We utilize secure storage methods compliant with PCI-DSS standards to keep your card details safe.',\n    },\n    {\n      question: 'How do I upload and manage files?',\n      answer:\n        'In the File Storage section, you can upload files by clicking \"Upload.\" To manage your files, simply click on any file to view, download, or delete it.',\n    },\n    {\n      question: 'How do I view activity reports?',\n      answer:\n        'Access the Activity Reports section from the main menu. Here, you can filter reports by date and type of activity for detailed insights.',\n    },\n    {\n      question: 'Can I manage users in my organization?',\n      answer:\n        'Yes, as an admin, you can add, edit, or remove users from your organization in the User Management section. You can also assign roles and permissions.',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/support/support.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/support/support.component.ts:92\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\n@Component({\n  selector: 'app-support',\n  standalone: true,\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatExpansionModule,\n  ],\n  templateUrl: './support.component.html',\n  styleUrls: ['./support.component.css'],\n})\nexport class SupportComponent {\n  faqs = [\n    {\n      question: 'How do I reset my password?',\n      answer:\n        'To reset your password, click on the \"Forgot Password?\" link on the login page. You will receive an email with instructions to create a new password.',\n    },\n    {\n      question: 'How secure is my data?',\n      answer:\n        'We employ industry-standard encryption protocols to keep your data safe. Your master password is never stored, ensuring only you have access to your information.',\n    },\n    {\n      question: 'Can I access my passwords on multiple devices?',\n      answer:\n        'Yes, you can log into your account from any device using your credentials. All your data will sync across devices.',\n    },\n    {\n      question: 'What features does this application offer?',\n      answer:\n        'The application supports password storage, notes, cards, file storage, activity reports, user management, and sharing capabilities for collaborative access.',\n    },\n    {\n      question: 'How do I share passwords securely?',\n      answer:\n        'You can share passwords with trusted users directly through the application. Use the \"Share\" option on the password detail page to send a secure link.',\n    },\n    {\n      question: 'What happens if I forget my master password?',\n      answer:\n        'Unfortunately, if you forget your master password, you will need to reset your account. This ensures your data remains secure and inaccessible to anyone but you.',\n    },\n    {\n      question: 'How can I manage my notes?',\n      answer:\n        'You can create, edit, and delete notes in the Notes section. Simply click \"Add Note\" to start, and use the edit option to modify existing notes.',\n    },\n    {\n      question: 'Is my payment card information safe?',\n      answer:\n        'Absolutely! We utilize secure storage methods compliant with PCI-DSS standards to keep your card details safe.',\n    },\n    {\n      question: 'How do I upload and manage files?',\n      answer:\n        'In the File Storage section, you can upload files by clicking \"Upload.\" To manage your files, simply click on any file to view, download, or delete it.',\n    },\n    {\n      question: 'How do I view activity reports?',\n      answer:\n        'Access the Activity Reports section from the main menu. Here, you can filter reports by date and type of activity for detailed insights.',\n    },\n    {\n      question: 'Can I manage users in my organization?',\n      answer:\n        'Yes, as an admin, you can add, edit, or remove users from your organization in the User Management section. You can also assign roles and permissions.',\n    },\n  ];\n\n  contact = {\n    firstName: '',\n    lastName: '',\n    company: '',\n    email: '',\n    phoneNumber: '',\n    message: '',\n    agreeToPolicies: false,\n  };\n\n  successMessage: string = '';\n  errorMessage: string = '';\n\n  submitContactForm() {\n    if (this.contact.firstName && this.contact.email && this.contact.message) {\n      this.successMessage = 'Your message has been sent successfully!';\n      this.errorMessage = '';\n      this.contact = {\n        firstName: '',\n        lastName: '',\n        company: '',\n        email: '',\n        phoneNumber: '',\n        message: '',\n        agreeToPolicies: false,\n      };\n    } else {\n      this.errorMessage = 'Please fill in all required fields.';\n      this.successMessage = '';\n    }\n  }\n}\n\n    \n\n    \n        \n    Support for Safepassvault Application\n  \n    \n      Frequently Asked Questions\n      \n        \n          \n            \n              {{ faq.question }}\n            \n          \n          {{ faq.answer }}\n        \n      \n    \n    \n    \n        \n          \n        \n        \n          Contact Support\n          If you have any questions or need assistance, please fill out the form below:\n        \n        \n          \n            \n              First name\n              \n                \n              \n            \n            \n              Last name\n              \n                \n              \n            \n            \n              Company\n              \n                \n              \n            \n            \n              Email\n              \n                \n              \n            \n            \n              Phone number\n              \n                \n                  Country\n                  \n                    US\n                    CA\n                    EU\n                  \n                  \n                    \n                  \n                \n                \n              \n            \n            \n              Message\n              \n                \n              \n            \n            \n              \n                \n                  Agree to policies\n                  \n                \n              \n              \n                By selecting this, you agree to our\n                privacy policy.\n              \n            \n          \n          \n            Let's talk\n          \n          \n            {{ successMessage }}\n          \n          \n            {{ errorMessage }}\n          \n        \n    \n      \n  \n    \n      Application Features\n      \n        Secure Password Storage: Store all your passwords in one place with encryption to ensure security.\n        Note-Taking Capabilities: Keep important notes related to your accounts or any other information.\n        Card Information Management: Store and manage payment card details securely.\n        File Storage and Management: Upload files and manage them easily within your account.\n        User Authentication: Log in securely to protect your data.\n        Activity Reporting: Monitor user activity for added security and awareness.\n        Organizational Management: Manage users and their permissions within your organization.\n        Password Sharing: Share passwords with trusted users securely through the app.\n      \n    \n  \n    \n      Tips for Strong Passwords\n      \n        Use a mix of uppercase and lowercase letters, numbers, and special characters.\n        Avoid using easily guessable information like birthdays or names.\n        Consider using a password manager to generate and store strong passwords.\n        Regularly update your passwords and enable two-factor authentication when available.\n      \n    \n  \n  \n    \n\n    \n                \n                    ./support.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Support for Safepassvault Application            Frequently Asked Questions                                                  {{ faq.question }}                                {{ faq.answer }}                                                                      Contact Support          If you have any questions or need assistance, please fill out the form below:                                                    First name                                                                                  Last name                                                                                  Company                                                                                  Email                                                                                  Phone number                                                Country                                      US                    CA                    EU                                                                                                                                                              Message                                                                                                                    Agree to policies                                                                              By selecting this, you agree to our                privacy policy.                                                          Let\\'s talk                                {{ successMessage }}                                {{ errorMessage }}                                        Application Features              Secure Password Storage: Store all your passwords in one place with encryption to ensure security.        Note-Taking Capabilities: Keep important notes related to your accounts or any other information.        Card Information Management: Store and manage payment card details securely.        File Storage and Management: Upload files and manage them easily within your account.        User Authentication: Log in securely to protect your data.        Activity Reporting: Monitor user activity for added security and awareness.        Organizational Management: Manage users and their permissions within your organization.        Password Sharing: Share passwords with trusted users securely through the app.                      Tips for Strong Passwords              Use a mix of uppercase and lowercase letters, numbers, and special characters.        Avoid using easily guessable information like birthdays or names.        Consider using a password manager to generate and store strong passwords.        Regularly update your passwords and enable two-factor authentication when available.              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SupportComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagFormCompoent.html":{"url":"components/TagFormCompoent.html","title":"component - TagFormCompoent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TagFormCompoent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialog/password-form/password-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tag\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButtonModule\n                            MatDialogModule\n                            MatSnackBarModule\n                            ReactiveFormsModule\n                            MatFormFieldModule\n                            MatInputModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./tag-component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialogRef\n                            \n                            \n                                service\n                            \n                            \n                                snackBar\n                            \n                            \n                                tagForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTag\n                        \n                    \n                \n            \n            \n                \naddTag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/password-form/password-form.component.ts:197\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:189\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PasswordService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:194\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:195\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', Validators.required),\n    description: new FormControl('')\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/password-form/password-form.component.ts:190\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, inject, model, signal } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { PasswordService } from '../../services/password.service';\nimport { AES } from 'crypto-js';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { CommonModule } from '@angular/common';\nimport { debounceTime, switchMap, tap } from 'rxjs/operators';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-password-form',\n  standalone: true,\n  imports: [FormsModule, ReactiveFormsModule, MatButtonModule, MatToolbarModule, MatFormFieldModule, CommonModule, MatInputModule, MatAutocompleteModule, MatDialogModule, MatCheckboxModule, MatChipsModule, MatIconModule],\n  templateUrl: './password-form.component.html',\n})\nexport class PasswordFormComponent implements OnInit {\n  isLoading: boolean = false;\n  passwordForm = new FormGroup({\n    _id: new FormControl(),\n    name: new FormControl(''),\n    description: new FormControl(''),\n    website: new FormControl('', [Validators.required, this.urlValidator()]), // Added URL validation\n    username: new FormControl('', Validators.required),\n    password: new FormControl('', [Validators.required, this.strongPasswordValidator()]), // Added strong password validation\n    tags: new FormControl(),\n    searchTerm: new FormControl('')\n  });\n  \n  searchTermSubject: Subject = new Subject();\n  readonly dialog = inject(MatDialog)\n  readonly formbuilder = inject(FormBuilder);\n  readonly passwordService = inject(PasswordService)\n  readonly data = inject(MAT_DIALOG_DATA);\n  readonly detectorRef = inject(ChangeDetectorRef)\n  readonly dialogRef = inject(MatDialogRef);\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  readonly tagsName = signal(['']);\n  tags: any[] = []\n\n  ngOnInit(): void {\n    this.passwordForm.patchValue(this.data.password)\n    const tagIds: any[] = [];\n    this.data?.password?.tags.forEach((tag: any) => {\n      this.tagsName.update(tagNam => [...tagNam, tag.name])\n      tagIds.push(tag._id)\n    });\n    this.searchTermSubject.pipe(\n      // debounceTime(300), // Delay of 300ms\n      switchMap(term => this.passwordService.searchTags(term))\n    ).subscribe(\n      (res) => {\n        this.tags = res;\n        this.isLoading = false;\n        this.detectorRef.detectChanges();\n      },\n      (error) => {\n        this.tags = [];\n        this.isLoading = false; // Ensure loading is false on error as well\n        console.error(\"Error fetching the Tags, Error: \", error);\n      }\n    );\n    this.passwordForm.get('tags')?.setValue(tagIds);\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    const tags = this.passwordForm.value.tags\n    this.passwordForm.controls.tags.setValue([...tags, event.option.value._id])\n    this.tagsName.update(tagname => [...tagname, event.option.viewValue])\n    this.passwordForm.controls.searchTerm.setValue('');\n    event.option.deselect();\n    this.detectorRef.detectChanges();\n  }\n\n  searchTags(): void {\n    const searchTerm = this.passwordForm.value.searchTerm?.trim().toLowerCase();\n    if (searchTerm) {\n      this.isLoading = true;\n      this.searchTermSubject.next(searchTerm); // Emit the current search term\n    } else {\n      this.tags = []; // Clear tags if search term is empty\n      this.isLoading = false;\n    }\n  }\n\n  addPassword(): void {\n    if (this.passwordForm.invalid) {\n      return;\n    }\n    const fixedKey =  this.passwordForm?.value._id? this.data?.password.key :this.generateSecureKey(32);\n    const encryptedPassword = AES.encrypt(\n      this.passwordForm?.value?.password ?? '',\n      fixedKey\n    );\n    // Create the new password object  \n    const newPasswordObject = {\n      website: this.passwordForm?.get('website')?.value,\n      username: this.passwordForm?.get('username')?.value,\n      password: encryptedPassword.toString(),\n      key: fixedKey,\n      name: this.passwordForm.value.name,\n      tags: this.passwordForm.value.tags,\n      description: this.passwordForm.value.description\n    };\n\n    if (!this.passwordForm?.value._id) {\n      this.passwordService\n        .addPassword(newPasswordObject)\n\n        .subscribe(() => {\n          this.passwordForm?.reset(); // Clear the form\n          this.dialogRef.close(true);\n        });\n    } else {\n      // Update the password using an observable\n      this.passwordService\n        .updatePassword(this.passwordForm?.value._id, newPasswordObject)\n\n        .subscribe(() => {\n          this.passwordForm?.reset(); // Clear the form\n          this.dialogRef.close(true);\n        });\n    }\n    // Send the new password object to the backend using an observable\n  }\n\n  generateSecureKey(length: number): string {\n    const characters =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+~';\n    let key = '';\n    for (let i = 0; i  {\n    //   const index = fruits.indexOf(fruit);\n    //   if (index  {\n      const password = control.value;\n      const regex = /(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[^\\s]{8,}/;\n      return regex.test(password) ? null : { strongPassword: true };\n    };\n  }\n\n  urlValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const urlRegex = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w.-]+)+[\\w\\-._~:/?#[\\]@!$&'()*+,;=.]+$/;\n      return urlRegex.test(control.value) ? null : { url: true };\n    };\n  }\n}\n\n@Component({\n  selector: 'app-tag',\n  templateUrl: \"./tag-component.html\",\n  standalone: true,\n  imports: [MatButtonModule, MatDialogModule, MatSnackBarModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TagFormCompoent {\n  dialogRef = inject(MatDialogRef)\n  tagForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    description: new FormControl('')\n  })\n  service = inject(PasswordService)\n  snackBar = inject(MatSnackBar)\n\n  addTag(): void {\n    this.service.addTag(this.tagForm.value).pipe(tap()).subscribe((res) => {\n      this.snackBar.open('Tag Saved Successfully', 'close', {\n        duration: 3000\n      })\n      this.dialogRef.close(res);\n    })\n  }\n}\n    \n\n    \n        Tag Creation Form\n\n    \n        \n            name -->\n            \n          \n          \n             Description (optional) -->\n            \n          \n    \n\n\n    \n       Add Tag\n    \n    Close\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Tag Creation Form                        name -->                                             Description (optional) -->                                     Add Tag        Close'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagFormCompoent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserFormComponent.html":{"url":"components/UserFormComponent.html","title":"component - UserFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialog/user-form/user-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatFormFieldModule\n                            FormsModule\n                            ReactiveFormsModule\n                            MatInputModule\n                            MatSelectModule\n                            CommonModule\n                            MatButtonModule\n                            MatDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-form.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                organizations\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadOrganizations\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, organizationService: OrganizationService, dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialog/user-form/user-form.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadOrganizations\n                        \n                    \n                \n            \n            \n                \nloadOrganizations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/user-form/user-form.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/user-form/user-form.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/user-form/user-form.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/user-form/user-form.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/user-form/user-form.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/user-form/user-form.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organizations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/user-form/user-form.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/user-form/user-form.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { OrganizationService } from '../../services/organization.service';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-user-form',\n  standalone: true,\n  imports: [MatFormFieldModule, FormsModule, ReactiveFormsModule, MatInputModule, MatSelectModule, CommonModule, MatButtonModule, MatDialogModule],\n  templateUrl: './user-form.component.html',\n  styleUrl: './user-form.component.css'\n})\nexport class UserFormComponent {\n  userForm: FormGroup;\n  organizations: any[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private organizationService: OrganizationService,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.userForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phone: [''],\n      organization: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadOrganizations();\n  }\n\n  loadOrganizations(): void {\n    this.organizationService.getOrganizations().subscribe(\n      (data: any) => {\n        this.organizations = data;\n      },\n      (error: any) => {\n        console.error('Error loading organizations:', error);\n      }\n    );\n  }\n\n  onSubmit(): void {\n    if (this.userForm.valid) {\n      // Handle form submission logic here\n      this.organizationService.sendInvitation(this.userForm.value.organization, this.userForm.value).subscribe((res)=>{\n        this.dialogRef.close(this.userForm.value);\n\n      })\n    }\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Create User\n\n  \n    \n      Name\n      \n      \n        Name is required\n      \n    \n\n    \n      Email\n      \n      \n        Email is required\n      \n      \n        Enter a valid email\n      \n    \n\n    \n      Phone Number\n      \n    \n\n    \n      Organization\n      \n        \n          {{ org.name }}\n        \n      \n      \n        Organization is required\n      \n    \n  \n\n\n  Cancel\n  Submit\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Create User            Name                    Name is required                    Email                    Email is required                    Enter a valid email                    Phone Number                    Organization                        {{ org.name }}                            Organization is required              Cancel  Submit'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/profile/user-profile/user-profile.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButtonModule\n                            MatSnackBarModule\n                            CommonModule\n                            MatIconModule\n                            MatDialogModule\n                            NgOptimizedImage\n                            UploaderModule\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                authService\n                            \n                            \n                                    Readonly\n                                commonService\n                            \n                            \n                                    Readonly\n                                detectorRef\n                            \n                            \n                                    Readonly\n                                matDialog\n                            \n                            \n                                plan\n                            \n                            \n                                    Readonly\n                                sanitizer\n                            \n                            \n                                selectedFile\n                            \n                            \n                                selectedImageUrl\n                            \n                            \n                                    Readonly\n                                snackBar\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editProfile\n                            \n                            \n                                getProfile\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                onUpload\n                            \n                            \n                                toggleSideBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        editProfile\n                        \n                    \n                \n            \n            \n                \neditProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpload\n                        \n                    \n                \n            \n            \n                \nonUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideBar\n                        \n                    \n                \n            \n            \n                \ntoggleSideBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        commonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        detectorRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        matDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialog)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sanitizer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/profile/user-profile/user-profile.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ChangeDetectorRef, Component, EventEmitter, inject, Output } from '@angular/core';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { AuthService } from '../../../services/auth.service';\nimport { tap } from 'rxjs';\nimport { UploaderModule } from \"angular-uploader\";\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { NgOptimizedImage } from '@angular/common'\nimport { EditProfileComponent } from './dailog/edit-profile/edit-profile.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { CommonService } from '../../../services/common.service';\n@Component({\n  selector: 'app-user-profile',\n  standalone: true,\n  imports: [MatButtonModule, MatSnackBarModule, CommonModule,MatIconModule, MatDialogModule, NgOptimizedImage,\n    UploaderModule, MatIconModule //  {\n        this.user = profileData.user\n        this.plan = profileData.planDetails;\n        console.log(\"pp\", profileData);\n        this.detectorRef.detectChanges();\n\n      },\n      error => {\n        console.error('Error getting profile:', error);\n        this.snackBar.open('Error retrieving profile: ' + error.message, 'close');\n      }\n    );\n  }\n\n  editProfile(): void {\n    const dialogRef = this.matDialog.open(EditProfileComponent, {\n      width: '800px',\n      data: this.user,\n\n      });\n    dialogRef.afterClosed().subscribe((result)=>{\n      if(result){\n        this.getProfile();\n        }\n    })\n   }\n    // Handle file selection\n  onFileSelected(event: any): void {\n    const file = event.target.files[0];\n    if (file) {\n      this.selectedFile = file;\n\n      // Optional: Create a preview URL for the selected image\n      const objectUrl = URL.createObjectURL(file);\n      this.selectedImageUrl = this.sanitizer.bypassSecurityTrustUrl(objectUrl); // Safe preview URL\n\n      this.snackBar.open('File selected: ' + file.name, 'close', {\n        duration: 2000\n      });\n    }\n  }\n  onUpload(): void {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('image', this.selectedFile);\n\n      // Example: Upload the image to an API endpoint\n      // this.http.post('https://your-api-endpoint.com/upload', formData).subscribe(\n      //   (response) => {\n      //     this.snackbar.open('Image uploaded successfully', 'close', {\n      //       duration: 2000\n      //     });\n      //     // Optionally reset selected file and image preview\n      //     this.selectedFile = null;\n      //     this.selectedImageUrl = null;\n      //   },\n      //   (error) => {\n      //     this.snackbar.open('Image upload failed: ' + error.message, 'close', {\n      //       duration: 2000\n      //     });\n      //   }\n      // );\n    } else {\n      this.snackBar.open('Please select a file first', 'close', {\n        duration: 2000\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      menu\n    \n    Personal Information\n  \n  Edit Profile\n\n\n  \n    {{ user?.name }}\n    \n      \n        Role:\n        {{ user?.role ?? \"admin\" }}\n      \n      \n        Email:\n        {{ user?.email }}\n      \n      \n        Phone:\n        +{{ user?.phone }}\n      \n      \n        Created at:\n        {{ user?.createdAt | date : \"short\" }}\n      \n      \n        Address:\n        {{ user?.billingAddress }} {{ user?.city }}\n      \n      \n        City:\n        {{ user?.city }}\n      \n      \n        State:\n        {{ user?.state }}\n      \n      \n        Postal Code:\n        {{ user?.postalCode }}\n      \n      \n        Country:\n        {{ user?.country }}\n      \n      \n        Organization:\n        {{ user?.organization[0].name }}\n      \n      \n        Plan:\n        {{ plan?.plan || \"Free\" }}\n      \n      \n        Plan Amount:\n        {{plan?.plan.amount || '0'}} {{plan?.plan.currency || \"USD\"}}\n       -->\n      \n        Trial End Date:\n        {{ user?.trialEndDate | date : \"short\" }}\n      \n      \n        MFA Status:\n        \n          {{ user?.mfaEnabled ? \"Enabled\" : \"Disabled\" }}\n        \n      \n    \n  \n  \n    \n    \n\n    \n      Upload photo\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu        Personal Information    Edit Profile      {{ user?.name }}                  Role:        {{ user?.role ?? \"admin\" }}                    Email:        {{ user?.email }}                    Phone:        +{{ user?.phone }}                    Created at:        {{ user?.createdAt | date : \"short\" }}                    Address:        {{ user?.billingAddress }} {{ user?.city }}                    City:        {{ user?.city }}                    State:        {{ user?.state }}                    Postal Code:        {{ user?.postalCode }}                    Country:        {{ user?.country }}                    Organization:        {{ user?.organization[0].name }}                    Plan:        {{ plan?.plan || \"Free\" }}                    Plan Amount:        {{plan?.plan.amount || \\'0\\'}} {{plan?.plan.currency || \"USD\"}}       -->              Trial End Date:        {{ user?.trialEndDate | date : \"short\" }}                    MFA Status:                  {{ user?.mfaEnabled ? \"Enabled\" : \"Disabled\" }}                                        Upload photo      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/admin/users/users.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatTableModule\n                            MatSortModule\n                            MatIconModule\n                            MatPaginatorModule\n                            CommonModule\n                            MatButtonModule\n                            MatSnackBarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n            \n                styleUrl\n                ./users.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                dataSource\n                            \n                            \n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                organizationService\n                            \n                            \n                                    \n                                paginator\n                            \n                            \n                                snackBar\n                            \n                            \n                                    \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                onEdit\n                            \n                            \n                                openUsersDialog\n                            \n                            \n                                resendInvitation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/admin/users/users.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/admin/users/users.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/admin/users/users.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEdit\n                        \n                    \n                \n            \n            \n                \nonEdit(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/admin/users/users.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUsersDialog\n                        \n                    \n                \n            \n            \n                \nopenUsersDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/admin/users/users.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resendInvitation\n                        \n                    \n                \n            \n            \n                \nresendInvitation(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/admin/users/users.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/admin/users/users.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTableDataSource()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/admin/users/users.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialog)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/admin/users/users.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['name', 'email', 'phone', 'invitation', 'action', 'created']\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/admin/users/users.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organizationService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrganizationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/admin/users/users.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/admin/users/users.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/admin/users/users.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/admin/users/users.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { UserFormComponent } from '../../../dialog/user-form/user-form.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganizationService } from '../../../services/organization.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-users',\n  standalone: true,\n  imports: [MatTableModule, MatSortModule, MatIconModule, MatPaginatorModule, CommonModule, MatButtonModule, MatSnackBarModule],\n  templateUrl: './users.component.html',\n  styleUrl: './users.component.css'\n})\nexport class UsersComponent {\n\n  displayedColumns: string[] = ['name', 'email', 'phone', 'invitation', 'action', 'created'];\n  dataSource = new MatTableDataSource();\n  dialog = inject(MatDialog)\n  @ViewChild(MatPaginator)\n  paginator!: MatPaginator;\n  @ViewChild(MatSort) sort !: MatSort;\n  organizationService = inject(OrganizationService)\n  authService = inject(AuthService)\n  snackBar = inject(MatSnackBar);\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.organizationService.getInvitations().subscribe((res: any)=>{\n      console.log('res', res);\n      \n      this.dataSource.data = res\n    })\n    \n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  openUsersDialog(): void {\n   const dialogRef = this.dialog.open(UserFormComponent)\n    }\n  onEdit(user: any) {\n    console.log('Edit user:', user);\n    // Implement edit functionality\n  }\n\n  onDelete(user: any) {\n    console.log('Delete user:', user);\n    // Implement delete functionality\n  }\n\n  resendInvitation(user: any): void {\n    console.log('Resend invitation:', user);\n    this.authService.resendInvitation(user.organization, user.recipient._id).subscribe((Response)=>{\n      console.log('Response', Response);\n      this.snackBar.open('Invitation resent successfully', 'OK', {\n        duration: 2000,\n        });\n\n    })\n    \n  }\n}\n\n    \n\n    \n        \n    \n        Users\n    \n     create Users\n\n\n    \n  \n      \n      \n        Name\n        {{ user.recipient.name }}\n      \n  \n      \n      \n        Email\n        {{ user.recipient.email }}\n      \n  \n      \n      \n        Phone\n        {{ user.recipient.phone }}\n      \n  \n      \n      \n        Invitation\n        {{ user.status }}\n      \n  \n      \n      \n        Action\n        \n          \n            edit\n          \n          \n            delete\n          \n          \n            send\n\n          \n        \n\n      \n  \n      \n      \n        Created\n        {{ user.recipient.createdAt }}\n      \n  \n      \n      \n      \n    \n  \n    \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Users         create Users                          Name        {{ user.recipient.name }}                            Email        {{ user.recipient.email }}                            Phone        {{ user.recipient.phone }}                            Invitation        {{ user.status }}                            Action                              edit                                delete                                send                                              Created        {{ user.recipient.createdAt }}                                            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewNoteCompoent.html":{"url":"components/ViewNoteCompoent.html","title":"component - ViewNoteCompoent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewNoteCompoent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/notes/notes.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-note\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButtonModule\n                            MatDialogModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./view-note.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/notes/notes.component.ts:211\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { ChangeDetectorRef, Component, inject, OnInit } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogModule,\n} from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { tap, catchError } from 'rxjs';\nimport { NoteService } from '../../services/note.service';\nimport { NotesFormComponent } from '../../dialog/notes/notes-form.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonService } from '../../services/common.service';\n\n@Component({\n  selector: 'app-notes',\n  standalone: true,\n  imports: [\n    MatTableModule,\n    MatSortModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatChipsModule,\n    CommonModule,\n  ],\n  templateUrl: './notes.component.html',\n  styleUrl: './notes.component.css',\n})\nexport class NotesComponent implements OnInit {\n  notes: any[] = []; // Use a Subject to manage password updates\n  readonly passwordIds = [];\n  readonly changedetect = inject(ChangeDetectorRef);\n  readonly noteService = inject(NoteService);\n  readonly commonService = inject(CommonService);\n  readonly displayedColumns: string[] = [\n    'select',\n    '_id',\n    'title',\n    'content',\n    'created_by',\n    // 'tags',\n    'favourite',\n    'update_at',\n    'action',\n  ];\n  readonly dialog = inject(MatDialog);\n  isLoading: boolean = true;\n  selection = new SelectionModel(true, []);\n  searchTerm: string = '';\n  constructor() {}\n  ngOnInit(): void {\n    this.getNotes();\n  }\n  getNotes(): void {\n    this.isLoading = true;\n    this.noteService.getNotes(this.searchTerm).subscribe(\n      (response: any) => {\n        this.isLoading = false;\n        console.log('ff', response);\n\n        this.notes = response.data;\n        this.changedetect.detectChanges();\n      },\n      (error) => {\n        this.notes = [];\n        this.isLoading = false;\n        this.changedetect.detectChanges();\n      }\n    );\n  }\n\n  deleteNotes(id?: string): void {\n    const ids =\n      id ??\n      this.selection.selected\n        .map((note) => {\n          return note._id;\n        })\n        .join(',');\n    // Delete password using an observable\n    this.noteService\n      .deleteNote(ids)\n      .pipe(\n        tap(() => {\n          this.getNotes();\n        }),\n        catchError((error: any) => {\n          console.error('err', error);\n          throw error; // re-throw the error to prevent silent failures\n        })\n      )\n      .subscribe({\n        complete: () => {\n          this.changedetect.detectChanges();\n        },\n      });\n  }\n\n  trackById(index: number, item: any): number {\n    return item?._id; // assuming your Password object has an 'id' property\n  }\n\n  updateFavourites(noteId?: string): void {\n    const ids =\n      noteId ??\n      this.selection.selected\n        .map((pass) => {\n          return pass._id;\n        })\n        .join(',');\n    console.log('id', ids);\n\n    this.noteService.addToFavorites(ids).subscribe(\n      (response) => {\n        console.log('Password added to favorites successfully', response);\n        this.getNotes();\n        // Handle success, e.g., update UI\n      },\n      (error) => {\n        console.error('Error adding password to favorites', error);\n        // Handle error, e.g., display error message\n      }\n    );\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.notes.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.notes);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\n      row._id + 1\n    }`;\n  }\n\n  viewNotee(note: any): void {\n    this.dialog.open(ViewNoteCompoent, {\n      data: { note },\n    });\n  }\n  openNotesDialog(note: any): void {\n    const dialogRef = this.dialog.open(NotesFormComponent, {\n      data: { note },\n      width: '400px',\n    });\n\n    dialogRef.afterClosed().subscribe((res: any) => {\n      if (res) {\n        this.getNotes();\n      }\n    });\n  }\n  exportPassword(): void {\n    const ids = this.selection.selected\n      .map((pass) => {\n        return pass._id;\n      })\n      .join(',');\n    this.noteService.exportNotesAsCsv(ids).subscribe((blob: Blob) => {\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'passwords.csv';\n      a.click();\n    });\n  }\n\n  toggleSideBar(): void {\n    this.commonService.toggleSideBar()\n  }\n}\n@Component({\n  selector: 'app-view-note',\n  templateUrl: './view-note.html',\n  standalone: true,\n  imports: [MatButtonModule, MatDialogModule, CommonModule],\n})\nexport class ViewNoteCompoent {\n  readonly data = inject(MAT_DIALOG_DATA);\n}\n\n    \n\n    \n        \n    \n    \n        \n            {{data.note.title}}\n            {{data.note.content}}.\n            \n                Created: {{data.note.createdAt| date:\"short\"}}  \n                Updated: {{data.note.updatedAt | date:\"short\"}} \n            \n            Owner: {{data.note.ownerName}}\n        \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{data.note.title}}            {{data.note.content}}.                            Created: {{data.note.createdAt| date:\"short\"}}                  Updated: {{data.note.updatedAt | date:\"short\"}}                         Owner: {{data.note.ownerName}}                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewNoteCompoent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewPasswordComponent.html":{"url":"components/ViewPasswordComponent.html","title":"component - ViewPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialog/view-password/view-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatFormFieldModule\n                            ReactiveFormsModule\n                            FormsModule\n                            CommonModule\n                            MatExpansionModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./view-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./view-password.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                detectorRef\n                            \n                            \n                                newComment\n                            \n                            \n                                newTag\n                            \n                            \n                                    Readonly\n                                passwordService\n                            \n                            \n                                viewPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addComment\n                            \n                            \n                                addTag\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                removeTag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                commentAdded\n                            \n                            \n                                tagAdded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialog/view-password/view-password.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        commentAdded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialog/view-password/view-password.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tagAdded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialog/view-password/view-password.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addComment\n                        \n                    \n                \n            \n            \n                \naddComment()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/view-password/view-password.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTag\n                        \n                    \n                \n            \n            \n                \naddTag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/view-password/view-password.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/view-password/view-password.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTag\n                        \n                    \n                \n            \n            \n                \nremoveTag(tag: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dialog/view-password/view-password.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        detectorRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/view-password/view-password.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/view-password/view-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/view-password/view-password.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        passwordService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PasswordService)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/view-password/view-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialog/view-password/view-password.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ChangeDetectorRef, Component, EventEmitter, inject, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { PasswordService } from '../../services/password.service';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\n@Component({\n  selector: 'app-view-password',\n  standalone: true,\n  imports: [MatFormFieldModule, ReactiveFormsModule, FormsModule,CommonModule, MatExpansionModule],\n  templateUrl: './view-password.component.html',\n  styleUrl: './view-password.component.css'\n})\nexport class ViewPasswordComponent implements OnChanges {\n  @Input() password!: any ;\n  newComment: string = '';\n  newTag: string = '';\n  readonly passwordService = inject(PasswordService)\n  detectorRef = inject(ChangeDetectorRef)\n  viewPassword: any;\n\n  @Output() commentAdded = new EventEmitter();\n  @Output() tagAdded = new EventEmitter();\n\n    \n  ngOnChanges(changes: SimpleChanges): void {\n    console.log('dd',this.password);\n    this.viewPassword = this.password;\n    this.detectorRef.detectChanges()\n  }\n\n  addComment() {\n    if (this.newComment.trim()) {\n      const newComment: any = {\n        text: this.newComment,\n        createdAt: new Date().toISOString(),\n        userId: 'John Doe',\n      };\n      this.passwordService.postComment(this.password._id, this.newComment)\n      .subscribe(\n        response => {\n          console.log('Comment added successfully', response);\n          if (!this.password.comments) {\n            this.password.comments = [];\n          } \n          this.password.comments.push(newComment);\n          // Handle successful response (e.g., update UI)\n          this.commentAdded.emit(newComment);\n          this.newComment = '';\n        },\n        error => {\n          console.error('Error adding comment', error);\n          // Handle error response\n        }\n      );\n  }\n  }\n\n  addTag() {\n    if (this.newTag.trim()) {\n      // Initialize tags array if it's null\n      if (!this.password.tags) {\n        this.password.tags = [];\n      }\n    \n      // Add new tag to the array\n      this.passwordService.addTagToPassword(this.password._id, this.newTag).subscribe((res: any)=>{\n        this.password.tags.push(this.newTag.trim());\n        console.log('ppp', this.password);\n      \n        this.tagAdded.emit(this.newTag.trim());\n        this.newTag = '';\n        this.detectorRef.detectChanges();\n      })\n    }\n    \n  }\n\n  removeTag(tag: string) {\n    if (this.password?.tags) {\n      this.password.tags = this.password.tags.filter((t: string) => t !== tag);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n      \n        Password Details\n        \n          \n            {{ password?.name }}\n            {{ password?.createdAt | date: 'short' }}\n          \n        \n          \n            \n              Website:\n              {{ password?.website }}\n            \n        \n            \n              Username:\n              {{ password?.username }}\n            \n        \n            \n              Password:\n              {{ password?.password }}\n            \n        \n            \n              Description:\n              {{ password?.description || 'No description provided' }}\n            \n        \n            \n              Created By:\n              {{ password?.created_by?.name }}\n            \n        \n            \n              Modified By:\n              {{ password?.modifiedby?.name }}\n            \n        \n            \n              Updated At:\n              {{ password?.updatedAt | date: 'short' }}\n            \n        \n            \n              Favorite:\n              {{ password?.isFavorite ? 'Yes' : 'No' }}\n            \n          \n        \n        \n      \n  \n      \n      \n        \n        \n          \n            \n              Tags\n            \n          \n          \n            \n              \n                {{ tag.name }}\n                x\n              \n            \n            \n              \n              Add Tag\n            \n          \n        \n  \n      \n        \n          \n            \n              Comments\n            \n          \n      \n          \n            \n              \n                {{ comment.createdBy?.name || 'Unknown User' }}\n                {{ comment.content }}\n                {{ comment.createdAt | date }}\n              \n            \n            \n              No comments yet.\n            \n            \n              \n              Post Comment\n            \n          \n      \n        \n      \n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Password Details                              {{ password?.name }}            {{ password?.createdAt | date: \\'short\\' }}                                                      Website:              {{ password?.website }}                                              Username:              {{ password?.username }}                                              Password:              {{ password?.password }}                                              Description:              {{ password?.description || \\'No description provided\\' }}                                              Created By:              {{ password?.created_by?.name }}                                              Modified By:              {{ password?.modifiedby?.name }}                                              Updated At:              {{ password?.updatedAt | date: \\'short\\' }}                                              Favorite:              {{ password?.isFavorite ? \\'Yes\\' : \\'No\\' }}                                                                                                              Tags                                                                          {{ tag.name }}                x                                                                  Add Tag                                                                                  Comments                                                                                {{ comment.createdBy?.name || \\'Unknown User\\' }}                {{ comment.content }}                {{ comment.createdAt | date }}                                                    No comments yet.                                                    Post Comment                                                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Window.html":{"url":"interfaces/Window.html","title":"interface - Window","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Window\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            HSStaticMethods\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        HSStaticMethods\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        HSStaticMethods:     IStaticMethods\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IStaticMethods\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RouterModule, RouterOutlet } from '@angular/router';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { inject } from '@angular/core';\nimport { HeaderComponent } from './pages/header/header.component';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { IStaticMethods } from 'preline/preline';\nimport { AuthService } from './services/auth.service';\nimport { FooterComponent } from './pages/footer/footer.component';\nimport { CommonModule } from '@angular/common';\ndeclare global {\n  interface Window {\n    HSStaticMethods: IStaticMethods;\n  }\n}\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, RouterModule,HeaderComponent, FooterComponent, CommonModule],\n  templateUrl: './app.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n\n})\nexport class AppComponent implements OnInit {\n  readonly token = localStorage.getItem(\"token\");\n  readonly authService= inject(AuthService);\n  readonly router = inject(Router);;\n  readonly translate = inject(TranslateService);\n  hideHeader: boolean = false;\n  \n  ngOnInit(): void {\n    this.translate.addLangs(['en', 'klingon']);\n    this.translate.setDefaultLang('en');\n    this.translate.use('en');\n    this.router.events.subscribe((event:  any) => {   \n      this.hideHeader = event.url?.includes(\"/auth\")\n      if (event instanceof NavigationEnd) {\n        setTimeout(() => {\n          window.HSStaticMethods.autoInit();\n        }, 100);\n      }\n    });\n    if (this.token) {\n      this.authService.getProfile().subscribe((res) => {\n\n      })\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/api.interceptor.ts\n            \n            variable\n            apiInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            Window\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/invitation-accept/invitation-accept.component.ts\n            \n            component\n            InvitationAcceptComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/auth/mfa-verification/mfa-verification.component.ts\n            \n            component\n            MfaVerificationComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/auth/password-change/password-change.component.ts\n            \n            component\n            PasswordChangeComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/auth/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                0 %\n                (0/51)\n            \n        \n        \n            \n                \n                        src/app/country.ts\n            \n            variable\n            countries\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/dashboard/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/dashboard/admin/organizations/organizations.component.ts\n            \n            component\n            OrganizationsComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/dashboard/admin/roles-permissions/roles-permissions.component.ts\n            \n            component\n            RolesPermissionsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/admin/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/dashboard/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/dashboard/card/card.component.ts\n            \n            component\n            viewCardDetailsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/dashboard/file-explorer/file-explorer.component.ts\n            \n            component\n            FileExplorerComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/dashboard/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/id-proof/id-proof.component.ts\n            \n            component\n            IdProofComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/dashboard/id-proof/id-proof.component.ts\n            \n            interface\n            IdProof\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/dashboard/notes/notes.component.ts\n            \n            component\n            NotesComponent\n            \n                8 %\n                (2/24)\n            \n        \n        \n            \n                \n                src/app/dashboard/notes/notes.component.ts\n            \n            component\n            ViewNoteCompoent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/dashboard/password/password.component.ts\n            \n            component\n            PasswordComponent\n            \n                2 %\n                (1/34)\n            \n        \n        \n            \n                \n                src/app/dashboard/profile/billing-details/billing-details.component.ts\n            \n            component\n            BillingDetailsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/profile/mfa-setting/mfa-setting.component.ts\n            \n            component\n            MfaSettingComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/dashboard/profile/notification/notification.component.ts\n            \n            component\n            NotificationComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/profile/password-change/password-change.component.ts\n            \n            component\n            PasswordChangeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/dashboard/profile/security/security.component.ts\n            \n            component\n            SecurityComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/profile/user-profile/dailog/edit-profile/edit-profile.component.ts\n            \n            component\n            EditProfileComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/profile/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/dashboard/side-nav/side-nav.component.ts\n            \n            component\n            SideNavComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/dialog/create-folder-dialog/create-folder-dialog.component.ts\n            \n            component\n            CreateFolderDialogComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/dialog/credit-card-form/credit-card-form.component.ts\n            \n            component\n            CreditCardFormComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/dialog/file-upload/file-upload.component.ts\n            \n            component\n            FileUploadComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/dialog/idproofform/idproofform.component.ts\n            \n            component\n            IdproofformComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dialog/notes/notes-form.component.ts\n            \n            component\n            NotesFormComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/dialog/organization/organization.component.ts\n            \n            component\n            OrganizationComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/dialog/password-form/password-form.component.ts\n            \n            component\n            PasswordFormComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/dialog/password-form/password-form.component.ts\n            \n            component\n            TagFormCompoent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/dialog/share-dialog/share-dialog.component.ts\n            \n            component\n            ShareDialogComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/dialog/user-form/user-form.component.ts\n            \n            component\n            UserFormComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/dialog/view-password/view-password.component.ts\n            \n            component\n            ViewPasswordComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/pages/api-docs/api-docs.component.ts\n            \n            component\n            ApiDocsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/download/download.component.ts\n            \n            component\n            DownloadComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/index/index.component.ts\n            \n            component\n            IndexComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/password-genrator/password-genrator.component.ts\n            \n            component\n            PasswordGenratorComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/pages/password-strength/password-strength.component.ts\n            \n            component\n            PasswordStrengthComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/pricing-page/pricing-page.component.ts\n            \n            component\n            PricingPageComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/pages/privacy-policy/privacy-policy.component.ts\n            \n            component\n            PrivacyPolicyComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/services/card.service.ts\n            \n            injectable\n            CardService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/file.service.ts\n            \n            injectable\n            FileService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/folder.service.ts\n            \n            injectable\n            FolderService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/folder.service.ts\n            \n            interface\n            Folder\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/note.service.ts\n            \n            injectable\n            NoteService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/organization.service.ts\n            \n            injectable\n            OrganizationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/password.service.ts\n            \n            injectable\n            PasswordService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/services/plan.service.ts\n            \n            injectable\n            PlanService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/proof-id.service.ts\n            \n            injectable\n            ProofIdService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/roles-permissions.service.ts\n            \n            injectable\n            RolesPermissionsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/security-question.service.ts\n            \n            injectable\n            SecurityQuestionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/shared-item.service.ts\n            \n            injectable\n            SharedItemService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/support/support.component.ts\n            \n            component\n            SupportComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.electron.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/cdk : ^18.0.4\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.3\n        \n            @angular/material : ^18.0.4\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @fortawesome/fontawesome-free : ^6.6.0\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            @preline/strong-password : ^2.3.0\n        \n            angular-uploader : ^8.41.1\n        \n            axios : ^1.7.2\n        \n            check-password-strength : ^2.0.10\n        \n            crypto-js : ^4.2.0\n        \n            electron-builder : ^24.13.3\n        \n            electron-squirrel-startup : ^1.0.1\n        \n            file-saver : ^2.0.5\n        \n            generate-password : ^1.7.1\n        \n            license-report : ^6.7.0\n        \n            material-icons : ^1.13.12\n        \n            ngx-paypal : ^11.0.0\n        \n            path : ^0.12.7\n        \n            path-browserify : ^1.0.1\n        \n            preline : ^2.3.0\n        \n            random-words : ^2.0.1\n        \n            rxjs : ~7.8.0\n        \n            swagger-ui-dist : ^5.17.14\n        \n            update-electron-app : ^3.0.0\n        \n            uuid : ^10.0.0\n        \n            zone.js : ~0.14.3\n        \n            zxcvbn : ^4.4.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpLoaderFactory   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPassword Vault - User Interface (UI) Readme\nProject Overview\nThis document outlines the user interface (UI) design principles and functionalities of the Password Vault application. It provides a high-level overview for developers building the UI and users familiarizing themselves with the available features.\nAuthentication\n\nSecure login using username/email and password.\nImplement robust password hashing (e.g., bcrypt) to store passwords securely.\nConsider two-factor authentication (2FA) for enhanced security (optional).\n\nPassword Management\n\nAdd Passwords:\nProvide a user-friendly form for entering website URL, username, password, and optional notes.\nValidate user input for proper formatting (e.g., strong password requirements).\nEncrypt passwords using a secure encryption algorithm before storing them in the user's vault.\n\n\nEdit Passwords:\nAllow users to modify existing passwords from their vault.\nRetain website URL, username, and notes while enabling password updates.\nReapply validation and encryption during edits.\n\n\nDelete Passwords:\nImplement confirmation prompts to prevent accidental deletion.\nRemove password entries from the user's vault securely.\n\n\nShare Passwords (Optional):\nEnable secure sharing of passwords with designated users (if applicable).\nImplement access control mechanisms to define who can view or modify shared passwords.\nConsider temporary or one-time access options for enhanced security.\n\n\n\nAutofill\n\nIntegrate with web browsers (if applicable) to automatically fill website login forms with stored credentials.\nEnsure autofill functionality respects user preferences (e.g., only on trusted domains).\nMaintain compatibility with different web browser extensions or native autofill support.\n\nUI Design Principles\n\nClean and Intuitive Interface: Create a user-friendly layout that is easy to navigate and understand.\nData Visualization: Consider utilizing visual elements (e.g., password strength indicators) to enhance user experience.\nResponsiveness: Design the UI to adapt seamlessly across various screen sizes (desktop, mobile, tablets).\nAccessibility: Ensure the UI is accessible to users with disabilities, following WCAG guidelines.\n\nTechnology Stack (Suggestions)\n\nFront-end Framework ( Angular, etc.)\nJavaScript Library for Encryption (e.g., crypto.js)\nSecure Storage Mechanisms (browser storage with encryption, password manager API, etc.)\nUI Component Library (Angular material, tailwind css etc.)\n\nIntegration with Cone (if applicable)\n\nIf Cone provides a UI component or library for password management, consider integrating it into the Password Vault UI for a cohesive user experience.\nEnsure proper communication between Password Vault and Cone for data synchronization and management.\n\nStarting the App\n1. Prerequisites:\n\nEnsure you have Node.js (version X.X.X or later) and npm (or yarn) installed.\nConfigure and install any additional dependencies required by Cone or your chosen technology stack.\n\n2. Running the Password Vault UI:\n\nClone the Password Vault UI repository from your version control system (e.g., Git).\n\nNavigate to the project directory:\nExample :run git clone https://github.com/pratikdevelop/password-app-ui.git\ncd password-app-ui\nInstall dependencies:\nExample :npm install\n(Optional) If applicable, configure Cone integration.\n\nStart the development server:\nExample :npm start\nThe UI should typically launch in your default web browser at http://localhost:3000 (or a different port depending on your configuration).\n\n\nSecurity Considerations\n\nPrioritize user privacy and data security.\nUse industry-standard encryption algorithms and secure storage mechanisms.\nImplement proper input validation and error handling.\nRegularly update libraries and dependencies to address vulnerabilities.\n\nFuture Considerations\n\nIntegration with password manager desktop applications.\nTwo-factor authentication (2FA) support.\nPassword breach monitoring and alerts.\nAdvanced password sharing features (granular access control, permissions, etc.).\n\nThis README provides a foundation for building a secure and user-friendly password management application UI. Remember to adapt it to your specific project requirements and chosen technology stack. The instructions for adding Cone and starting the app are general guidelines and may need further customization based on your implementation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    50 Components\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            Description : Your Password Management Application\n        \n            License : UNLICENSED\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiInterceptor   (src/.../api.interceptor.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            countries   (src/.../country.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.electron.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/api.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n\n    // Add your logic here to retrieve the token\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      // Clone the request and add the Authorization header\n      const authRequest = req.clone({\n        headers: new HttpHeaders().set('Authorization', `Bearer ${token}`),\n      });\n\n      return next(authRequest);\n    } else {\n      // the case where there's no token (optional)\n      return next(req); // Pass through the original request\n    }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideAnimationsAsync(),\n    provideHttpClient(withInterceptors([apiInterceptor])),\n    provideAnimationsAsync(),\n    importProvidersFrom([TranslateModule.forRoot(\n      {\n        loader: {\n          provide: TranslateLoader,\n          useFactory: HttpLoaderFactory,\n          deps: [HttpClient]\n          }\n      }\n    )]),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const router = inject(Router);\n  const email = route.queryParams['username'];\n  const password = route.queryParams['password'];\n  const token = localStorage.getItem('token');\n  \n  if (token) { \n    const authRoutes = ['/signup', '/reset-password', '/login' ,'/home', '/email-confirmation'];\n    const isAuthRoutes = authRoutes.some(route => state.url.includes(route));\n    if(isAuthRoutes) {\n      router.navigate(['/'])\n      return false\n    }\n    return true;\n  } else {\n    const publicRoutes = ['pricing-page', 'download','password-strength', 'generator', 'privacy-policy'];\n    const isPublicRoute = publicRoutes.find(route => state.url.includes(route));\n\n    if (!token && !isPublicRoute) {\n      router.navigate((email && password) ? [`auth/login?username=${route.queryParams['username']}&password=${route.queryParams['password']}`] : [`auth/login`]);\n      return false;\n    } \n    return true\n    // Token doesn't exist, user is not authenticated\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/country.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        countries\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n          name: 'Afghanistan',\n          shortName: 'AFG',\n          code:\"+93\",\n          states: [\n            {\n              name: 'Kabul',\n              cities: ['Kabul', 'Paghman', 'Charikar']\n            },\n            {\n              name: 'Kandahar',\n              cities: ['Kandahar City', 'Spin Boldak']\n            },\n            {\n              name: 'Herat',\n              cities: ['Herat City', 'Islam Qala']\n            },\n            {\n              name: 'Balkh',\n              cities: ['Mazar-i-Sharif', 'Balkh City']\n            },\n            {\n              name: 'Nangarhar',\n              cities: ['Jalalabad', 'Behsud']\n            },\n            {\n              name: 'Badakhshan',\n              cities: ['Fayzabad', 'Jurm']\n            },\n            {\n              name: 'Baghlan',\n              cities: ['Pul-e-Khumri', 'Baghlan City']\n            },\n            {\n              name: 'Ghazni',\n              cities: ['Ghazni City', 'Qarabagh']\n            },\n            {\n              name: 'Faryab',\n              cities: ['Maymana', 'Andkhoy']\n            },\n            {\n              name: 'Helmand',\n              cities: ['Lashkar Gah', 'Sangin']\n            }\n          ]\n        },\n      \n    { name: 'United States', code: '+1', shortName: 'USA', states: [\n        { state: 'Alabama', abbreviation: 'AL', cities: ['Birmingham', 'Montgomery', 'Huntsville', 'Mobile', 'Tuscaloosa'] },\n        { state: 'Alaska', abbreviation: 'AK', cities: ['Anchorage', 'Fairbanks', 'Juneau', 'Sitka', 'Ketchikan'] },\n        { state: 'Arizona', abbreviation: 'AZ', cities: ['Phoenix', 'Tucson', 'Mesa', 'Chandler', 'Scottsdale'] },\n        { state: 'Arkansas', abbreviation: 'AR', cities: ['Little Rock', 'Fort Smith', 'Fayetteville', 'Springdale', 'Jonesboro'] },\n        { state: 'California', abbreviation: 'CA', cities: ['Los Angeles', 'San Francisco', 'San Diego', 'San Jose', 'Sacramento'] },\n        { state: 'Colorado', abbreviation: 'CO', cities: ['Denver', 'Colorado Springs', 'Aurora', 'Fort Collins', 'Lakewood'] },\n        { state: 'Connecticut', abbreviation: 'CT', cities: ['Hartford', 'Bridgeport', 'New Haven', 'Stamford', 'Waterbury'] },\n        { state: 'Delaware', abbreviation: 'DE', cities: ['Wilmington', 'Dover', 'Newark', 'Middletown', 'Smyrna'] },\n        { state: 'Florida', abbreviation: 'FL', cities: ['Jacksonville', 'Miami', 'Tampa', 'Orlando', 'St. Petersburg'] },\n        { state: 'Georgia', abbreviation: 'GA', cities: ['Atlanta', 'Augusta', 'Columbus', 'Savannah', 'Macon'] },\n        { state: 'Hawaii', abbreviation: 'HI', cities: ['Honolulu', 'Hilo', 'Kailua', 'Kaneohe', 'Lahaina'] },\n        { state: 'Idaho', abbreviation: 'ID', cities: ['Boise', 'Nampa', 'Meridian', 'Idaho Falls', 'Pocatello'] },\n        { state: 'Illinois', abbreviation: 'IL', cities: ['Chicago', 'Aurora', 'Naperville', 'Rockford', 'Joliet'] },\n        { state: 'Indiana', abbreviation: 'IN', cities: ['Indianapolis', 'Fort Wayne', 'Evansville', 'South Bend', 'Carmel'] },\n        { state: 'Iowa', abbreviation: 'IA', cities: ['Des Moines', 'Cedar Rapids', 'Davenport', 'Sioux City', 'Iowa City'] },\n        { state: 'Kansas', abbreviation: 'KS', cities: ['Wichita', 'Overland Park', 'Kansas City', 'Topeka', 'Olathe'] },\n        { state: 'Kentucky', abbreviation: 'KY', cities: ['Louisville', 'Lexington', 'Bowling Green', 'Covington', 'Richmond'] },\n        { state: 'Louisiana', abbreviation: 'LA', cities: ['New Orleans', 'Baton Rouge', 'Shreveport', 'Lafayette', 'Lake Charles'] },\n        { state: 'Maine', abbreviation: 'ME', cities: ['Portland', 'Augusta', 'Bangor', 'South Portland', 'Auburn'] },\n        { state: 'Maryland', abbreviation: 'MD', cities: ['Baltimore', 'Frederick', 'Rockville', 'Gaithersburg', 'Bowie'] },\n        { state: 'Massachusetts', abbreviation: 'MA', cities: ['Boston', 'Worcester', 'Springfield', 'Cambridge', 'Lowell'] },\n        { state: 'Michigan', abbreviation: 'MI', cities: ['Detroit', 'Grand Rapids', 'Warren', 'Sterling Heights', 'Ann Arbor'] },\n        { state: 'Minnesota', abbreviation: 'MN', cities: ['Minneapolis', 'Saint Paul', 'Rochester', 'Duluth', 'Bloomington'] },\n        { state: 'Mississippi', abbreviation: 'MS', cities: ['Jackson', 'Gulfport', 'Southaven', 'Hattiesburg', 'Biloxi'] },\n        { state: 'Missouri', abbreviation: 'MO', cities: ['Kansas City', 'St. Louis', 'Springfield', 'Columbia', 'Independence'] },\n        { state: 'Montana', abbreviation: 'MT', cities: ['Billings', 'Missoula', 'Great Falls', 'Bozeman', 'Butte'] },\n        { state: 'Nebraska', abbreviation: 'NE', cities: ['Omaha', 'Lincoln', 'Bellevue', 'Grand Island', 'Kearney'] },\n        { state: 'Nevada', abbreviation: 'NV', cities: ['Las Vegas', 'Henderson', 'Reno', 'North Las Vegas', 'Sparks'] },\n        { state: 'New Hampshire', abbreviation: 'NH', cities: ['Manchester', 'Nashua', 'Concord', 'Derry', 'Rochester'] },\n        { state: 'New Jersey', abbreviation: 'NJ', cities: ['Newark', 'Jersey City', 'Paterson', 'Elizabeth', 'Edison'] },\n        { state: 'New Mexico', abbreviation: 'NM', cities: ['Albuquerque', 'Las Cruces', 'Santa Fe', 'Roswell', 'Farmington'] },\n        { state: 'New York', abbreviation: 'NY', cities: ['New York City', 'Buffalo', 'Rochester', 'Yonkers', 'Syracuse'] },\n        { state: 'North Carolina', abbreviation: 'NC', cities: ['Charlotte', 'Raleigh', 'Greensboro', 'Durham', 'Winston-Salem'] },\n        { state: 'North Dakota', abbreviation: 'ND', cities: ['Fargo', 'Bismarck', 'Grand Forks', 'Minot', 'West Fargo'] },\n        { state: 'Ohio', abbreviation: 'OH', cities: ['Columbus', 'Cleveland', 'Cincinnati', 'Toledo', 'Akron'] },\n        { state: 'Oklahoma', abbreviation: 'OK', cities: ['Oklahoma City', 'Tulsa', 'Norman', 'Broken Arrow', 'Edmond'] },\n        { state: 'Oregon', abbreviation: 'OR', cities: ['Portland', 'Salem', 'Eugene', 'Gresham', 'Hillsboro'] },\n        { state: 'Pennsylvania', abbreviation: 'PA', cities: ['Philadelphia', 'Pittsburgh', 'Allentown', 'Erie', 'Reading'] },\n        { state: 'Rhode Island', abbreviation: 'RI', cities: ['Providence', 'Warwick', 'Cranston', 'Pawtucket', 'East Providence'] },\n        { state: 'South Carolina', abbreviation: 'SC', cities: ['Columbia', 'Charleston', 'North Charleston', 'Mount Pleasant', 'Rock Hill'] },\n        { state: 'South Dakota', abbreviation: 'SD', cities: ['Sioux Falls', 'Rapid City', 'Aberdeen', 'Brookings', 'Mitchell'] },\n        { state: 'Tennessee', abbreviation: 'TN', cities: ['Nashville', 'Memphis', 'Knoxville', 'Chattanooga', 'Clarksville'] },\n        { state: 'Texas', abbreviation: 'TX', cities: ['Houston', 'San Antonio', 'Dallas', 'Austin', 'Fort Worth'] },\n        { state: 'Utah', abbreviation: 'UT', cities: ['Salt Lake City', 'West Valley City', 'Provo', 'Sandy', 'Orem'] },\n        { state: 'Vermont', abbreviation: 'VT', cities: ['Burlington', 'Essex', 'South Burlington', 'Rutland', 'Barre'] },\n        { state: 'Virginia', abbreviation: 'VA', cities: ['Virginia Beach', 'Norfolk', 'Chesapeake', 'Richmond', 'Newport News'] },\n        { state: 'Washington', abbreviation: 'WA', cities: ['Seattle', 'Spokane', 'Tacoma', 'Vancouver', 'Bellevue'] },\n        { state: 'West Virginia', abbreviation: 'WV', cities: ['Charleston', 'Huntington', 'Morgantown', 'Parkersburg', 'Weirton'] },\n        { state: 'Wisconsin', abbreviation: 'WI', cities: ['Milwaukee', 'Madison', 'Green Bay', 'Kenosha', 'Racine'] },\n        { state: 'Wyoming', abbreviation: 'WY', cities: ['Cheyenne', 'Casper', 'Laramie', 'Gillette', 'Rock Springs'] },\n      ]\n           },\n    { name: 'United Kingdom', code: '+44', shortName: 'UK',states: [\n        { state: 'England', abbreviation: 'ENG', cities: ['London', 'Birmingham', 'Manchester', 'Liverpool', 'Bristol'] },\n        { state: 'Scotland', abbreviation: 'SCT', cities: ['Edinburgh', 'Glasgow', 'Aberdeen', 'Dundee', 'Inverness'] },\n        { state: 'Wales', abbreviation: 'WLS', cities: ['Cardiff', 'Swansea', 'Newport', 'Wrexham', 'Barry'] },\n        { state: 'Northern Ireland', abbreviation: 'NIR', cities: ['Belfast', 'Derry', 'Lisburn', 'Newtownabbey', 'Carrickfergus'] },\n      ]\n     },\n    { name: 'India', code: '+91', shortName: 'IND', states: [\n        { state: 'Andhra Pradesh', abbreviation: 'AP', cities: ['Hyderabad', 'Visakhapatnam', 'Vijayawada', 'Guntur', 'Nellore'] },\n        { state: 'Arunachal Pradesh', abbreviation: 'AR', cities: ['Itanagar', 'Naharlagun', 'Pasighat', 'Tezpur', 'Bomdila'] },\n        { state: 'Assam', abbreviation: 'AS', cities: ['Guwahati', 'Dispur', 'Dibrugarh', 'Silchar', 'Nagaon'] },\n        { state: 'Bihar', abbreviation: 'BR', cities: ['Patna', 'Gaya', 'Bhagalpur', 'Muzaffarpur', 'Darbhanga'] },\n        { state: 'Chhattisgarh', abbreviation: 'CG', cities: ['Raipur', 'Bilaspur', 'Durg', 'Bhilai', 'Korba'] },\n        { state: 'Goa', abbreviation: 'GA', cities: ['Panaji', 'Margao', 'Vasco da Gama', 'Ponda', 'Mapusa'] },\n        { state: 'Gujarat', abbreviation: 'GJ', cities: ['Ahmedabad', 'Surat', 'Vadodara', 'Rajkot', 'Gandhinagar'] },\n        { state: 'Haryana', abbreviation: 'HR', cities: ['Chandigarh', 'Gurgaon', 'Faridabad', 'Hisar', 'Panipat'] },\n        { state: 'Himachal Pradesh', abbreviation: 'HP', cities: ['Shimla', 'Dharamshala', 'Kullu', 'Manali', 'Solan'] },\n        { state: 'Jharkhand', abbreviation: 'JH', cities: ['Ranchi', 'Jamshedpur', 'Dhanbad', 'Bokaro', 'Deoghar'] },\n        { state: 'Karnataka', abbreviation: 'KA', cities: ['Bengaluru', 'Mysuru', 'Mangaluru', 'Hubli', 'Davangere'] },\n        { state: 'Kerala', abbreviation: 'KL', cities: ['Thiruvananthapuram', 'Kochi', 'Kozhikode', 'Kollam', 'Malappuram'] },\n        { state: 'Madhya Pradesh', abbreviation: 'MP', cities: ['Bhopal', 'Indore', 'Gwalior', 'Jabalpur', 'Ujjain'] },\n        { state: 'Maharashtra', abbreviation: 'MH', cities: ['Mumbai', 'Pune', 'Nagpur', 'Nashik', 'Aurangabad'] },\n        { state: 'Manipur', abbreviation: 'MN', cities: ['Imphal', 'Thoubal', 'Kakching', 'Churachandpur', 'Tamenglong'] },\n        { state: 'Meghalaya', abbreviation: 'ML', cities: ['Shillong', 'Tura', 'Jowai', 'Nongpoh', 'Bholaganj'] },\n        { state: 'Mizoram', abbreviation: 'MZ', cities: ['Aizawl', 'Lunglei', 'Saiha', 'Kolasib', 'Mamit'] },\n        { state: 'Nagaland', abbreviation: 'NL', cities: ['Kohima', 'Dimapur', 'Mokokchung', 'Tuensang', 'Wokha'] },\n        { state: 'Odisha', abbreviation: 'OR', cities: ['Bhubaneswar', 'Cuttack', 'Rourkela', 'Berhampur', 'Sambalpur'] },\n        { state: 'Punjab', abbreviation: 'PB', cities: ['Chandigarh', 'Ludhiana', 'Amritsar', 'Jalandhar', 'Patiala'] },\n        { state: 'Rajasthan', abbreviation: 'RJ', cities: ['Jaipur', 'Udaipur', 'Jodhpur', 'Ajmer', 'Bikaner'] },\n        { state: 'Sikkim', abbreviation: 'SK', cities: ['Gangtok', 'Namchi', 'Mangan', 'Gyalshing', 'Pakyong'] },\n        { state: 'Tamil Nadu', abbreviation: 'TN', cities: ['Chennai', 'Coimbatore', 'Madurai', 'Tiruchirappalli', 'Salem'] },\n        { state: 'Telangana', abbreviation: 'TG', cities: ['Hyderabad', 'Warangal', 'Nizamabad', 'Khammam', 'Karimnagar'] },\n        { state: 'Tripura', abbreviation: 'TR', cities: ['Agartala', 'Ambassa', 'Udaipur', 'Dharmanagar', 'Belonia'] },\n        { state: 'Uttar Pradesh', abbreviation: 'UP', cities: ['Lucknow', 'Kanpur', 'Agra', 'Varanasi', 'Meerut'] },\n        { state: 'Uttarakhand', abbreviation: 'UK', cities: ['Dehradun', 'Haridwar', 'Nainital', 'Rudrapur', 'Roorkee'] },\n        { state: 'West Bengal', abbreviation: 'WB', cities: ['Kolkata', 'Siliguri', 'Asansol', 'Durgapur', 'Howrah'] },\n      ] },\n    { name: 'Australia', code: '+61', shortName: 'AUS',  states: [\n        { state: 'New South Wales', abbreviation: 'NSW', cities: ['Sydney', 'Newcastle', 'Wollongong', 'Central Coast', 'Coffs Harbour'] },\n        { state: 'Victoria', abbreviation: 'VIC', cities: ['Melbourne', 'Geelong', 'Ballarat', 'Bendigo', 'Mildura'] },\n        { state: 'Queensland', abbreviation: 'QLD', cities: ['Brisbane', 'Gold Coast', 'Cairns', 'Townsville', 'Mackay'] },\n        { state: 'Western Australia', abbreviation: 'WA', cities: ['Perth', 'Bunbury', 'Mandurah', 'Geraldton', 'Kalgoorlie'] },\n        { state: 'South Australia', abbreviation: 'SA', cities: ['Adelaide', 'Mount Gambier', 'Whyalla', 'Murray Bridge', 'Port Augusta'] },\n        { state: 'Tasmania', abbreviation: 'TAS', cities: ['Hobart', 'Launceston', 'Devonport', 'Burnie', 'Kingston'] },\n        { state: 'Australian Capital Territory', abbreviation: 'ACT', cities: ['Canberra', 'Queanbeyan', 'Gungahlin', 'Tuggeranong', 'Belconnen'] },\n        { state: 'Northern Territory', abbreviation: 'NT', cities: ['Darwin', 'Alice Springs', 'Katherine', 'Casuarina', 'Palmerston'] },      \n    ] },\n        { name: 'Japan', code: '+81', shortName: 'JPN', states: [{ state: 'Tokyo', cities: ['Tokyo', 'Shinjuku', 'Shibuya', 'Ikebukuro'] }] },\n        { name: 'Germany', code: '+49', shortName: 'DEU', states: [{ state: 'Bavaria', cities: ['Munich', 'Nuremberg', 'Augsburg', 'Regensburg'] }] },\n        { name: 'Canada', code: '+1', shortName: 'CAN', states: [{ state: 'Ontario', cities: ['Toronto', 'Ottawa', 'Mississauga', 'Brampton'] }] },\n        { name: 'France', code: '+33', shortName: 'FRA', states: [{ state: 'Île-de-France', cities: ['Paris', 'Versailles', 'Boulogne-Billancourt', 'Saint-Denis'] }] },\n        { name: 'Brazil', code: '+55', shortName: 'BRA', states: [{ state: 'São Paulo', cities: ['São Paulo', 'Campinas', 'Santo André', 'Osasco'] }] },\n        { name: 'Mexico', code: '+52', shortName: 'MEX', states: [{ state: 'Mexico City', cities: ['Mexico City', 'Ecatepec', 'Nezahualcóyotl', 'Tlalnepantla'] }] },\n        { name: 'Italy', code: '+39', shortName: 'ITA', states: [{ state: 'Lazio', cities: ['Rome', 'Fiumicino', 'Tivoli', 'Civitavecchia'] }] },\n        { name: 'Russia', code: '+7', shortName: 'RUS', states: [{ state: 'Moscow', cities: ['Moscow', 'Zelenograd', 'Podolsk', 'Khimki'] }] },\n        { name: 'South Africa', code: '+27', shortName: 'ZAF', states: [{ state: 'Gauteng', cities: ['Johannesburg', 'Pretoria', 'Soweto', 'Ekurhuleni'] }] },\n        { name: 'Netherlands', code: '+31', shortName: 'NLD', states: [{ state: 'North Holland', cities: ['Amsterdam', 'Haarlem', 'Hilversum', 'Alkmaar'] }] },\n        { name: 'Spain', code: '+34', shortName: 'ESP', states: [{ state: 'Madrid', cities: ['Madrid', 'Alcalá de Henares', 'Móstoles', 'Getafe'] }] },\n        { name: 'Turkey', code: '+90', shortName: 'TUR', states: [{ state: 'Istanbul', cities: ['Istanbul', 'Kadıköy', 'Beyoğlu', 'Şişli'] }] },\n        { name: 'New Zealand', code: '+64', shortName: 'NZL', states: [{ state: 'Auckland', cities: ['Auckland', 'Hamilton', 'Tauranga', 'Dunedin'] }] },\n        { name: 'Sweden', code: '+46', shortName: 'SWE', states: [{ state: 'Stockholm', cities: ['Stockholm', 'Uppsala', 'Sundbyberg', 'Södertälje'] }] },\n        { name: 'Norway', code: '+47', shortName: 'NOR', states: [{ state: 'Oslo', cities: ['Oslo', 'Drammen', 'Bergen', 'Stavanger'] }] },\n        { name: 'Argentina', code: '+54', shortName: 'ARG', states: [{ state: 'Buenos Aires', cities: ['Buenos Aires', 'La Plata', 'Mar del Plata', 'Rosario'] }] },\n        { name: 'Chile', code: '+56', shortName: 'CHL', states: [{ state: 'Santiago Metropolitan', cities: ['Santiago', 'Puente Alto', 'Maipú', 'Las Condes'] }] },\n        { name: 'Singapore', code: '+65', shortName: 'SGP', states: [{ state: 'Central Region', cities: ['Singapore', 'Jurong', 'Yishun', 'Bukit Batok'] }] },\n        { name: 'Philippines', code: '+63', shortName: 'PHL', states: [{ state: 'Metro Manila', cities: ['Manila', 'Quezon City', 'Caloocan', 'Pasig'] }] },\n        { name: 'Indonesia', code: '+62', shortName: 'IDN', states: [{ state: 'Bali', cities: ['Denpasar', 'Ubud', 'Kuta', 'Seminyak'] }] },\n        { name: 'Thailand', code: '+66', shortName: 'THA', states: [{ state: 'Bangkok', cities: ['Bangkok', 'Nonthaburi', 'Samut Prakan', 'Nakhon Pathom'] }] },\n        { name: 'Vietnam', code: '+84', shortName: 'VNM', states: [{ state: 'Hanoi', cities: ['Hanoi', 'Ho Chi Minh City', 'Hai Phong', 'Da Nang'] }] },\n        { name: 'Pakistan', code: '+92', shortName: 'PAK', states: [{ state: 'Punjab', cities: ['Lahore', 'Faisalabad', 'Rawalpindi', 'Multan'] }] },\n        { name: 'Bangladesh', code: '+880', shortName: 'BGD', states: [{ state: 'Dhaka', cities: ['Dhaka', 'Chittagong', 'Khulna', 'Rajshahi'] }] },\n        { name: 'Nigeria', code: '+234', shortName: 'NGA', states: [{ state: 'Lagos', cities: ['Lagos', 'Ikeja', 'Victoria Island', 'Badagry'] }] },\n        { name: 'Egypt', code: '+20', shortName: 'EGY', states: [{ state: 'Cairo', cities: ['Cairo', 'Giza', 'Alexandria', 'Shubra El Kheima'] }] },\n        { name: 'Saudi Arabia', code: '+966', shortName: 'SAU', states: [{ state: 'Riyadh', cities: ['Riyadh', 'Jeddah', 'Dammam', 'Khobar'] }] },\n        { name: 'United Arab Emirates', code: '+971', shortName: 'ARE', states: [{ state: 'Dubai', cities: ['Dubai', 'Abu Dhabi', 'Sharjah', 'Ajman'] }] },\n        { name: 'Israel', code: '+972', shortName: 'ISR', states: [{ state: 'Tel Aviv', cities: ['Tel Aviv', 'Jerusalem', 'Haifa', 'Rishon Lezion'] }] },\n        { name: 'Malaysia', code: '+60', shortName: 'MYS', states: [{ state: 'Selangor', cities: ['Shah Alam', 'Subang Jaya', 'Petaling Jaya', 'Klang'] }] },\n        { name: 'Ireland', code: '+353', shortName: 'IRL', states: [{ state: 'Leinster', cities: ['Dublin', 'Cork', 'Limerick', 'Waterford'] }] },\n        { name: 'Czech Republic', code: '+420', shortName: 'CZE', states: [{ state: 'Prague', cities: ['Prague', 'Brno', 'Ostrava', 'Plzeň'] }] },\n        { name: 'Greece', code: '+30', shortName: 'GRC', states: [{ state: 'Attica', cities: ['Athens', 'Piraeus', 'Kallithea', 'Peristeri'] }] },\n        { name: 'Finland', code: '+358', shortName: 'FIN', states: [{ state: 'Uusimaa', cities: ['Helsinki', 'Espoo', 'Vantaa', 'Kauniainen'] }] },\n        { name: 'Hungary', code: '+36', shortName: 'HUN', states: [{ state: 'Budapest', cities: ['Budapest', 'Debrecen', 'Szeged', 'Miskolc'] }] },\n        { name: 'Iceland', code: '+354', shortName: 'ISL', states: [{ state: 'Reykjavík', cities: ['Reykjavík', 'Kopavogur', 'Hafnarfjordur', 'Akureyri'] }] },\n        { name: 'Portugal', code: '+351', shortName: 'PRT', states: [{ state: 'Lisbon', cities: ['Lisbon', 'Porto', 'Amadora', 'Braga'] }] },\n        { name: 'Estonia', code: '+372', shortName: 'EST', states: [{ state: 'Tallinn', cities: ['Tallinn', 'Tartu', 'Narva', 'Kohtla-Järve'] }] },\n        { name: 'Latvia', code: '+371', shortName: 'LVA', states: [{ state: 'Riga', cities: ['Riga', 'Daugavpils', 'Liepaja', 'Jelgava'] }] },\n        { name: 'Lithuania', code: '+370', shortName: 'LTU', states: [{ state: 'Vilnius', cities: ['Vilnius', 'Kaunas', 'Klaipeda', 'Šiauliai'] }] },\n        { name: 'Slovakia', code: '+421', shortName: 'SVK', states: [{ state: 'Bratislava', cities: ['Bratislava', 'Košice', 'Nitra', 'Prešov'] }] },\n        { name: 'Slovenia', code: '+386', shortName: 'SVN', states: [{ state: 'Ljubljana', cities: ['Ljubljana', 'Maribor', 'Celje', 'Kranj'] }] },\n        { name: 'Serbia', code: '+381', shortName: 'SRB', states: [{ state: 'Belgrade', cities: ['Belgrade', 'Novi Sad', 'Niš', 'Kragujevac'] }] },\n        { name: 'Croatia', code: '+385', shortName: 'HRV', states: [{ state: 'Zagreb', cities: ['Zagreb', 'Split', 'Rijeka', 'Osijek'] }] },\n        { name: 'Bosnia and Herzegovina', code: '+387', shortName: 'BIH', states: [{ state: 'Federation of Bosnia and Herzegovina', cities: ['Sarajevo', 'Zenica', 'Tuzla', 'Mostar'] }] },\n        { name: 'Montenegro', code: '+382', shortName: 'MNE', states: [{ state: 'Podgorica', cities: ['Podgorica', 'Nikšić', 'Herceg Novi', 'Bijelo Polje'] }] },\n        { name: 'North Macedonia', code: '+389', shortName: 'MKD', states: [{ state: 'Skopje', cities: ['Skopje', 'Bitola', 'Kumanovo', 'Tetovo'] }] },\n        { name: 'Albania', code: '+355', shortName: 'ALB', states: [{ state: 'Tirana', cities: ['Tirana', 'Durrës', 'Vlorë', 'Fier'] }] },\n        { name: 'Moldova', code: '+373', shortName: 'MDA', states: [{ state: 'Chișinău', cities: ['Chișinău', 'Bălți', 'Bender', 'Rîbnița'] }] },\n        { name: 'Armenia', code: '+374', shortName: 'ARM', states: [{ state: 'Yerevan', cities: ['Yerevan', 'Gyumri', 'Vagharshapat', 'Vanadzor'] }] },\n        { name: 'Georgia', code: '+995', shortName: 'GEO', states: [{ state: 'Tbilisi', cities: ['Tbilisi', 'Kutaisi', 'Zugdidi', 'Batumi'] }] },\n        { name: 'Kazakhstan', code: '+7', shortName: 'KAZ', states: [{ state: 'Almaty', cities: ['Almaty', 'Astana', 'Shymkent', 'Karaganda'] }] },\n        { name: 'Uzbekistan', code: '+998', shortName: 'UZB', states: [{ state: 'Tashkent', cities: ['Tashkent', 'Samarkand', 'Bukhara', 'Andijan'] }] },\n        { name: 'Kyrgyzstan', code: '+996', shortName: 'KGZ', states: [{ state: 'Bishkek', cities: ['Bishkek', 'Osh', 'Jalal-Abad', 'Tokmok'] }] },\n        { name: 'Tajikistan', code: '+992', shortName: 'TJK', states: [{ state: 'Dushanbe', cities: ['Dushanbe', 'Khujand', 'Kulob', 'Istaravshan'] }] },\n        { name: 'Turkmenistan', code: '+993', shortName: 'TKM', states: [{ state: 'Ashgabat', cities: ['Ashgabat', 'Turkmenbashi', 'Mary', 'Balkanabat'] }] },\n        { name: 'Qatar', code: '+974', shortName: 'QAT', states: [{ state: 'Doha', cities: ['Doha', 'Al Rayyan', 'Al Wakrah', 'Umm Salal'] }] },\n        { name: 'Oman', code: '+968', shortName: 'OMN', states: [{ state: 'Muscat', cities: ['Muscat', 'Salalah', 'Sohar', 'Nizwa'] }] },\n        { name: 'Bahrain', code: '+973', shortName: 'BHR', states: [{ state: 'Manama', cities: ['Manama', 'Muharraq', 'Riffa', 'Sitra'] }] },\n        { name: 'Kuwait', code: '+965', shortName: 'KWT', states: [{ state: 'Kuwait City', cities: ['Kuwait City', 'Al Ahmadi', 'Hawalli', 'Salmiya'] }] },\n        { name: 'Lebanon', code: '+961', shortName: 'LBN', states: [{ state: 'Beirut', cities: ['Beirut', 'Tripoli', 'Sidon', 'Tyre'] }] },\n        { name: 'Syria', code: '+963', shortName: 'SYR', states: [{ state: 'Damascus', cities: ['Damascus', 'Aleppo', 'Homs', 'Latakia'] }] },\n        { name: 'Jordan', code: '+962', shortName: 'JOR', states: [{ state: 'Amman', cities: ['Amman', 'Zarqa', 'Irbid', 'Ajloun'] }] },\n        { name: 'Yemen', code: '+967', shortName: 'YEM', states: [{ state: 'Sana\\'a', cities: ['Sana\\'a', 'Aden', 'Taiz', 'Hodeida'] }] },\n        { name: 'Bhutan', code: '+975', shortName: 'BTN', states: [{ state: 'Thimphu', cities: ['Thimphu', 'Paro', 'Punakha', 'Wangdue Phodrang'] }] },\n        { name: 'Maldives', code: '+960', shortName: 'MDV', states: [{ state: 'Malé', cities: ['Malé', 'Addu City', 'Fuvahmulah', 'Kulhudhuffushi'] }] },\n        { name: 'Brunei', code: '+673', shortName: 'BRN', states: [{ state: 'Bandar Seri Begawan', cities: ['Bandar Seri Begawan', 'Kuala Belait', 'Seria', 'Tutong'] }] },\n        { name: 'Myanmar', code: '+95', shortName: 'MMR', states: [{ state: 'Yangon', cities: ['Yangon', 'Mandalay', 'Naypyidaw', 'Bago'] }] },\n        { name: 'Cambodia', code: '+855', shortName: 'KHM', states: [{ state: 'Phnom Penh', cities: ['Phnom Penh', 'Siem Reap', 'Battambang', 'Sihanoukville'] }] },\n        { name: 'Laos', code: '+856', shortName: 'LAO', states: [{ state: 'Vientiane', cities: ['Vientiane', 'Luang Prabang', 'Savannakhet', 'Pakse'] }] },\n        { name: 'Mongolia', code: '+976', shortName: 'MNG', states: [{ state: 'Ulaanbaatar', cities: ['Ulaanbaatar', 'Erdenet', 'Darkhan', 'Mörön'] }] },\n        { name: 'Nepal', code: '+977', shortName: 'NPL', states: [{ state: 'Kathmandu', cities: ['Kathmandu', 'Pokhara', 'Lalitpur', 'Bhaktapur'] }] },\n        { name: 'Sri Lanka', code: '+94', shortName: 'LKA', states: [{ state: 'Western', cities: ['Colombo', 'Galle', 'Kandy', 'Negombo'] }] },\n        { name: 'Somalia', code: '+252', shortName: 'SOM', states: [{ state: 'Mogadishu', cities: ['Mogadishu', 'Hargeisa', 'Kismayo', 'Baidoa'] }] },\n        { name: 'Sudan', code: '+249', shortName: 'SDN', states: [{ state: 'Khartoum', cities: ['Khartoum', 'Omdurman', 'Port Sudan', 'El Obeid'] }] },\n        { name: 'Zimbabwe', code: '+263', shortName: 'ZWE', states: [{ state: 'Harare', cities: ['Harare', 'Bulawayo', 'Gweru', 'Kwekwe'] }] },\n        { name: 'Kenya', code: '+254', shortName: 'KEN', states: [{ state: 'Nairobi', cities: ['Nairobi', 'Mombasa', 'Nakuru', 'Eldoret'] }] },\n        { name: 'Uganda', code: '+256', shortName: 'UGA', states: [{ state: 'Kampala', cities: ['Kampala', 'Entebbe', 'Mbarara', 'Jinja'] }] },\n        { name: 'Tanzania', code: '+255', shortName: 'TZA', states: [{ state: 'Dodoma', cities: ['Dodoma', 'Dar es Salaam', 'Arusha', 'Mbeya'] }] },\n        { name: 'Rwanda', code: '+250', shortName: 'RWA', states: [{ state: 'Kigali', cities: ['Kigali', 'Butare', 'Gisenyi', 'Musanze'] }] },\n        { name: 'Ghana', code: '+233', shortName: 'GHA', states: [{ state: 'Accra', cities: ['Accra', 'Kumasi', 'Tamale', 'Takoradi'] }] },\n        { name: 'Angola', code: '+244', shortName: 'AGO', states: [{ state: 'Luanda', cities: ['Luanda', \"N'dalatando\", 'Huambo', 'Lubango'] }] },\n        { name: 'Zambia', code: '+260', shortName: 'ZMB', states: [{ state: 'Lusaka', cities: ['Lusaka', 'Kitwe', 'Ndola', 'Kabwe'] }] },\n        { name: 'Botswana', code: '+267', shortName: 'BWA', states: [{ state: 'Gaborone', cities: ['Gaborone', 'Francistown', 'Maun', 'Kasane'] }] },\n        { name: 'Namibia', code: '+264', shortName: 'NAM', states: [{ state: 'Windhoek', cities: ['Windhoek', 'Swakopmund', 'Walvis Bay', 'Oshakati'] }] },\n        { name: 'Lesotho', code: '+266', shortName: 'LSO', states: [{ state: 'Maseru', cities: ['Maseru', 'Teyateyaneng', 'Maputsoe', 'Quthing'] }] },\n        { name: 'Swaziland', code: '+268', shortName: 'SWZ', states: [{ state: 'Mbabane', cities: ['Mbabane', 'Manzini', 'Siteki', 'Piggs Peak'] }] },\n        { name: 'Malawi', code: '+265', shortName: 'MWI', states: [{ state: 'Lilongwe', cities: ['Lilongwe', 'Blantyre', 'Mzuzu', 'Zomba'] }] },\n        { name: 'Sierra Leone', code: '+232', shortName: 'SLE', states: [{ state: 'Freetown', cities: ['Freetown', 'Bo', 'Kenema', 'Makeni'] }] },\n        { name: 'Liberia', code: '+231', shortName: 'LBR', states: [{ state: 'Monrovia', cities: ['Monrovia', 'Gbarnga', 'Kakata', 'Bong'] }] },\n        { name: 'Togo', code: '+228', shortName: 'TGO', states: [{ state: 'Lomé', cities: ['Lomé', 'Sokodé', 'Kpalimé', 'Atakpamé'] }] },\n        { name: 'Ivory Coast', code: '+225', shortName: 'CIV', states: [{ state: 'Yamoussoukro', cities: ['Yamoussoukro', 'Abidjan', 'Bouaké', 'San Pedro'] }] },\n        { name: 'Senegal', code: '+221', shortName: 'SEN', states: [{ state: 'Dakar', cities: ['Dakar', 'Touba', 'Thiès', 'Saint-Louis'] }] },\n        { name: 'Cameroon', code: '+237', shortName: 'CMR', states: [{ state: 'Yaoundé', cities: ['Yaoundé', 'Douala', 'Garoua', 'Bafoussam'] }] },\n        { name: 'Chad', code: '+235', shortName: 'TCD', states: [{ state: \"N'Djamena\", cities: [\"N'Djamena\", 'Moundou', 'Sarh', 'Abéché'] }] },\n        { name: 'Central African Republic', code: '+236', shortName: 'CAF', states: [{ state: 'Bangui', cities: ['Bangui', 'Berberati', 'Bimbo', 'Mbaïki'] }] },\n        { name: 'Republic of the Congo', code: '+242', shortName: 'COG', states: [{ state: 'Brazzaville', cities: ['Brazzaville', 'Pointe-Noire', 'Dolisie', 'Oyo'] }] },\n        { name: 'Democratic Republic of the Congo', code: '+243', shortName: 'COD', states: [{ state: 'Kinshasa', cities: ['Kinshasa', 'Lubumbashi', 'Mbuji-Mayi', 'Kisangani'] }] },\n        { name: 'Gabon', code: '+241', shortName: 'GAB', states: [{ state: 'Libreville', cities: ['Libreville', 'Port-Gentil', 'Franceville', 'Moanda'] }] },\n        { name: 'Equatorial Guinea', code: '+240', shortName: 'GNQ', states: [{ state: 'Malabo', cities: ['Malabo', 'Bata', 'Ebebiyin', 'Aconibe'] }] },\n        { name: 'Mauritius', code: '+230', shortName: 'MUS', states: [{ state: 'Port Louis', cities: ['Port Louis', 'Beau Bassin-Rose Hill', 'Vacoas-Phoenix', 'Curepipe'] }] },\n        { name: 'Mali', code: '+223', shortName: 'MLI', states: [{ state: 'Bamako', cities: ['Bamako', 'Sikasso', 'Kayes', 'Mopti'] }] },\n        { name: 'Niger', code: '+227', shortName: 'NER', states: [{ state: 'Niamey', cities: ['Niamey', 'Zinder', 'Maradi', 'Agadez'] }] },\n        { name: 'Burkina Faso', code: '+226', shortName: 'BFA', states: [{ state: 'Ouagadougou', cities: ['Ouagadougou', 'Bobo-Dioulasso', 'Koudougou', 'Banfora'] }] },\n        { name: 'Burundi', code: '+257', shortName: 'BDI', states: [{ state: 'Gitega', cities: ['Gitega', 'Bujumbura', 'Ngozi', 'Cankuzo'] }] },\n        { name: 'Djibouti', code: '+253', shortName: 'DJI', states: [{ state: 'Djibouti', cities: ['Djibouti', 'Ali Sabieh', 'Dikhil', 'Tadjourah'] }] },\n        { name: 'Sao Tome and Principe', code: '+239', shortName: 'STP', states: [{ state: 'São Tomé', cities: ['São Tomé', 'Principe', 'Neves', 'Santa Catarina'] }] },\n        { name: 'Gambia', code: '+220', shortName: 'GMB', states: [{ state: 'Banjul', cities: ['Banjul', 'Serrekunda', 'Brikama', 'Gunjur'] }] },\n        { name: 'Comoros', code: '+269', shortName: 'COM', states: [{ state: 'Moroni', cities: ['Moroni', 'Moutsamoudou', 'Domoni', 'Fumbuni'] }] },\n        { name: 'Seychelles', code: '+248', shortName: 'SYC', states: [{ state: 'Victoria', cities: ['Victoria', 'Beau Vallon', 'Anse Royale', 'Praslin'] }] },\n        { name: 'Anguilla', code: '+1 264', shortName: 'AIA', states: [{ state: 'The Valley', cities: ['The Valley', 'East End', 'Blowing Point', 'Sandy Ground'] }] },\n        { name: 'Antigua and Barbuda', code: '+1 268', shortName: 'ATG', states: [{ state: `Saint John's`, cities: [\"Saint John's\", 'All Saints', 'Liberta', 'Freetown'] }] },\n        { name: 'Saint Kitts and Nevis', code: '+1 869', shortName: 'KNA', states: [{ state: 'Basseterre', cities: ['Basseterre', 'Clayton J. Lloyd International Airport'] }] },\n        { name: 'Dominica', code: '+1 767', shortName: 'DMA', states: [{ state: 'Roseau', cities: ['Roseau', ' Portsmouth', 'Marigot', 'La Plaine'] }] },\n        { name: 'Saint Lucia', code: '+1 758', shortName: 'LCA', states: [{ state: 'Castries', cities: ['Castries', 'Vieux Fort', 'Soufrière', 'Gros Islet'] }] },\n        { name: 'Saint Vincent and the Grenadines', code: '+1 784', shortName: 'VCT', states: [{ state: 'Kingstown', cities: ['Kingstown', 'Villa', 'Barrouallie', 'Bequia'] }] },\n        { name: 'Grenada', code: '+1 473', shortName: 'GRD', states: [{ state: 'Saint George\\'s', cities: ['Saint George\\'s', 'Gouyave', 'Victoria', 'Grenville'] }] },\n        { name: 'Barbados', code: '+1 246', shortName: 'BRB', states: [{ state: 'Bridgetown', cities: ['Bridgetown', 'Speightstown', 'Oistins', 'Bathsheba'] }] },\n        { name: 'Bahamas', code: '+1 242', shortName: 'BHS', states: [{ state: 'Nassau', cities: ['Nassau', 'Freeport', 'West End', 'Marsh Harbour'] }] },\n        { name: 'Cayman Islands', code: '+1 345', shortName: 'CYM', states: [{ state: 'George Town', cities: ['George Town', 'West Bay', 'Bodden Town', 'East End'] }] },\n        { name: 'Turks and Caicos Islands', code: '+1 649', shortName: 'TCA', states: [{ state: 'Grand Turk', cities: ['Cockburn Town', 'Grand Turk', 'Salt Cay', 'South Caicos'] }] },\n        { name: 'Jamaica', code: '+1 876', shortName: 'JAM', states: [{ state: 'Kingston', cities: ['Kingston', 'Montego Bay', 'Portmore', 'Spanish Town'] }] },\n        { name: 'Puerto Rico', code: '+1 787', shortName: 'PRI', states: [{ state: 'San Juan', cities: ['San Juan', 'Bayamon', 'Ponce', 'Caguas'] }] },\n        { name: 'Dominican Republic', code: '+1 809', shortName: 'DOM', states: [{ state: 'Santo Domingo', cities: ['Santo Domingo', 'Santiago de los Caballeros', 'La Romana', 'San Pedro de Macorís'] }] },\n        { name: 'Haiti', code: '+509', shortName: 'HTI', states: [{ state: 'Port-au-Prince', cities: ['Port-au-Prince', 'Cap-Haïtien', 'Les Cayes', 'Pétion-Ville'] }] },\n        { name: 'Cuba', code: '+53', shortName: 'CUB', states: [{ state: 'Havana', cities: ['Havana', 'Santiago de Cuba', 'Camagüey', 'Holguín'] }] },\n        { name: 'Nicaragua', code: '+505', shortName: 'NIC', states: [{ state: 'Managua', cities: ['Managua', 'León', 'Masaya', 'Granada'] }] },\n        { name: 'Costa Rica', code: '+506', shortName: 'CRI', states: [{ state: 'San José', cities: ['San José', 'Alajuela', 'Cartago', 'Heredia'] }] },\n        { name: 'Panama', code: '+507', shortName: 'PAN', states: [{ state: 'Panama City', cities: ['Panama City', 'Colón', 'David', 'Chitré'] }] },\n        { name: 'El Salvador', code: '+503', shortName: 'SLV', states: [{ state: 'San Salvador', cities: ['San Salvador', 'Santa Ana', 'San Miguel', 'La Libertad'] }] },\n        { name: 'Guatemala', code: '+502', shortName: 'GTM', states: [{ state: 'Guatemala City', cities: ['Guatemala City', 'Mixco', 'Villa Nueva', 'Quetzaltenango'] }] },\n        { name: 'Honduras', code: '+504', shortName: 'HND', states: [{ state: 'Tegucigalpa', cities: ['Tegucigalpa', 'San Pedro Sula', 'Choloma', 'La Ceiba'] }] },\n        { name: 'Belize', code: '+501', shortName: 'BLZ', states: [{ state: 'Belmopan', cities: ['Belmopan', 'San Ignacio', 'Orange Walk', 'Corozal'] }] },\n        { name: 'Barbados', code: '+1 246', shortName: 'BRB', states: [{ state: 'Bridgetown', cities: ['Bridgetown', 'Speightstown', 'Oistins', 'Bathsheba'] }] }\n  ]\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    isElectron: false,\n    api_url: \"http://localhost:3000/api\",\n\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.electron.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    isElectron: true,\n    api_url: \"http://localhost:3000/api\",\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: true,\n    isElectron: false,\n    api_url: \"http://54.224.249.251/api\",\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/viewCardDetailsComponent.html":{"url":"components/viewCardDetailsComponent.html","title":"component - viewCardDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  viewCardDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/card/card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButtonModule\n                            MatDialogModule\n                            CommonModule\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./view-card-details.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                    Readonly\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/card/card.component.ts:193\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/card/card.component.ts:192\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/card/card.component.ts:191\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject, OnInit } from '@angular/core';\nimport { CardService } from '../../services/card.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CommonModule } from '@angular/common';\nimport { MatMenuModule } from '@angular/material/menu';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogModule,\n} from '@angular/material/dialog';\nimport { CreditCardFormComponent } from '../../dialog/credit-card-form/credit-card-form.component';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { catchError, tap } from 'rxjs';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FormsModule } from '@angular/forms';\nimport { CommonService } from '../../services/common.service';\n\n@Component({\n  selector: 'app-card',\n  standalone: true,\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    MatTableModule,\n    MatSortModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatPaginatorModule,\n    CommonModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    FormsModule\n  ],\n  templateUrl: './card.component.html',\n  styleUrl: './card.component.css',\n})\nexport class CardComponent implements OnInit {\n  readonly matDialog = inject(MatDialog);\n  readonly changeDetectorRef = inject(ChangeDetectorRef);\n  readonly cardSerrvice = inject(CardService);\n  readonly commonService = inject(CommonService)\n  selection = new SelectionModel(true, []);\n  dataSource: any[] = [];\n  searchTerm: string = '';\n  displayedColumns: string[] = [\n    'select',\n    '_id',\n    'cardType',\n    'cardNumber',\n    'cardHolderName',\n    'expiryDate',\n    'CVV',\n    'billingAddress',\n    'createdAt',\n    'created_by',\n    'action',\n  ];\n\n  ngOnInit(): void {\n    this.getCardsListings();\n  }\n\n  getCardsListings(): void {\n    this.cardSerrvice.getCards().subscribe((response: any) => {\n      this.dataSource = response;\n      this.changeDetectorRef.detectChanges();\n    });\n  }\n  openCardFormDialog(card: any) {\n    this.matDialog.open(CreditCardFormComponent, {\n      width: '500px',\n      data: card,\n    });\n  }\n\n  deleteCard(id?: string): void {\n    const ids =\n      id ??\n      this.selection.selected\n        .map((note) => {\n          return note._id;\n        })\n        .join(',');\n    // Delete password using an observable\n    this.cardSerrvice\n      .deleteCard(ids)\n      .pipe(\n        tap(() => {\n          this.getCardsListings();\n        }),\n        catchError((error: any) => {\n          console.error('err', error);\n          throw error; // re-throw the error to prevent silent failures\n        })\n      )\n      .subscribe({\n        complete: () => {\n          this.changeDetectorRef.detectChanges();\n        },\n      });\n  }\n  viewCardDetails(cardDetails: any): void {\n    this.matDialog.open(viewCardDetailsComponent, {\n      data: { cardDetails },\n    });\n  }\n\n  exportPassword(): void {\n    const ids = this.selection.selected\n      .map((pass) => {\n        return pass._id;\n      })\n      .join(',');\n    this.cardSerrvice.exportCardsASCsv(ids).subscribe((blob: Blob) => {\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'passwords.csv';\n      a.click();\n    });\n  }\n\n  updateFavourites(cardId?: string): void {\n    const ids =\n      cardId ??\n      this.selection.selected\n        .map((pass) => {\n          return pass._id;\n        })\n        .join(',');\n    console.log('id', ids);\n\n    this.cardSerrvice.addToFavorites(ids).subscribe(\n      (response) => {\n        console.log('Password added to favorites successfully', response);\n        this.getCardsListings();\n        // Handle success, e.g., update UI\n      },\n      (error) => {\n        console.error('Error adding password to favorites', error);\n        // Handle error, e.g., display error message\n      }\n    );\n  }\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.length;\n    return numSelected === numRows;\n  }\n\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource);\n  }\n\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\n      row._id + 1\n    }`;\n  }\n\n  transform(cardNumber: string): string {\n    return cardNumber.replace(/\\s+/g, '').replace(/(\\d{4})/g, '$1 ').trim();\n}\ntoggleSideBar(): void {\n    this.commonService.toggleSideBar()\n}\n}\n\n@Component({\n  selector: 'app-view-card',\n  templateUrl: './view-card-details.html',\n  standalone: true,\n  imports: [MatButtonModule, MatDialogModule, CommonModule, MatIconModule],\n})\nexport class viewCardDetailsComponent implements OnInit {\n  readonly data = inject(MAT_DIALOG_DATA);\n  card: any;\n  ngOnInit(): void {\n  this.card = this.data.cardDetails  \n  }\n}\n\n    \n\n    \n        \n    \n      Card Details\n      \n        close\n      \n    \n    \n      \n        Card Type: {{ card.cardType }}\n      \n      \n        Card Number: {{ card.cardNumber }}\n      \n      \n        Card Holder Name: {{ card.cardHolderName }}\n      \n      \n        Expiry Date: {{ card.expiryDate | date }}\n      \n      \n        CVV: {{ card.CVV }}\n      \n      \n        Billing Address: {{ card.billingAddress }}\n      \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Card Details              close                            Card Type: {{ card.cardType }}                    Card Number: {{ card.cardNumber }}                    Card Holder Name: {{ card.cardHolderName }}                    Expiry Date: {{ card.expiryDate | date }}                    CVV: {{ card.CVV }}                    Billing Address: {{ card.billingAddress }}            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admiiin'},{'name': 'ApiDocsComponent', 'selector': 'app-api-docs'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BillingDetailsComponent', 'selector': 'app-billing-details'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CreateFolderDialogComponent', 'selector': 'app-create-folder-dialog'},{'name': 'CreditCardFormComponent', 'selector': 'app-credit-card-form'},{'name': 'DashboardComponent', 'selector': 'app-dashbloard'},{'name': 'DownloadComponent', 'selector': 'app-download'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FileExplorerComponent', 'selector': 'app-file-explorer'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IdProofComponent', 'selector': 'app-id-proof'},{'name': 'IdproofformComponent', 'selector': 'app-idproofform'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InvitationAcceptComponent', 'selector': 'app-invitation-accept'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MfaSettingComponent', 'selector': 'app-mfa-setting'},{'name': 'MfaVerificationComponent', 'selector': 'app-mfa-verification'},{'name': 'NotesComponent', 'selector': 'app-notes'},{'name': 'NotesFormComponent', 'selector': 'app-notes-form'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'OrganizationsComponent', 'selector': 'app-organizations'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordChangeComponent', 'selector': 'app-password-change'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'PasswordFormComponent', 'selector': 'app-password-form'},{'name': 'PasswordGenratorComponent', 'selector': 'app-password-genrator'},{'name': 'PasswordStrengthComponent', 'selector': 'app-password-strength'},{'name': 'PricingPageComponent', 'selector': 'app-pricing-page'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesPermissionsComponent', 'selector': 'app-roles-permissions'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'ShareDialogComponent', 'selector': 'app-share-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagFormCompoent', 'selector': 'app-tag'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'viewCardDetailsComponent', 'selector': 'app-view-card'},{'name': 'ViewNoteCompoent', 'selector': 'app-view-note'},{'name': 'ViewPasswordComponent', 'selector': 'app-view-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'viewCardDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
